#!/bin/bash
cd /rails
echo "rails startup"              >>/rails/log/unicorn.log

# We want to run scheduling and db tasks only on the master. For single box environments
# APP_MASTER_SERVER will not be set so run all the time
if ( [ -z "$APP_MASTER_SERVER" ] || [ "$APP_HOST" == "$APP_MASTER_SERVER" ] ); then

    case ${DOCKER_STATE} in
    migrate)
        echo "running migrate"        >>/rails/log/unicorn.log
        bundle exec rake db:migrate   >>/rails/log/unicorn.log 2>&1
        ;;
    seed)
        echo "running seed"           >>/rails/log/unicorn.log
        bundle exec rake db:migrate   >>/rails/log/unicorn.log 2>&1
        bundle exec rake db:seed      >>/rails/log/unicorn.log 2>&1
        USER_CREATE=${RAILS_USER:-'admin@admin.com, 123456789, admin'}
        echo $USER_CREATE
        echo "creating user $USER_CREATE"            >>/rails/log/unicorn.log
        bundle exec rake "user:create[$USER_CREATE]" >>/rails/log/unicorn.log 2>&1
        ;;
    esac
    if [ -n "${IMPORT_URL}" ]; then
        echo "Running import from URL ${IMPORT_URL}"
        if [ -n "${IMPORT_CREDS}" ]; then
            IMPORT_PARAMS="--user ${IMPORT_CREDS}"
        else
            IMPORT_PARAMS=""
        fi
        curl -o /tmp/dbimport ${IMPORT_PARAMS} "${IMPORT_URL}" 2>>/rails/log/unicorn.log
        bundle exec rake db:import_transform[/tmp/dbimport] >>/rails/log/unicorn.log 2>&1
    fi


    echo "Master server: Running whenever"   >>/rails/log/unicorn.log
    bundle exec whenever --update-crontab    >>/rails/log/unicorn.log 2>&1

else
    echo "Slave server: skipping DB and cron configuration"   >>/rails/log/unicorn.log
fi

# Increment restart metric
echo "restart.rails:1|s" | nc.traditional -w 1 -u 127.0.0.1 8125

echo "Starting unicorn"           >>/rails/log/unicorn.log
exec bundle exec unicorn -p 80    >>/rails/log/unicorn.log 2>&1

