.form-group
  label.form-label for="answer_submitted"  Date answer submitted
  .datetimepicker
    input#answer_submitted.form-control name="pq[answer_submitted]" type="text" value=(@pq.answer_submitted.to_s) /
    span.fa.fa-calendar
- if @pq.answer_submitted.present? && @pq.date_for_answer.present?
  - @answer_target = @pq.date_for_answer + 18.hours
  - if @pq.answer_submitted <= @answer_target
    p.text
      i.fa.fa-check-circle
      | Answer submitted on time
  - elsif @pq.answer_submitted > @answer_target
    p.text
      i.fa.fa-thumbs-o-down
      | Answer NOT submitted on time

= render partial: 'gds_checkbox', locals: { value: @pq.library_deposit,
                                            field: 'library_deposit',
                                            label: 'Library deposit' }

.form-group
  label.form-label for="pq_withdrawn"  Date PQ withdrawn
  .datetimepicker
    input#pq_withdrawn.form-control name="pq[pq_withdrawn]" type="text" value=(@pq.pq_withdrawn.to_s) /
    span.fa.fa-calendar

= render partial: 'gds_checkbox', locals: { value: @pq.holding_reply_flag,
                                            field: 'holding_reply_flag',
                                            label: 'Holding reply flag' }
- unless @pq.is_follow_up?
  = link_to ("Create 'I will write' follow up"), {controller: 'i_will_write', action: 'create', id: @pq.uin}, {id: 'create_iww', class: 'button-secondary', title: 'Create an ''I will write'' follow up'}
.form-group
  label.form-label for="pq_final_response_info_released"  Final response information released
  = f.select(:final_response_info_released, options_for_select(Pq::RESPONSES))
