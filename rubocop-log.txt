Inspecting 439 files
WCCCCCCCC.CCC.CCCC.C.CCCCCCCCCCCCWCCCWC.C.WCCWCCCCCW.CCCCC.CCCCWC.CC.CCWC.CCCCCCCC.CCCCCCWWWCWWCWWCCCWCC.CCCCCCCCCWC.C....CCWWC..C.CCCWWWCCCCCCCCWCWCCCCWCCCWCWCCCCCCCCWCCWCC.CWCWWC.CCCCCWC.CWWCC.C...C.CC.C......CCCCCCCCCWCCWWW.WC.CCCCCCCCWCWWCCCCCWC.CCCWCWCCWCCWWWWCCCCWCCCCCCWCCCCCCWWCCCWCWCWWCWCWCCCCC.WWCCWCC.C.WCWWCW..WWCCCCCCWCC.CWCCWCWCCCCCWCWWC.CW..C.CC.C.C.C..C......CCC.C.C..C.CCWCC...C.C..C...C...CCCCC..CC...CCCC.CC..CCC..CCCCCC

Offenses:

Guardfile:17:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
guard :rspec, cmd: "bundle exec rspec -fd" do
                   ^^^^^^^^^^^^^^^^^^^^^^^
Guardfile:18:45: W: Lint/UnusedBlockArgument: Unused block argument - m. You can omit the argument if you don't care about it.
  watch(%r{^config/initializers/.+\.rb}) { |m| 'spec' }
                                            ^
config.ru:3:52: C: Layout/ExtraSpacing: Unnecessary spacing detected.
require ::File.expand_path('../config/environment',  __FILE__)
                                                   ^
mock-api-config.ru:1:1: C: Naming/FileName: The name of this source file (mock-api-config.ru) should use snake_case.
$LOAD_PATH << File.expand_path('lib', __dir__)
^
Rakefile:4:14: C: Style/ExpandPathArguments: Use expand_path('config/application', __dir__) instead of expand_path('../config/application', __FILE__).
require File.expand_path('../config/application', __FILE__)
             ^^^^^^^^^^^
Rakefile:9:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Rake::Task["db:structure:dump"].clear if Rails.env.production?
           ^^^^^^^^^^^^^^^^^^^
Gemfile:29:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
gem 'whenever', :require => false
                ^^^^^^^^^^^
Gemfile:41:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  gem 'brakeman', :require => false
                  ^^^^^^^^^^^
app/mailers/import_mailer.rb:6:34: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
      mail_data.addressees.merge({  ...
                                 ^^
app/mailers/import_mailer.rb:6:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      mail_data.addressees.merge({ 
                                  ^
app/mailers/import_mailer.rb:7:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        subject:  prefix('API import failed')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/import_mailer.rb:7:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
        subject:  prefix('API import failed')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/import_mailer.rb:8:7: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
      })
      ^
app/mailers/import_mailer.rb:16:34: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
      mail_data.addressees.merge({  ...
                                 ^^
app/mailers/import_mailer.rb:16:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      mail_data.addressees.merge({ 
                                  ^
app/mailers/import_mailer.rb:17:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        subject:  prefix('API import succeeded')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/import_mailer.rb:17:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
        subject:  prefix('API import succeeded')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/import_mailer.rb:18:7: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
      })
      ^
app/mailers/pq_base_mailer.rb:7:9: C: Style/GlobalVars: Do not introduce global variables.
        $statsd.time(StatsHelper::MAIL_TIMING) do
        ^^^^^^^
app/mailers/pq_base_mailer.rb:12:15: C: Style/GlobalVars: Do not introduce global variables.
              $statsd.increment StatsHelper::MAIL_SUCCESS
              ^^^^^^^
app/mailers/pq_base_mailer.rb:15:15: C: Style/GlobalVars: Do not introduce global variables.
              $statsd.increment StatsHelper::MAIL_FAILURE
              ^^^^^^^
app/mailers/db_sync_mailer.rb:6:34: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
      mail_data.addressees.merge({  ...
                                 ^^
app/mailers/db_sync_mailer.rb:6:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      mail_data.addressees.merge({ 
                                  ^
app/mailers/db_sync_mailer.rb:7:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        subject:  prefix('Staging DB sanitization failed')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/db_sync_mailer.rb:7:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
        subject:  prefix('Staging DB sanitization failed')
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/db_sync_mailer.rb:8:7: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
      })
      ^
app/mailers/pq_mailer.rb:34:7: C: Style/RedundantReturn: Redundant return detected.
      return true
      ^^^^^^
app/mailers/pq_mailer.rb:46:34: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
      mail_data.addressees.merge({ ...
                                 ^
app/mailers/pq_mailer.rb:47:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        subject:  subject
        ^^^^^^^^^^^^^^^^^
app/mailers/pq_mailer.rb:47:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
        subject:  subject
        ^^^^^^^^^^^^^^^^^
app/mailers/pq_mailer.rb:48:7: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
      })
      ^
app/models/ogd.rb:23:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    where("name ILIKE :search OR acronym ILIKE :search", search: "%#{name.strip}%")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_followup.rb:3:5: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless i_will_write && follow_up_to.blank? && valid?
    ^^^^^^
app/models/pq_followup.rb:4:7: C: Style/ImplicitRuntimeError: Use raise with an explicit exception class and message, rather than just a message.
      raise "A PQ follow-up must be valid, have 'i_will_write' set to true, and 'follow_up_to' blank!"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_followup.rb:12:19: C: Layout/MultilineMethodCallIndentation: Align .reject with attributes on line 11.
                  .reject { |k,_| FOLLOW_UP_ATTR_RESET.include?(k) }
                  ^^^^^^^
app/models/pq_followup.rb:12:31: C: Layout/SpaceAfterComma: Space missing after comma.
                  .reject { |k,_| FOLLOW_UP_ATTR_RESET.include?(k) }
                              ^
app/models/pq_followup.rb:13:19: C: Layout/MultilineMethodCallIndentation: Align .merge with attributes on line 11.
                  .merge('question_type' => 'Follow-up IWW',
                  ^^^^^^
app/models/pq_followup.rb:14:26: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                         'i_will_write'  => true,
                         ^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_followup.rb:15:26: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                         'follow_up_to'  => uin,
                         ^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_followup.rb:16:26: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                         'state'      => PQState::DRAFT_PENDING)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_followup.rb:16:39: C: Layout/SpaceAroundOperators: Operator => should be surrounded by a single space.
                         'state'      => PQState::DRAFT_PENDING)
                                      ^^
app/models/pq_followup.rb:29:1: C: Layout/EmptyLines: Extra blank line detected.
app/models/pq_followup.rb:30:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def has_follow_up?
  ^^^
app/models/pq_followup.rb:30:7: C: Naming/PredicateName: Rename has_follow_up? to follow_up?.
  def has_follow_up?
      ^^^^^^^^^^^^^^
app/models/pq_followup.rb:34:7: C: Naming/PredicateName: Rename is_follow_up? to follow_up?.
  def is_follow_up?
      ^^^^^^^^^^^^^
app/models/pq_followup.rb:38:26: C: Style/WordArray: Use %w or %W for an array of words.
  FOLLOW_UP_ATTR_RESET = [ ...
                         ^
app/models/pq_followup.rb:67:23: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
    'transfer_in_date',
                      ^
app/models/pq_answer.rb:8:3: C: Rails/Validation: Prefer the new style validations validates :column, presence: value over validates_presence_of.
  validates_presence_of :text, :is_holding_answer
  ^^^^^^^^^^^^^^^^^^^^^
app/models/allocation_response.rb:8:3: C: Rails/Validation: Prefer the new style validations validates :column, presence: value over validates_presence_of.
  validates_presence_of :response_action
  ^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:14:5: C: Style/RedundantSelf: Redundant self detected.
    self.name.downcase.sub ' ', '-'
    ^^^^^^^^^
app/models/progress.rb:18:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_name.
    Progress.find_by_name(status)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:22:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.UNASSIGNED)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:26:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.NO_RESPONSE)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:30:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.DRAFT_PENDING)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:34:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.REJECTED)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:38:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.WITH_POD)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:42:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.POD_QUERY)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:46:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.POD_CLEARED)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:50:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.WITH_MINISTER)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:54:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.MINISTERIAL_QUERY)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:58:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.MINISTER_CLEARED)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:62:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.TRANSFER)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:66:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.ANSWERED)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:68:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def self.transferred_out
  ^^^
app/models/progress.rb:69:5: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_status.
    find_by_status(self.TRANSFERRED_OUT)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/progress.rb:72:12: C: Naming/MethodName: Use snake_case for method names.
  def self.UNASSIGNED
           ^^^^^^^^^^
app/models/progress.rb:76:12: C: Naming/MethodName: Use snake_case for method names.
  def self.NO_RESPONSE
           ^^^^^^^^^^^
app/models/progress.rb:80:12: C: Naming/MethodName: Use snake_case for method names.
  def self.DRAFT_PENDING
           ^^^^^^^^^^^^^
app/models/progress.rb:84:12: C: Naming/MethodName: Use snake_case for method names.
  def self.REJECTED
           ^^^^^^^^
app/models/progress.rb:88:12: C: Naming/MethodName: Use snake_case for method names.
  def self.WITH_POD
           ^^^^^^^^
app/models/progress.rb:92:12: C: Naming/MethodName: Use snake_case for method names.
  def self.POD_QUERY
           ^^^^^^^^^
app/models/progress.rb:96:12: C: Naming/MethodName: Use snake_case for method names.
  def self.POD_CLEARED
           ^^^^^^^^^^^
app/models/progress.rb:100:12: C: Naming/MethodName: Use snake_case for method names.
  def self.WITH_MINISTER
           ^^^^^^^^^^^^^
app/models/progress.rb:104:12: C: Naming/MethodName: Use snake_case for method names.
  def self.MINISTERIAL_QUERY
           ^^^^^^^^^^^^^^^^^
app/models/progress.rb:108:12: C: Naming/MethodName: Use snake_case for method names.
  def self.MINISTER_CLEARED
           ^^^^^^^^^^^^^^^^
app/models/progress.rb:112:12: C: Naming/MethodName: Use snake_case for method names.
  def self.ANSWERED
           ^^^^^^^^
app/models/progress.rb:116:12: C: Naming/MethodName: Use snake_case for method names.
  def self.TRANSFERRED_OUT
           ^^^^^^^^^^^^^^^
app/models/progress.rb:120:12: C: Naming/MethodName: Use snake_case for method names.
  def self.TRANSFER
           ^^^^^^^^
app/models/press_desk.rb:24:7: C: Performance/ChainArrayAllocation: Use reject...map! instead of reject...map.
      .map(&:email)
      ^^^^^^^^^^^^^
app/models/press_desk.rb:25:7: C: Performance/ChainArrayAllocation: Use map...reject! instead of map...reject.
      .reject(&:blank?)
      ^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:2:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body beginning.
app/models/pq_scopes.rb:15:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("answer_submitted < date_for_answer + 1 AND answer_submitted BETWEEN ? AND ?", beginning_of_last_week, end_of_last_week)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:19:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("answer_submitted < date_for_answer + 1 AND answer_submitted BETWEEN ? AND ?", beginning_of_prev_week, end_of_prev_week)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:23:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("answer_submitted < date_for_answer + 1 AND answer_submitted > ?", parliament_session_start)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:27:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("date_for_answer > ?", parliament_session_start)
                 ^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:31:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("answer_submitted BETWEEN ? AND ?",  beginning_of_prev_week, end_of_prev_week)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:31:53: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    not_tx.where("answer_submitted BETWEEN ? AND ?",  beginning_of_prev_week, end_of_prev_week)
                                                    ^
app/models/pq_scopes.rb:35:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("answer_submitted BETWEEN ? AND ?", beginning_of_last_week, end_of_last_week)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:39:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("answer_submitted > ?", parliament_session_start)
                 ^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:47:11: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    (Date.today.beginning_of_week) - 8 #Sunday
          ^^^^^
app/models/pq_scopes.rb:47:40: C: Layout/LeadingCommentSpace: Missing space after #.
    (Date.today.beginning_of_week) - 8 #Sunday
                                       ^^^^^^^
app/models/pq_scopes.rb:47:40: C: Style/InlineComment: Avoid trailing inline comments.
    (Date.today.beginning_of_week) - 8 #Sunday
                                       ^^^^^^^
app/models/pq_scopes.rb:67:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #For reporting purposes an half hour's grace period is allowed on the internal deadline.
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:72:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("internal_deadline > ?", parliament_session_start)
                 ^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:76:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("date_for_answer BETWEEN ? AND ?", beginning_of_last_week, end_of_last_week)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:80:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("date_for_answer BETWEEN ? AND ?", beginning_of_prev_week, end_of_prev_week)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:84:11: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    (Date.today.beginning_of_week) - 2 #Saturday
          ^^^^^
app/models/pq_scopes.rb:84:40: C: Layout/LeadingCommentSpace: Missing space after #.
    (Date.today.beginning_of_week) - 2 #Saturday
                                       ^^^^^^^^^
app/models/pq_scopes.rb:84:40: C: Style/InlineComment: Avoid trailing inline comments.
    (Date.today.beginning_of_week) - 2 #Saturday
                                       ^^^^^^^^^
app/models/pq_scopes.rb:108:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("created_at BETWEEN ? AND ?", beginning_of_prev_week, end_of_prev_week)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:142:18: C: Style/DefWithParentheses: Omit the parentheses in defs when the method doesn't accept any arguments.
  def no_response()
                 ^
app/models/pq_scopes.rb:151:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("answer_submitted <= (date_for_answer + 1)")
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:183:29: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    current_date = "'#{Date.today.strftime('%Y-%m-%d')}'"
                            ^^^^^
app/models/pq_scopes.rb:192:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    not_tx.where("created_at > ?", parliament_session_start)
                 ^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:200:5: C: Rails/FindBy: Use find_by instead of where.first.
    where("uin = ?", uin_to_search).first
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_scopes.rb:200:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    where("uin = ?", uin_to_search).first
          ^^^^^^^^^
app/models/pq_scopes.rb:203:17: C: Style/DefWithParentheses: Omit the parentheses in defs when the method doesn't accept any arguments.
  def unassigned()
                ^
app/models/pq_scopes.rb:218:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.
app/models/email.rb:30:3: C: Rails/Validation: Prefer the new style validations validates :column, format: value over validates_format_of.
  validates_format_of :from, :with => EMAIL_REGEXP
  ^^^^^^^^^^^^^^^^^^^
app/models/email.rb:30:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates_format_of :from, :with => EMAIL_REGEXP
                             ^^^^^^^^
app/models/email.rb:31:3: C: Rails/Validation: Prefer the new style validations validates :column, format: value over validates_format_of.
  validates_format_of :reply_to, :with => EMAIL_REGEXP
  ^^^^^^^^^^^^^^^^^^^
app/models/email.rb:31:34: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates_format_of :reply_to, :with => EMAIL_REGEXP
                                 ^^^^^^^^
app/models/email.rb:36:39: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
  validates :mailer, inclusion: { in: %w(DbSyncMailer ImportMailer PqMailer) }
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/email.rb:37:39: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
  validates :status, inclusion: { in: %w(new sending sent failed abandoned)  }
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/email.rb:41:45: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  scope :new_only,  -> { where(status: 'new' ).order(:id)             }
                                            ^
app/models/email.rb:42:40: C: Style/WordArray: Use %w or %W for an array of words.
  scope :waiting,   -> { where(status: ['new', 'failed']).order(:id)  }
                                       ^^^^^^^^^^^^^^^^^
app/models/email.rb:43:51: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  scope :abandoned, -> { where(status: 'abandoned' ).order(:id)       }
                                                  ^
app/models/email.rb:48:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless concatenated_email_format(:to)
    ^^^^^^
app/models/email.rb:48:5: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless concatenated_email_format(:to)
    ^^^^^^
app/models/email.rb:54:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless concatenated_email_format(:cc)
    ^^^^^^
app/models/email.rb:54:5: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless concatenated_email_format(:cc)
    ^^^^^^
app/models/email.rb:68:16: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    emails.all?{ |email| email.strip =~ EMAIL_REGEXP } 
               ^
app/models/email.rb:68:55: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    emails.all?{ |email| email.strip =~ EMAIL_REGEXP } 
                                                      ^
app/models/trim_link.rb:31:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    if file && !::Validators::Trim.valid_upload?(file)
    ^^
app/models/trim_link.rb:31:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if file && !::Validators::Trim.valid_upload?(file)
    ^^
app/models/trim_link.rb:37:5: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    return unless file
    ^^^^^^^^^^^^^^^^^^
app/models/commission_form.rb:13:31: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  validates :pq_id, presence: {message: 'Please provide question id to commission'}
                              ^
app/models/commission_form.rb:13:83: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  validates :pq_id, presence: {message: 'Please provide question id to commission'}
                                                                                  ^
app/models/commission_form.rb:14:37: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  validates :minister_id, presence: {message: 'Please select answering minister'}
                                    ^
app/models/commission_form.rb:14:81: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  validates :minister_id, presence: {message: 'Please select answering minister'}
                                                                                ^
app/models/commission_form.rb:15:43: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  validates :action_officer_id, presence: {message: 'Please select at least one action officer'}
                                          ^
app/models/commission_form.rb:15:96: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  validates :action_officer_id, presence: {message: 'Please select at least one action officer'}
                                                                                               ^
app/models/commission_form.rb:16:41: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  validates :date_for_answer, presence: {message: 'Please choose date for answer'}
                                        ^
app/models/commission_form.rb:16:82: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  validates :date_for_answer, presence: {message: 'Please choose date for answer'}
                                                                                 ^
app/models/commission_form.rb:17:43: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  validates :internal_deadline, presence: {message: 'Please choose internal deadline'}
                                          ^
app/models/commission_form.rb:17:86: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  validates :internal_deadline, presence: {message: 'Please choose internal deadline'}
                                                                                     ^
app/models/commission_form.rb:26:5: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    action_officer_id.reject!(&:blank?) unless action_officer_id.nil?
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:17:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/models/pqa_import_run.rb:20:39: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
  validates :status, inclusion: { in: %w(OK Failure OK_with_errors),  message: "Status must be 'OK', 'Failure' or 'OK_with_errors': was '%{value}'" }
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:20:69: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  validates :status, inclusion: { in: %w(OK Failure OK_with_errors),  message: "Status must be 'OK', 'Failure' or 'OK_with_errors': was '%{value}'" }
                                                                    ^
app/models/pqa_import_run.rb:25:11: C: Style/RedundantSelf: Redundant self detected.
    rec = self.successful.order(:start_time).last
          ^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:34:5: C: Style/RedundantSelf: Redundant self detected.
    self.create!( ...
    ^^^^^^^^^^^^^
app/models/pqa_import_run.rb:35:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      start_time:     start_time,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:36:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      end_time:       Time.now,
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:36:28: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
      end_time:       Time.now,
                           ^^^
app/models/pqa_import_run.rb:37:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      num_created:    import_run_report[:created],
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:38:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      num_updated:    import_run_report[:updated],
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:39:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      status:         import_run_report[:errors].any? ? 'OK_with_errors' : 'OK',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:44:5: C: Style/RedundantSelf: Redundant self detected.
    self.create!( ...
    ^^^^^^^^^^^^^
app/models/pqa_import_run.rb:45:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      start_time:     start_time,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:46:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      end_time:       Time.now,
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:46:28: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
      end_time:       Time.now,
                           ^^^
app/models/pqa_import_run.rb:47:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      num_created:    0,
      ^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:48:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      num_updated:    0,
      ^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:49:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      status:         'Failure',
      ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:53:1: C: Layout/EmptyLines: Extra blank line detected.
app/models/pqa_import_run.rb:54:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def self.sum_pqs_imported(range)
  ^^^
app/models/pqa_import_run.rb:56:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :day   => Date.today.beginning_of_day,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:56:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
        :day   => Date.today.beginning_of_day,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:56:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :day   => Date.today.beginning_of_day,
        ^^^^^^^^^
app/models/pqa_import_run.rb:56:24: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
        :day   => Date.today.beginning_of_day,
                       ^^^^^
app/models/pqa_import_run.rb:57:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :week  => 7.days.ago.beginning_of_day,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:57:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :week  => 7.days.ago.beginning_of_day,
        ^^^^^^^^^
app/models/pqa_import_run.rb:58:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :month => 30.days.ago.beginning_of_day
        ^^^^^^^^^
app/models/pqa_import_run.rb:59:7: C: Layout/IndentHash: Indent the right brace the same as the start of the line where the left brace is.
      }
      ^
app/models/pqa_import_run.rb:60:5: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    raise ArgumentError.new("invalid range for sum_pqs_imported") unless valid_ranges.keys.include?(range)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:60:5: C: Style/RaiseArgs: Provide an exception class and message as arguments to raise.
    raise ArgumentError.new("invalid range for sum_pqs_imported") unless valid_ranges.keys.include?(range)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:60:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    raise ArgumentError.new("invalid range for sum_pqs_imported") unless valid_ranges.keys.include?(range)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:60:74: C: Performance/InefficientHashSearch: Use #key? instead of #keys.include?.
    raise ArgumentError.new("invalid range for sum_pqs_imported") unless valid_ranges.keys.include?(range)
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:61:12: C: Style/RedundantSelf: Redundant self detected.
    recs = self.where('start_time >= ?', valid_ranges[range])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:62:10: C: Style/CollectionMethods: Prefer reduce over inject.
    recs.inject(0) { |n, rec| n + rec.num_updated + rec.num_created }
         ^^^^^^
app/models/pqa_import_run.rb:62:22: C: Style/SingleLineBlockParams: Name inject block params |acc, elem|.
    recs.inject(0) { |n, rec| n + rec.num_updated + rec.num_created }
                     ^^^^^^^^
app/models/pqa_import_run.rb:66:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    if last_import_time_utc < Date.today()
    ^^
app/models/pqa_import_run.rb:66:36: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    if last_import_time_utc < Date.today()
                                   ^^^^^
app/models/pqa_import_run.rb:66:41: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    if last_import_time_utc < Date.today()
                                        ^^
app/models/pqa_import_run.rb:67:7: C: Style/RedundantReturn: Redundant return detected.
      return false
      ^^^^^^
app/models/pqa_import_run.rb:69:13: C: Style/RedundantSelf: Redundant self detected.
      rec = self.successful.order(:start_time).last
            ^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:71:9: C: Layout/CaseIndentation: Indent when as deep as case.
        when "Failed"
        ^^^^
app/models/pqa_import_run.rb:71:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "Failed"
             ^^^^^^^^
app/models/pqa_import_run.rb:73:9: C: Layout/CaseIndentation: Indent when as deep as case.
        when "OK_with_errors"
        ^^^^
app/models/pqa_import_run.rb:73:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "OK_with_errors"
             ^^^^^^^^^^^^^^^^
app/models/pqa_import_run.rb:75:9: C: Layout/CaseIndentation: Indent when as deep as case.
        when "OK"
        ^^^^
app/models/pqa_import_run.rb:75:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        when "OK"
             ^^^^
app/models/press_officer.rb:20:3: C: Rails/Validation: Prefer the new style validations validates :column, format: value over validates_format_of.
  validates_format_of :email,:with => Devise::email_regexp
  ^^^^^^^^^^^^^^^^^^^
app/models/press_officer.rb:20:29: C: Layout/SpaceAfterComma: Space missing after comma.
  validates_format_of :email,:with => Devise::email_regexp
                            ^
app/models/press_officer.rb:20:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates_format_of :email,:with => Devise::email_regexp
                             ^^^^^^^^
app/models/press_officer.rb:20:45: C: Style/ColonMethodCall: Do not use :: for method calls.
  validates_format_of :email,:with => Devise::email_regexp
                                            ^^
app/models/minister_contact.rb:19:3: C: Rails/Validation: Prefer the new style validations validates :column, format: value over validates_format_of.
  validates_format_of :email,:with => Devise::email_regexp
  ^^^^^^^^^^^^^^^^^^^
app/models/minister_contact.rb:19:29: C: Layout/SpaceAfterComma: Space missing after comma.
  validates_format_of :email,:with => Devise::email_regexp
                            ^
app/models/minister_contact.rb:19:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates_format_of :email,:with => Devise::email_regexp
                             ^^^^^^^^
app/models/minister_contact.rb:19:45: C: Style/ColonMethodCall: Do not use :: for method calls.
  validates_format_of :email,:with => Devise::email_regexp
                                            ^^
app/models/actionlist_member.rb:20:3: C: Rails/Validation: Prefer the new style validations validates :column, format: value over validates_format_of.
  validates_format_of :email,:with => Devise::email_regexp
  ^^^^^^^^^^^^^^^^^^^
app/models/actionlist_member.rb:20:29: C: Layout/SpaceAfterComma: Space missing after comma.
  validates_format_of :email,:with => Devise::email_regexp
                            ^
app/models/actionlist_member.rb:20:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates_format_of :email,:with => Devise::email_regexp
                             ^^^^^^^^
app/models/actionlist_member.rb:20:45: C: Style/ColonMethodCall: Do not use :: for method calls.
  validates_format_of :email,:with => Devise::email_regexp
                                            ^^
app/models/actionlist_member.rb:22:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	before_validation Validators::Whitespace.new
^
app/models/actionlist_member.rb:22:1: C: Layout/Tab: Tab detected.
	before_validation Validators::Whitespace.new
^
app/models/actionlist_member.rb:22:2: C: Layout/IndentationConsistency: Inconsistent indentation detected.
	before_validation Validators::Whitespace.new
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:72:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/models/pq.rb:84:7: C: Rails/FindBy: Use find_by instead of where.first.
      where(response: 'accepted').first
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:92:15: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
      all.find{ |assignment| !assignment.rejected? }.nil?
              ^
app/models/pq.rb:96:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  has_many :action_officers, :through => :action_officers_pqs do
                             ^^^^^^^^^^^
app/models/pq.rb:97:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
app/models/pq.rb:103:7: C: Rails/FindBy: Use find_by instead of where.first.
      where(action_officers_pqs: { response: 'accepted' }).first
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:112:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  belongs_to :policy_minister, :class_name=>'Minister'
                               ^^^^^^^^^^^^^
app/models/pq.rb:112:43: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
  belongs_to :policy_minister, :class_name=>'Minister'
                                          ^^
app/models/pq.rb:113:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  belongs_to :transfer_out_ogd, :class_name=>'Ogd'
                                ^^^^^^^^^^^^^
app/models/pq.rb:113:44: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
  belongs_to :transfer_out_ogd, :class_name=>'Ogd'
                                           ^^
app/models/pq.rb:114:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  belongs_to :transfer_in_ogd, :class_name=>'Ogd'
                               ^^^^^^^^^^^^^
app/models/pq.rb:114:43: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
  belongs_to :transfer_in_ogd, :class_name=>'Ogd'
                                          ^^
app/models/pq.rb:115:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  belongs_to :directorate, :class_name=>'Directorate'
                           ^^^^^^^^^^^^^
app/models/pq.rb:115:39: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
  belongs_to :directorate, :class_name=>'Directorate'
                                      ^^
app/models/pq.rb:116:34: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  belongs_to :original_division, :class_name => 'Division'
                                 ^^^^^^^^^^^^^^
app/models/pq.rb:121:17: C: Layout/SpaceBeforeComma: Space found before comma.
  validates :uin , presence: true, uniqueness:true
                ^
app/models/pq.rb:121:46: C: Layout/SpaceAfterColon: Space missing after colon.
  validates :uin , presence: true, uniqueness:true
                                             ^
app/models/pq.rb:122:41: C: Layout/SpaceAfterColon: Space missing after colon.
  validates :raising_member_id, presence:true
                                        ^
app/models/pq.rb:123:32: C: Layout/SpaceAfterColon: Space missing after colon.
  validates :question, presence:true
                               ^
app/models/pq.rb:138:5: C: Style/RedundantSelf: Redundant self detected.
    self.save!
    ^^^^^^^^^^
app/models/pq.rb:142:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    if action_officer
    ^^
app/models/pq.rb:155:7: C: Naming/PredicateName: Rename has_trim_link? to trim_link?.
  def has_trim_link?
      ^^^^^^^^^^^^^^
app/models/pq.rb:160:12: C: Style/RedundantSelf: Redundant self detected.
    uin && self.uin.strip!
           ^^^^^^^^
app/models/pq.rb:164:5: C: Style/NumericPredicate: Use action_officers.size.positive? instead of action_officers.size > 0.
    action_officers.size > 0 &&
    ^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:164:5: C: Style/ZeroLengthPredicate: Use !empty? instead of size > 0.
    action_officers.size > 0 &&
    ^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:180:7: C: Naming/PredicateName: Rename is_new? to new?.
  def is_new?
      ^^^^^^^
app/models/pq.rb:192:7: C: Naming/PredicateName: Rename is_unallocated? to unallocated?.
  def is_unallocated?
      ^^^^^^^^^^^^^^^
app/models/pq.rb:193:5: C: Style/NumericPredicate: Use action_officers_pqs.count.zero? instead of action_officers_pqs.count == 0.
    action_officers_pqs.count == 0
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:214:5: C: Style/SelfAssignment: Use self-assignment shorthand +=.
    header = header + '| Ordinary' if self.question_type == 'Ordinary'
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:214:39: C: Style/RedundantSelf: Redundant self detected.
    header = header + '| Ordinary' if self.question_type == 'Ordinary'
                                      ^^^^^^^^^^^^^^^^^^
app/models/pq.rb:215:5: C: Style/SelfAssignment: Use self-assignment shorthand +=.
    header = header + '| Named Day' if self.question_type == 'NamedDay'
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:215:40: C: Style/RedundantSelf: Redundant self detected.
    header = header + '| Named Day' if self.question_type == 'NamedDay'
                                       ^^^^^^^^^^^^^^^^^^
app/models/pq.rb:216:5: C: Style/SelfAssignment: Use self-assignment shorthand +=.
    header = header + ' | Transferred in' if self.transferred?
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:216:46: C: Style/RedundantSelf: Redundant self detected.
    header = header + ' | Transferred in' if self.transferred?
                                             ^^^^^^^^^^^^^^^^^
app/models/pq.rb:217:5: C: Style/SelfAssignment: Use self-assignment shorthand +=.
    header = header + ' | I will write' if self.i_will_write?
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:217:44: C: Style/RedundantSelf: Redundant self detected.
    header = header + ' | I will write' if self.i_will_write?
                                           ^^^^^^^^^^^^^^^^^^
app/models/pq.rb:224:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    if action_officers.all_accepted.size > 1
    ^^
app/models/pq.rb:224:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if action_officers.all_accepted.size > 1
    ^^
app/models/pq.rb:225:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      errors[:base] << "Unable to have two action officers accepted on the same question"
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:230:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    if ( !!transfer_out_date ^ !!transfer_out_ogd_id )
    ^^
app/models/pq.rb:230:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if ( !!transfer_out_date ^ !!transfer_out_ogd_id )
    ^^
app/models/pq.rb:230:8: C: Style/ParenthesesAroundCondition: Don't use parentheses around the condition of an if.
    if ( !!transfer_out_date ^ !!transfer_out_ogd_id )
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq.rb:230:9: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    if ( !!transfer_out_date ^ !!transfer_out_ogd_id )
        ^
app/models/pq.rb:230:10: C: Style/DoubleNegation: Avoid the use of double negation (!!).
    if ( !!transfer_out_date ^ !!transfer_out_ogd_id )
         ^
app/models/pq.rb:230:32: C: Style/DoubleNegation: Avoid the use of double negation (!!).
    if ( !!transfer_out_date ^ !!transfer_out_ogd_id )
                               ^
app/models/pq.rb:230:53: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    if ( !!transfer_out_date ^ !!transfer_out_ogd_id )
                                                    ^
app/models/action_officer.rb:23:3: C: Rails/Validation: Prefer the new style validations validates :column, format: value over validates_format_of.
  validates_format_of :email,:with => Devise::email_regexp
  ^^^^^^^^^^^^^^^^^^^
app/models/action_officer.rb:23:29: C: Layout/SpaceAfterComma: Space missing after comma.
  validates_format_of :email,:with => Devise::email_regexp
                            ^
app/models/action_officer.rb:23:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates_format_of :email,:with => Devise::email_regexp
                             ^^^^^^^^
app/models/action_officer.rb:23:45: C: Style/ColonMethodCall: Do not use :: for method calls.
  validates_format_of :email,:with => Devise::email_regexp
                                            ^^
app/models/action_officer.rb:24:3: C: Rails/Validation: Prefer the new style validations validates :column, format: value over validates_format_of.
  validates_format_of :group_email,:with => Devise::email_regexp, :allow_blank =>true
  ^^^^^^^^^^^^^^^^^^^
app/models/action_officer.rb:24:35: C: Layout/SpaceAfterComma: Space missing after comma.
  validates_format_of :group_email,:with => Devise::email_regexp, :allow_blank =>true
                                  ^
app/models/action_officer.rb:24:36: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates_format_of :group_email,:with => Devise::email_regexp, :allow_blank =>true
                                   ^^^^^^^^
app/models/action_officer.rb:24:51: C: Style/ColonMethodCall: Do not use :: for method calls.
  validates_format_of :group_email,:with => Devise::email_regexp, :allow_blank =>true
                                                  ^^
app/models/action_officer.rb:24:67: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates_format_of :group_email,:with => Devise::email_regexp, :allow_blank =>true
                                                                  ^^^^^^^^^^^^^^^
app/models/action_officer.rb:24:80: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
  validates_format_of :group_email,:with => Devise::email_regexp, :allow_blank =>true
                                                                               ^^
app/models/action_officer.rb:27:35: C: Layout/FirstHashElementLineBreak: Add a line break before the first element of a multi-line hash.
  validates :email, uniqueness: { scope: :deputy_director_id,
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/action_officer.rb:28:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    message: "an action officer cannot be assigned twice to the same deputy director" }
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/action_officer.rb:28:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    message: "an action officer cannot be assigned twice to the same deputy director" }
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/action_officer.rb:31:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  has_many :pqs, :through => :action_officers_pqs
                 ^^^^^^^^^^^
app/models/action_officer.rb:39:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    active.where("name ILIKE ?","%#{name}%")
                 ^^^^^^^^^^^^^^
app/models/action_officer.rb:39:32: C: Layout/SpaceAfterComma: Space missing after comma.
    active.where("name ILIKE ?","%#{name}%")
                               ^
app/models/watchlist_member.rb:20:3: C: Rails/Validation: Prefer the new style validations validates :column, format: value over validates_format_of.
  validates_format_of :email,:with => Devise::email_regexp
  ^^^^^^^^^^^^^^^^^^^
app/models/watchlist_member.rb:20:29: C: Layout/SpaceAfterComma: Space missing after comma.
  validates_format_of :email,:with => Devise::email_regexp
                            ^
app/models/watchlist_member.rb:20:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates_format_of :email,:with => Devise::email_regexp
                             ^^^^^^^^
app/models/watchlist_member.rb:20:45: C: Style/ColonMethodCall: Do not use :: for method calls.
  validates_format_of :email,:with => Devise::email_regexp
                                            ^^
app/models/early_bird_member.rb:8:3: C: Rails/Validation: Prefer the new style validations validates :column, format: value over validates_format_of.
  validates_format_of :email,:with => Devise::email_regexp
  ^^^^^^^^^^^^^^^^^^^
app/models/early_bird_member.rb:8:29: C: Layout/SpaceAfterComma: Space missing after comma.
  validates_format_of :email,:with => Devise::email_regexp
                            ^
app/models/early_bird_member.rb:8:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  validates_format_of :email,:with => Devise::email_regexp
                             ^^^^^^^^
app/models/early_bird_member.rb:8:45: C: Style/ColonMethodCall: Do not use :: for method calls.
  validates_format_of :email,:with => Devise::email_regexp
                                            ^^
app/models/early_bird_member.rb:10:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	before_validation Validators::Whitespace.new
^
app/models/early_bird_member.rb:10:1: C: Layout/Tab: Tab detected.
	before_validation Validators::Whitespace.new
^
app/models/early_bird_member.rb:10:2: C: Layout/IndentationConsistency: Inconsistent indentation detected.
	before_validation Validators::Whitespace.new
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_counts.rb:22:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select("minister_id, state, count(*)")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_counts.rb:27:19: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      .reduce({}) { |acc, r|
                  ^
app/models/pq_counts.rb:29:31: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        acc.merge(r.state => h ) { |_, old_v, new_v| old_v.merge(new_v) }
                              ^
app/models/pq_counts.rb:42:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      .select("pqs.state, ao.press_desk_id, count(distinct pqs.id)")
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_counts.rb:43:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      .where("state != ?", PQState::UNASSIGNED)
             ^^^^^^^^^^^^
app/models/pq_counts.rb:46:19: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      .reduce({}) { |acc, r|
                  ^
app/models/pq_counts.rb:48:31: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        acc.merge(r.state => h ) { |_, old_v, new_v| old_v.merge(new_v) }
                              ^
app/models/pq_counts.rb:55:4: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  # 
   ^
app/models/pq_counts.rb:57:5: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
    state_counts = select('state', 'count(*)') ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_counts.rb:58:22: C: Layout/MultilineMethodCallIndentation: Align .group with select('state', 'count(*)') on line 57.
                     .group('state')
                     ^^^^^^
app/models/pq_counts.rb:59:22: C: Layout/MultilineMethodCallIndentation: Align .reduce with select('state', 'count(*)') on line 57.
                     .reduce({}) { |acc, r| acc.merge(r.state => r.count) }
                     ^^^^^^^
app/models/pq_counts.rb:59:36: C: Style/SingleLineBlockParams: Name reduce block params |acc, elem|.
                     .reduce({}) { |acc, r| acc.merge(r.state => r.count) }
                                   ^^^^^^^^
app/models/pq_counts.rb:61:24: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
    state_counts.merge({ ...
                       ^
app/models/pq_counts.rb:62:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'view_all'             => Pq.new_questions.count,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_counts.rb:62:7: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
      'view_all'             => Pq.new_questions.count,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_counts.rb:64:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'transferred_in'       => Pq.transferred.count,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_counts.rb:65:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'iww'                  => Pq.i_will_write_flag.count
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/pq_counts.rb:66:5: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
app/models/minister.rb:24:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                :allow_destroy => true,
                                ^^^^^^^^^^^^^^^^^
app/models/minister.rb:25:33: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                :reject_if     => :all_blank
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/minister.rb:25:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                :reject_if     => :all_blank
                                ^^^^^^^^^^^^^^^^^
app/models/minister.rb:32:5: C: Style/RedundantSelf: Redundant self detected.
    self.name + (self.deleted ? ' - Inactive' : '')
    ^^^^^^^^^
app/models/minister.rb:32:18: C: Style/RedundantSelf: Redundant self detected.
    self.name + (self.deleted ? ' - Inactive' : '')
                 ^^^^^^^^^^^^
app/models/minister.rb:45:17: C: Style/RedundantSelf: Redundant self detected.
    self.name = self.name.strip if self.name
                ^^^^^^^^^
app/models/minister.rb:45:36: C: Style/RedundantSelf: Redundant self detected.
    self.name = self.name.strip if self.name
                                   ^^^^^^^^^
app/models/token.rb:19:45: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
  validates :acknowledged, inclusion: { in: %w(accept reject),  message: "%{value} is not a valid value for acknowledged" }, allow_nil: true
                                            ^^^^^^^^^^^^^^^^^
app/models/token.rb:19:63: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  validates :acknowledged, inclusion: { in: %w(accept reject),  message: "%{value} is not a valid value for acknowledged" }, allow_nil: true
                                                              ^
app/models/token.rb:19:74: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  validates :acknowledged, inclusion: { in: %w(accept reject),  message: "%{value} is not a valid value for acknowledged" }, allow_nil: true
                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/token.rb:21:1: C: Layout/EmptyLines: Extra blank line detected.
app/models/token.rb:23:5: C: Style/RedundantSelf: Redundant self detected.
    self.where(entity: entity_value).first
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/token.rb:23:10: C: Rails/FindBy: Use find_by instead of where.first.
    self.where(entity: entity_value).first
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/token.rb:26:1: C: Layout/EmptyLines: Extra blank line detected.
app/models/token.rb:27:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def self.assignment_stats(date = Date.today)
  ^^^
app/models/token.rb:27:41: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
  def self.assignment_stats(date = Date.today)
                                        ^^^^^
app/models/token.rb:28:12: C: Style/RedundantSelf: Redundant self detected.
    recs = self.where('created_at > ? and created_at < ?', date.beginning_of_day, date.end_of_day)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/token.rb:29:23: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    acks = recs.select{ |r| r.acknowledged? }
                      ^
app/models/token.rb:29:23: C: Style/SymbolProc: Pass &:acknowledged? as an argument to select instead of a block.
    acks = recs.select{ |r| r.acknowledged? }
                      ^^^^^^^^^^^^^^^^^^^^^^^
app/models/token.rb:30:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/token.rb:31:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    { 
     ^
app/models/token.rb:32:24: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      total: recs.size, 
                       ^
app/models/token.rb:33:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      ack: acks.size, 
                     ^
app/models/token.rb:34:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      open: recs.size - acks.size, 
                                  ^
app/models/token.rb:35:14: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using acks.size.to_f, use stricter Float(acks.size).
      pctg: (acks.size.to_f / (recs.size.nonzero? || 1).to_f * 100).round(2) 
             ^^^^^^^^^^^^^^
app/models/token.rb:35:31: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using (recs.size.nonzero? || 1).to_f, use stricter Float((recs.size.nonzero? || 1)).
      pctg: (acks.size.to_f / (recs.size.nonzero? || 1).to_f * 100).round(2) 
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/token.rb:35:77: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      pctg: (acks.size.to_f / (recs.size.nonzero? || 1).to_f * 100).round(2) 
                                                                            ^
app/models/token.rb:40:29: W: Lint/UnusedMethodArgument: Unused method argument - date. If it's necessary, use _ or _date as an argument name to indicate that it won't be used. You can also write as watchlist_status(*) if you want the method to accept any arguments but don't care about them.
  def self.watchlist_status(date = Date.today)
                            ^^^^
app/models/token.rb:40:41: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
  def self.watchlist_status(date = Date.today)
                                        ^^^^^
app/models/token.rb:41:11: C: Style/RedundantSelf: Redundant self detected.
    rec = self.where('path = ? and created_at >= ? and created_at <= ?', ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/token.rb:41:16: C: Rails/FindBy: Use find_by instead of where.first.
    rec = self.where('path = ? and created_at >= ? and created_at <= ?', ...
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/token.rb:42:51: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
                     '/watchlist/dashboard', Date.today.beginning_of_day, Date.today.end_of_day).first
                                                  ^^^^^
app/models/token.rb:42:80: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
                     '/watchlist/dashboard', Date.today.beginning_of_day, Date.today.end_of_day).first
                                                                               ^^^^^
app/models/token.rb:55:5: C: Style/RedundantSelf: Redundant self detected.
    self.acknowledged != nil
    ^^^^^^^^^^^^^^^^^
app/models/token.rb:58:1: C: Layout/EmptyLines: Extra blank line detected.
app/models/token.rb:59:1: C: Layout/EmptyLines: Extra blank line detected.
app/models/token.rb:63:5: C: Style/RedundantSelf: Redundant self detected.
    self.update_attributes acknowledged: text, ack_time: Time.now
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/token.rb:63:10: W: Rails/ActiveRecordAliases: Use update instead of update_attributes.
    self.update_attributes acknowledged: text, ack_time: Time.now
         ^^^^^^^^^^^^^^^^^
app/models/token.rb:63:63: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    self.update_attributes acknowledged: text, ack_time: Time.now
                                                              ^^^
app/models/division.rb:19:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  validates :directorate_id, presence: true 
                                           ^
app/models/user.rb:51:24: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
         :validatable, :validate_on_invite => true
                       ^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:53:1: C: Layout/EmptyLines: Extra blank line detected.
app/models/user.rb:68:6: C: Style/RedundantSelf: Redundant self detected.
    !self.deleted? && super
     ^^^^^^^^^^^^^
app/workers/mail_worker.rb:25:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    if @pid_file.present?
    ^^
app/workers/mail_worker.rb:32:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the ensure.
app/workers/mail_worker.rb:45:25: C: Style/WhileUntilDo: Do not use do with multi-line until.
    until @queue.empty? do
                        ^^
app/workers/mail_worker.rb:49:13: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      rescue 
            ^
app/workers/mail_worker.rb:68:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
app/workers/mail_worker/pid_file.rb:6:12: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      @path    = path
           ^^^
app/workers/mail_worker/pid_file.rb:6:16: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      @path    = path
               ^
app/workers/mail_worker/pid_file.rb:10:12: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
      File.exists?(path)
           ^^^^^^^
app/workers/mail_worker/pid_file.rb:23:7: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
      if present? && pid == pid_s
      ^^
app/workers/mail_worker/pid_file.rb:23:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if present? && pid == pid_s
      ^^
app/workers/mail_worker/pid_file.rb:24:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        File.delete(path) 
                         ^
app/workers/mail_worker/pid_file.rb:28:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
app/workers/import_worker.rb:9:23: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    start_time = Time.now
                      ^^^
app/workers/import_worker.rb:14:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        LogStuff.info { "Import: completed scheduled import" }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/workers/import_worker.rb:15:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/workers/import_worker.rb:18:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
app/controllers/quick_action_controller.rb:2:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/controllers/quick_action_controller.rb:7:27: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    @quick_actions_service               = QuickActionsService.new
                          ^^^^^^^^^^^^^^
app/controllers/quick_action_controller.rb:7:42: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    @quick_actions_service               = QuickActionsService.new
                                         ^
app/controllers/quick_action_controller.rb:8:113: C: Layout/SpaceAfterComma: Space missing after comma.
    @quick_actions_service.update_pq_list(params[:pqs_comma_separated_for_dates], params[:qa_edit_deadline_date],params[:qa_edit_draft_date],params[:qa_edit_pod_date],params[:qa_edit_minister_date],params[:qa_edit_answered_date])
                                                                                                                ^
app/controllers/quick_action_controller.rb:8:141: C: Layout/SpaceAfterComma: Space missing after comma.
    @quick_actions_service.update_pq_list(params[:pqs_comma_separated_for_dates], params[:qa_edit_deadline_date],params[:qa_edit_draft_date],params[:qa_edit_pod_date],params[:qa_edit_minister_date],params[:qa_edit_answered_date])
                                                                                                                                            ^
app/controllers/quick_action_controller.rb:8:167: C: Layout/SpaceAfterComma: Space missing after comma.
    @quick_actions_service.update_pq_list(params[:pqs_comma_separated_for_dates], params[:qa_edit_deadline_date],params[:qa_edit_draft_date],params[:qa_edit_pod_date],params[:qa_edit_minister_date],params[:qa_edit_answered_date])
                                                                                                                                                                      ^
app/controllers/quick_action_controller.rb:8:198: C: Layout/SpaceAfterComma: Space missing after comma.
    @quick_actions_service.update_pq_list(params[:pqs_comma_separated_for_dates], params[:qa_edit_deadline_date],params[:qa_edit_draft_date],params[:qa_edit_pod_date],params[:qa_edit_minister_date],params[:qa_edit_answered_date])
                                                                                                                                                                                                     ^
app/controllers/quick_action_controller.rb:9:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    flash[:Success] = "Date(s) updated"
                      ^^^^^^^^^^^^^^^^^
app/controllers/quick_action_controller.rb:15:27: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    @quick_actions_service               = QuickActionsService.new
                          ^^^^^^^^^^^^^^
app/controllers/quick_action_controller.rb:15:42: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    @quick_actions_service               = QuickActionsService.new
                                         ^
app/controllers/quick_action_controller.rb:17:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    flash[:Success] = "Draft Reminder(s) Sent"
                      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/quick_action_controller.rb:20:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/application_controller.rb:30:16: C: Style/RegexpLiteral: Use %r around regular expression.
    protocol = /(.*):\/\//.match(request.protocol)[1] if request.protocol.ends_with?("://")
               ^^^^^^^^^^^
app/controllers/application_controller.rb:30:86: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    protocol = /(.*):\/\//.match(request.protocol)[1] if request.protocol.ends_with?("://")
                                                                                     ^^^^^
app/controllers/application_controller.rb:34:29: W: Lint/UnusedMethodArgument: Unused method argument - resource. If it's necessary, use _ or _resource as an argument name to indicate that it won't be used. You can also write as after_invite_path_for(*) if you want the method to accept any arguments but don't care about them.
  def after_invite_path_for(resource)
                            ^^^^^^^^
app/controllers/application_controller.rb:48:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/application_controller.rb:49:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def server_error(exception)
  ^^^
app/controllers/application_controller.rb:54:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  def update_page_title(prefix, suffix = "MOJ Parliamentary Questions")
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:62:7: C: Style/DoubleNegation: Avoid the use of double negation (!!).
      !!(request.fullpath =~ Regexp.new(excepted_path))
      ^
app/controllers/application_controller.rb:74:1: C: Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
app/controllers/application_controller.rb:74:1: C: Style/InlineComment: Avoid trailing inline comments.
=begin ...
^^^^^^
app/controllers/application_controller.rb:91:5: C: Style/GlobalVars: Do not introduce global variables.
    $statsd.increment("#{StatsHelper::PAGES_ERRORS}.#{err_number}")
    ^^^^^^^
app/controllers/application_controller.rb:96:37: C: Layout/SpaceAroundOperators: Surrounding space missing for operator :.
    backtrace = exception.nil? ? nil: exception.backtrace
                                    ^
app/controllers/application_controller.rb:97:35: C: Layout/SpaceAroundOperators: Surrounding space missing for operator :.
    message = exception.nil? ? nil: exception.message
                                  ^
app/controllers/application_controller.rb:100:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/action_officers_controller.rb:7:9: C: Layout/MultilineMethodCallIndentation: Align .joins with .all on line 6.
        .joins(:deputy_director => :division)
        ^^^^^^
app/controllers/action_officers_controller.rb:7:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        .joins(:deputy_director => :division)
               ^^^^^^^^^^^^^^^^^^^
app/controllers/action_officers_controller.rb:8:9: C: Layout/MultilineMethodCallIndentation: Align .order with .all on line 6.
        .order(Arel.sql('lower(divisions.name)'))
        ^^^^^^
app/controllers/action_officers_controller.rb:9:9: C: Layout/MultilineMethodCallIndentation: Align .order with .all on line 6.
        .order(Arel.sql('lower(action_officers.name)'))
        ^^^^^^
app/controllers/action_officers_controller.rb:37:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
   loading_existing_records
  ^
app/controllers/watchlist_dashboard_controller.rb:6:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
  	update_page_title('Watchlist preview')
  ^
app/controllers/watchlist_dashboard_controller.rb:6:3: C: Layout/Tab: Tab detected.
  	update_page_title('Watchlist preview')
  ^
app/controllers/watchlist_dashboard_controller.rb:7:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    token = Token.entity(watchlist_params[:entity])
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/watchlist_dashboard_controller.rb:8:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    token.accept unless token.acknowledged?
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/watchlist_dashboard_controller.rb:9:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    @questions = Pq.allocated_since(DateTime.now.at_beginning_of_day)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/watchlist_dashboard_controller.rb:9:37: C: Style/DateTime: Prefer Time over DateTime.
    @questions = Pq.allocated_since(DateTime.now.at_beginning_of_day)
                                    ^^^^^^^^^^^^
app/controllers/watchlist_dashboard_controller.rb:9:46: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
    @questions = Pq.allocated_since(DateTime.now.at_beginning_of_day)
                                             ^^^
app/controllers/quick_action_export_controller.rb:2:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/controllers/quick_action_export_controller.rb:5:3: C: Metrics/MethodLength: Method has too many lines. [31/30]
  def new ...
  ^^^^^^^
app/controllers/quick_action_export_controller.rb:6:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
app/controllers/quick_action_export_controller.rb:11:5: W: Lint/UselessAssignment: Useless assignment to variable - pqs_array.
    pqs_array = Array.new
    ^^^^^^^^^
app/controllers/quick_action_export_controller.rb:11:17: C: Style/EmptyLiteral: Use array literal [] instead of Array.new.
    pqs_array = Array.new
                ^^^^^^^^^
app/controllers/quick_action_export_controller.rb:21:31: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        @quick_actions_service  = QuickActionsService.new
                              ^
app/controllers/quick_action_export_controller.rb:21:33: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
        @quick_actions_service  = QuickActionsService.new
                                ^
app/controllers/quick_action_export_controller.rb:25:9: W: Lint/UselessAssignment: Useless assignment to variable - total_pqs.
        total_pqs = @total_pqs
        ^^^^^^^^^
app/controllers/quick_action_export_controller.rb:31:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #200
      ^^^^
app/controllers/quick_action_export_controller.rb:34:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      flash[:error] = "Form was not completed"
                      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/quick_action_export_controller.rb:41:9: C: Layout/CaseIndentation: Indent when as deep as case.
        when 400
        ^^^^
app/controllers/quick_action_export_controller.rb:46:12: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
           locals:  { total_pqs: @total_pqs, pqs_comma_separated: @pqs_comma_separated },
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/quick_action_export_controller.rb:47:12: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
           status:  status)
           ^^^^^^^^^^^^^^^
app/controllers/quick_action_export_controller.rb:53:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/quick_action_export_controller.rb:55:12: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
           locals:  { total_pqs: @total_pqs, pqs_comma_separated: @pqs_comma_separated },
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/quick_action_export_controller.rb:56:12: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
           status:  status)
           ^^^^^^^^^^^^^^^
app/controllers/quick_action_export_controller.rb:62:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #params.require(:quick_action_export).permit(:total_pqs, :pqs_comma_separated)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/quick_action_export_controller.rb:66:31: W: Lint/UnusedMethodArgument: Unused method argument - template. If it's necessary, use _ or _template as an argument name to indicate that it won't be used.
  def run_export(export_type, template)
                              ^^^^^^^^
app/controllers/quick_action_export_controller.rb:67:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
app/controllers/quick_action_export_controller.rb:68:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      my_export = export_type.new(pqs_array)
  ^^^^
app/controllers/quick_action_export_controller.rb:70:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/controllers/trim_links_controller.rb:8:7: C: Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.
      unless Validators::Trim.valid_upload?(upload) ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/trim_links_controller.rb:16:17: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        link_url  = url_for trim_link_path(trim.id)
                ^
app/controllers/trim_links_controller.rb:16:19: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
        link_url  = url_for trim_link_path(trim.id)
                  ^
app/controllers/early_bird_dashboard_controller.rb:6:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
  	update_page_title('Early bird preview')
  ^
app/controllers/early_bird_dashboard_controller.rb:6:3: C: Layout/Tab: Tab detected.
  	update_page_title('Early bird preview')
  ^
app/controllers/early_bird_dashboard_controller.rb:7:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    @now            = Time.now.strftime("%d/%m/%Y")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/early_bird_dashboard_controller.rb:7:28: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    @now            = Time.now.strftime("%d/%m/%Y")
                           ^^^
app/controllers/early_bird_dashboard_controller.rb:7:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @now            = Time.now.strftime("%d/%m/%Y")
                                        ^^^^^^^^^^
app/controllers/early_bird_dashboard_controller.rb:8:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    @questions      = Pq.new_questions.order(:uin)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/early_bird_dashboard_controller.rb:9:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    @parliament_url = PQA::RecentQuestionsURL.url(Date.today())
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/early_bird_dashboard_controller.rb:9:56: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    @parliament_url = PQA::RecentQuestionsURL.url(Date.today())
                                                       ^^^^^
app/controllers/early_bird_dashboard_controller.rb:9:61: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    @parliament_url = PQA::RecentQuestionsURL.url(Date.today())
                                                            ^^
app/controllers/early_bird_dashboard_controller.rb:17:3: C: Layout/ClassStructure: constants is supposed to appear before public_methods.
  NEW      = 'New'
  ^^^^^^^^^^^^^^^^
app/controllers/early_bird_dashboard_controller.rb:30:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/transferred_controller.rb:45:14: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
      .merge({ ...
             ^
app/controllers/transferred_controller.rb:46:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        transferred:        true,
        ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/transferred_controller.rb:46:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
        transferred:        true,
        ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/transferred_controller.rb:47:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        raising_member_id:  '0',
        ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/transferred_controller.rb:49:7: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
      })
      ^
app/controllers/transferred_controller.rb:58:5: C: Layout/RescueEnsureAlignment: rescue at 58, 4 is not aligned with def with_valid_dates at 52, 2.
    rescue DateTimeInputError
    ^^^^^^
app/controllers/transferred_controller.rb:60:28: C: Rails/HttpStatus: Prefer :unprocessable_entity over 422 to define HTTP status code.
      render(:new, status: 422)
                           ^^^
app/controllers/action_officer_reminder_controller.rb:1:38: C: Layout/ExtraSpacing: Unnecessary spacing detected.
class ActionOfficerReminderController  < ApplicationController
                                     ^
app/controllers/action_officer_reminder_controller.rb:1:40: C: Layout/SpaceAroundOperators: Operator < should be surrounded by a single space.
class ActionOfficerReminderController  < ApplicationController
                                       ^
app/controllers/action_officer_reminder_controller.rb:7:45: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
      ao_pq.increment(:reminder_accept).save()
                                            ^^
app/controllers/action_officer_reminder_controller.rb:14:44: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
      ao_pq.increment(:reminder_draft).save()
                                           ^^
app/controllers/action_officer_reminder_controller.rb:23:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    flash[:success] = "reminder sent"
                      ^^^^^^^^^^^^^^^
app/controllers/health_check_controller.rb:1:28: C: Layout/ExtraSpacing: Unnecessary spacing detected.
class HealthCheckController  < ApplicationController
                           ^
app/controllers/health_check_controller.rb:1:30: C: Layout/SpaceAroundOperators: Operator < should be surrounded by a single space.
class HealthCheckController  < ApplicationController
                             ^
app/controllers/ao_token_filter.rb:2:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/controllers/ao_token_filter.rb:8:3: W: Lint/UselessAccessModifier: Useless private access modifier.
  private
  ^^^^^^^
app/controllers/ao_token_filter.rb:10:3: W: Lint/IneffectiveAccessModifier: private (on line 8) does not make singleton methods private. Use private_class_method or private inside a class << self block instead.
  def self.validate_token(controller)
  ^^^
app/controllers/ao_token_filter.rb:19:5: C: Style/RedundantReturn: Redundant return detected.
    return result
    ^^^^^^
app/controllers/ao_token_filter.rb:22:3: W: Lint/IneffectiveAccessModifier: private (on line 8) does not make singleton methods private. Use private_class_method or private inside a class << self block instead.
  def self.log_and_redirect(controller, token_state)
  ^^^
app/controllers/ao_token_filter.rb:23:33: C: Performance/OpenStruct: Consider using Struct over OpenStruct to optimize the performance.
    params         = OpenStruct.new
                                ^^^
app/controllers/ao_token_filter.rb:31:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    controller.update_page_title "Unauthorised (401)"
                                 ^^^^^^^^^^^^^^^^^^^^
app/controllers/ao_token_filter.rb:32:23: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    controller.render :file => "shared/token_#{token_state.to_s}.html.slim", status: :unauthorized
                      ^^^^^^^^
app/controllers/ao_token_filter.rb:32:60: W: Lint/StringConversionInInterpolation: Redundant use of Object#to_s in interpolation.
    controller.render :file => "shared/token_#{token_state.to_s}.html.slim", status: :unauthorized
                                                           ^^^^
app/controllers/ao_token_filter.rb:35:3: W: Lint/IneffectiveAccessModifier: private (on line 8) does not make singleton methods private. Use private_class_method or private inside a class << self block instead.
  def self.log_error(token_state, params)
  ^^^
app/controllers/ao_token_filter.rb:37:21: C: Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
                    type: "#{token_state}_token", ...
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/ao_token_filter.rb:44:3: W: Lint/IneffectiveAccessModifier: private (on line 8) does not make singleton methods private. Use private_class_method or private inside a class << self block instead.
  def self.extract_uin(controller)
  ^^^
app/controllers/ao_token_filter.rb:48:8: C: Performance/RegexpMatch: Use match? instead of =~ when MatchData is not used.
    if request_path =~ /^\/assignment\//
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/ao_token_filter.rb:48:24: C: Style/RegexpLiteral: Use %r around regular expression.
    if request_path =~ /^\/assignment\//
                       ^^^^^^^^^^^^^^^^^
app/controllers/ao_token_filter.rb:51:5: C: Style/EmptyElse: Redundant else-clause.
    else
    ^^^^
app/controllers/ao_token_filter.rb:56:3: W: Lint/IneffectiveAccessModifier: private (on line 8) does not make singleton methods private. Use private_class_method or private inside a class << self block instead.
  def self.extract_user_name(controller)
  ^^^
app/controllers/commission_controller.rb:8:5: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
    status = checking_valid_dates do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/commission_controller.rb:21:7: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
         'Error in commissioning question' 
      ^^^
app/controllers/commission_controller.rb:21:43: C: Layout/TrailingWhitespace: Trailing whitespace detected.
         'Error in commissioning question' 
                                          ^
app/controllers/commission_controller.rb:22:15: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      when 422 
              ^
app/controllers/commission_controller.rb:27:12: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
           locals:  { question: pq },
           ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/commission_controller.rb:28:12: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
           status:  status)
           ^^^^^^^^^^^^^^^
app/controllers/commission_controller.rb:33:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :partial => 'shared/commissioned', :locals => {uin: @pq}
           ^^^^^^^^^^^
app/controllers/commission_controller.rb:33:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :partial => 'shared/commissioned', :locals => {uin: @pq}
                                              ^^^^^^^^^^
app/controllers/commission_controller.rb:33:58: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    render :partial => 'shared/commissioned', :locals => {uin: @pq}
                                                         ^
app/controllers/commission_controller.rb:33:67: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    render :partial => 'shared/commissioned', :locals => {uin: @pq}
                                                                  ^
app/controllers/commission_controller.rb:40:7: C: Layout/MultilineMethodCallIndentation: Align .permit with .require on line 39.
      .permit(:pq_id, :minister_id, :policy_minister_id,
      ^^^^^^^
app/controllers/commission_controller.rb:41:14: C: Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
             { action_officer_id: [] },
             ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/commission_controller.rb:42:14: C: Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
             :date_for_answer, :internal_deadline)
             ^^^^^^^^^^^^^^^^
app/controllers/commission_controller.rb:49:5: C: Layout/RescueEnsureAlignment: rescue at 49, 4 is not aligned with def checking_valid_dates at 45, 2.
    rescue DateTimeInputError
    ^^^^^^
app/controllers/press_desks_controller.rb:23:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/press_desks_controller.rb:24:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def create
  ^^^
app/controllers/press_desks_controller.rb:44:1: C: Layout/AccessModifierIndentation: Indent access modifiers like private.
private
^^^^^^^
app/controllers/statistics_controller.rb:10:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      PqStatistics::PercentOnTime, 
                                  ^
app/controllers/statistics_controller.rb:17:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      PqStatistics::TimeToAssign, 
                                 ^
app/controllers/statistics_controller.rb:24:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      PqStatistics::AoResponseTime, 
                                   ^
app/controllers/statistics_controller.rb:31:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      PqStatistics::AoChurn, 
                            ^
app/controllers/directorates_controller.rb:26:23: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      flash[:success] ='Directorate was successfully created.'
                      ^
app/controllers/directorates_controller.rb:42:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/directorates_controller.rb:43:1: C: Layout/AccessModifierIndentation: Indent access modifiers like private.
private
^^^^^^^
app/controllers/directorates_controller.rb:43:1: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
private
^^^^^^^
app/controllers/preview_controller.rb:9:17: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    @now = Time.now.strftime("%d/%m/%Y")
                ^^^
app/controllers/preview_controller.rb:9:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @now = Time.now.strftime("%d/%m/%Y")
                             ^^^^^^^^^^
app/controllers/preview_controller.rb:10:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    update_page_title "Preview"
                      ^^^^^^^^^
app/controllers/ogds_controller.rb:27:23: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      flash[:success] ='OGD was successfully created.'
                      ^
app/controllers/ogds_controller.rb:48:1: C: Layout/AccessModifierIndentation: Indent access modifiers like private.
private
^^^^^^^
app/controllers/actionlist_members_controller.rb:46:1: C: Layout/AccessModifierIndentation: Indent access modifiers like private.
private
^^^^^^^
app/controllers/export_controller.rb:36:5: C: Style/ParallelAssignment: Do not use parallel assignment.
    date_from, date_to = [ ...
    ^^^^^^^^^^^^^^^^^^^^^^
app/controllers/export_controller.rb:41:5: C: Layout/RescueEnsureAlignment: rescue at 41, 4 is not aligned with def with_valid_dates at 35, 2.
    rescue DateTimeInputError
    ^^^^^^
app/controllers/export_controller.rb:44:37: C: Rails/HttpStatus: Prefer :unprocessable_entity over 422 to define HTTP status code.
      render form_template, status: 422
                                    ^^^
app/controllers/manual_reject_commission_controller.rb:7:5: C: Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.
    unless ao_pq ...
    ^^^^^^^^^^^^
app/controllers/manual_reject_commission_controller.rb:9:19: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
      redirect_to({ controller: 'dashboard', action: 'index' })
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/manual_reject_commission_controller.rb:12:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        reason_option: 'Other Reason', 
                                      ^
app/controllers/manual_reject_commission_controller.rb:16:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/manual_reject_commission_controller.rb:19:19: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
      redirect_to({ controller: 'pqs', action: 'show', id: uin })
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:5:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @users = User.order(Arel.sql("lower(name)")).page(params[:page]).per_page(15)
                                 ^^^^^^^^^^^^^
app/controllers/users_controller.rb:21:47: W: Rails/ActiveRecordAliases: Use update instead of update_attributes.
    flash[:success] = 'User updated' if @user.update_attributes(user_params)
                                              ^^^^^^^^^^^^^^^^^
app/controllers/ping_controller.rb:1:21: C: Layout/ExtraSpacing: Unnecessary spacing detected.
class PingController  < ApplicationController
                    ^
app/controllers/ping_controller.rb:1:23: C: Layout/SpaceAroundOperators: Operator < should be surrounded by a single space.
class PingController  < ApplicationController
                      ^
app/controllers/search_controller.rb:1:23: C: Layout/ExtraSpacing: Unnecessary spacing detected.
class SearchController  < ApplicationController
                      ^
app/controllers/search_controller.rb:1:25: C: Layout/SpaceAroundOperators: Operator < should be surrounded by a single space.
class SearchController  < ApplicationController
                        ^
app/controllers/search_controller.rb:6:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    pq  = Pq.where("lower(uin) = :p", p: uin.downcase)
                   ^^^^^^^^^^^^^^^^^
app/controllers/root_controller.rb:5:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if current_user.pq_user?
    ^^
app/controllers/root_controller.rb:9:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if current_user.finance_user?
    ^^
app/controllers/root_controller.rb:13:5: C: Style/RedundantReturn: Redundant return detected.
    return render :file => 'public/401.html', :status => :unauthorized
    ^^^^^^
app/controllers/root_controller.rb:13:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    return render :file => 'public/401.html', :status => :unauthorized
                  ^^^^^^^^
app/controllers/root_controller.rb:13:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    return render :file => 'public/401.html', :status => :unauthorized
                                              ^^^^^^^^^^
app/controllers/pq_user_filter.rb:3:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    if !has_access(controller)
    ^^
app/controllers/pq_user_filter.rb:3:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if !has_access(controller)
    ^^
app/controllers/pq_user_filter.rb:3:5: C: Style/NegatedIf: Favor unless over if for negative conditions.
    if !has_access(controller) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/pq_user_filter.rb:4:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      controller.render :file => "public/401.html", :status => :unauthorized
                        ^^^^^^^^
app/controllers/pq_user_filter.rb:4:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      controller.render :file => "public/401.html", :status => :unauthorized
                                 ^^^^^^^^^^^^^^^^^
app/controllers/pq_user_filter.rb:4:53: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      controller.render :file => "public/401.html", :status => :unauthorized
                                                    ^^^^^^^^^^
app/controllers/pq_user_filter.rb:8:12: C: Naming/PredicateName: Rename has_access to access?.
  def self.has_access(controller)
           ^^^^^^^^^^
app/controllers/users/sessions_controller.rb:1:7: C: Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class Users::SessionsController < Devise::SessionsController
      ^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/invitations_controller.rb:1:7: C: Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class Users::InvitationsController < Devise::InvitationsController
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users/invitations_controller.rb:2:1: C: Layout/AccessModifierIndentation: Indent access modifiers like private.
private
^^^^^^^
app/controllers/users/invitations_controller.rb:5:64: W: Lint/UnusedBlockArgument: Unused block argument - u. You can omit the argument if you don't care about it.
    resource_class.invite!(invite_params, current_inviter) do |u|
                                                               ^
app/controllers/users/invitations_controller.rb:23:1: C: Layout/TrailingBlankLines: 2 trailing blank lines detected.
app/controllers/ministers_controller.rb:51:114: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
    params.require(:minister).permit(:name, :title, :email, :deleted, :member_id, minister_contacts_attributes: [ :id, :name, :email, :phone, :deleted, :minister_id ])
                                                                                                                 ^
app/controllers/ministers_controller.rb:51:165: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
    params.require(:minister).permit(:name, :title, :email, :deleted, :member_id, minister_contacts_attributes: [ :id, :name, :email, :phone, :deleted, :minister_id ])
                                                                                                                                                                    ^
app/controllers/admin_controller.rb:2:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    before_action :authenticate_user!, PQUserFilter
^^^^
app/controllers/admin_controller.rb:4:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  def index ...
  ^^^^^^^^^
app/controllers/pqs_controller.rb:64:30: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def reassign_ao_if_present(pq)
                             ^^
app/controllers/pqs_controller.rb:74:3: C: Layout/ClassStructure: constants is supposed to appear before private_methods.
  PARAMS = [ ...
  ^^^^^^^^^^
app/controllers/pqs_controller.rb:94:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/pqs_controller.rb:120:5: C: Layout/IndentArray: Indent the right bracket the same as the start of the line where the left bracket is.
    ]
    ^
app/controllers/members_controller.rb:1:24: C: Layout/ExtraSpacing: Unnecessary spacing detected.
class MembersController  < ApplicationController
                       ^
app/controllers/members_controller.rb:1:26: C: Layout/SpaceAroundOperators: Operator < should be surrounded by a single space.
class MembersController  < ApplicationController
                         ^
app/controllers/members_controller.rb:6:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    render :partial => 'by_name'
           ^^^^^^^^^^^
app/controllers/assignment_controller.rb:21:7: C: Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.
      unless @response.valid? ...
      ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assignment_controller.rb:22:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        flash[:error] = "Form was not completed"
                        ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assignment_controller.rb:28:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          update_page_title "PQ assigned"
                            ^^^^^^^^^^^^^
app/controllers/assignment_controller.rb:32:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          update_page_title "PQ rejected"
                            ^^^^^^^^^^^^^
app/controllers/assignment_controller.rb:38:11: C: Layout/LeadingCommentSpace: Missing space after #.
          #TODO: log unexpected input
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/assignment_controller.rb:57:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :file => 'public/404.html', :status => :not_found
             ^^^^^^^^
app/controllers/assignment_controller.rb:57:42: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      render :file => 'public/404.html', :status => :not_found
                                         ^^^^^^^^^^
app/controllers/metrics_dashboard_controller.rb:7:19: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      format.html {
                  ^
app/controllers/metrics_dashboard_controller.rb:11:19: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      format.json {
                  ^
app/controllers/metrics_dashboard_controller.rb:12:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        if request.headers["Authorization"] == token
                           ^^^^^^^^^^^^^^^
app/controllers/metrics_dashboard_controller.rb:13:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          render :json => Presenters::DashboardGecko.json_report(@dashboard.gecko)
                 ^^^^^^^^
app/controllers/metrics_dashboard_controller.rb:15:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          render :file => "public/401.html", :status => :unauthorized
                 ^^^^^^^^
app/controllers/metrics_dashboard_controller.rb:15:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          render :file => "public/401.html", :status => :unauthorized
                          ^^^^^^^^^^^^^^^^^
app/controllers/metrics_dashboard_controller.rb:15:46: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          render :file => "public/401.html", :status => :unauthorized
                                             ^^^^^^^^^^
app/controllers/metrics_dashboard_controller.rb:25:73: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      .encode_credentials(Rails.application.config.gecko_auth_username, "X")
                                                                        ^^^
app/controllers/deputy_directors_controller.rb:24:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/deputy_directors_controller.rb:25:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/deputy_directors_controller.rb:26:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def create
  ^^^
app/controllers/deputy_directors_controller.rb:29:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      if @deputy_director.save ...
      ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/deputy_directors_controller.rb:46:1: C: Layout/AccessModifierIndentation: Indent access modifiers like private.
private
^^^^^^^
app/controllers/gecko_report_controller.rb:8:19: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      format.html {
                  ^
app/controllers/gecko_report_controller.rb:12:19: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      format.json {
                  ^
app/controllers/gecko_report_controller.rb:13:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        if request.headers["Authorization"] == token
                           ^^^^^^^^^^^^^^^
app/controllers/gecko_report_controller.rb:14:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          render :json => @gecko_report.to_json
                 ^^^^^^^^
app/controllers/gecko_report_controller.rb:16:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          render :file => "public/401.html", :status => :unauthorized
                 ^^^^^^^^
app/controllers/gecko_report_controller.rb:16:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          render :file => "public/401.html", :status => :unauthorized
                          ^^^^^^^^^^^^^^^^^
app/controllers/gecko_report_controller.rb:16:46: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          render :file => "public/401.html", :status => :unauthorized
                                             ^^^^^^^^^^
app/controllers/gecko_report_controller.rb:26:73: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      .encode_credentials(Rails.application.config.gecko_auth_username, "X")
                                                                        ^^^
app/controllers/gecko_report_controller.rb:27:119: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    puts ActionController::HttpAuthentication::Basic.encode_credentials(Rails.application.config.gecko_auth_username, "X")
                                                                                                                      ^^^
app/controllers/finance_user_filter.rb:3:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    if !has_access(controller)
    ^^
app/controllers/finance_user_filter.rb:3:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if !has_access(controller)
    ^^
app/controllers/finance_user_filter.rb:3:5: C: Style/NegatedIf: Favor unless over if for negative conditions.
    if !has_access(controller) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/finance_user_filter.rb:4:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      controller.render :file => "public/401.html", :status => :unauthorized
                        ^^^^^^^^
app/controllers/finance_user_filter.rb:4:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      controller.render :file => "public/401.html", :status => :unauthorized
                                 ^^^^^^^^^^^^^^^^^
app/controllers/finance_user_filter.rb:4:53: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      controller.render :file => "public/401.html", :status => :unauthorized
                                                    ^^^^^^^^^^
app/controllers/finance_user_filter.rb:8:12: C: Naming/PredicateName: Rename has_access to access?.
  def self.has_access(controller)
           ^^^^^^^^^^
app/controllers/divisions_controller.rb:44:1: C: Layout/AccessModifierIndentation: Indent access modifiers like private.
private
^^^^^^^
app/controllers/divisions_controller.rb:53:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def prepare_directorates
  ^^^
app/controllers/press_officers_controller.rb:24:1: C: Layout/EmptyLines: Extra blank line detected.
app/controllers/press_officers_controller.rb:25:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def create
  ^^^
app/controllers/dashboard_controller.rb:13:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    update_page_title "Backlog"
                      ^^^^^^^^^
app/controllers/dashboard_controller.rb:26:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    update_page_title "In progress"
                      ^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:40:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    update_page_title "Dashboard"
                      ^^^^^^^^^^^
app/controllers/dashboard_controller.rb:57:52: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @statuses                 = @questions.all.map {|q| q.state}.uniq
                                                   ^^
app/controllers/dashboard_controller.rb:57:52: C: Style/SymbolProc: Pass &:state as an argument to map instead of a block.
    @statuses                 = @questions.all.map {|q| q.state}.uniq
                                                   ^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:57:64: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    @statuses                 = @questions.all.map {|q| q.state}.uniq
                                                               ^
app/controllers/dashboard_controller.rb:57:65: C: Performance/ChainArrayAllocation: Use map...uniq! instead of map...uniq.
    @statuses                 = @questions.all.map {|q| q.state}.uniq
                                                                ^^^^^
app/controllers/dashboard_controller.rb:58:90: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @question_types           = @questions.where("question_type != 'Follow-up IWW'").map {|q| q.question_type}.uniq
                                                                                         ^^
app/controllers/dashboard_controller.rb:58:90: C: Style/SymbolProc: Pass &:question_type as an argument to map instead of a block.
    @question_types           = @questions.where("question_type != 'Follow-up IWW'").map {|q| q.question_type}.uniq
                                                                                         ^^^^^^^^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:58:110: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    @question_types           = @questions.where("question_type != 'Follow-up IWW'").map {|q| q.question_type}.uniq
                                                                                                             ^
app/controllers/dashboard_controller.rb:58:111: C: Performance/ChainArrayAllocation: Use map...uniq! instead of map...uniq.
    @question_types           = @questions.where("question_type != 'Follow-up IWW'").map {|q| q.question_type}.uniq
                                                                                                              ^^^^^
app/controllers/dashboard_controller.rb:59:52: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @transfers                = @questions.all.map {|q| q.transferred}.uniq
                                                   ^^
app/controllers/dashboard_controller.rb:59:52: C: Style/SymbolProc: Pass &:transferred as an argument to map instead of a block.
    @transfers                = @questions.all.map {|q| q.transferred}.uniq
                                                   ^^^^^^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:59:70: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    @transfers                = @questions.all.map {|q| q.transferred}.uniq
                                                                     ^
app/controllers/dashboard_controller.rb:59:71: C: Performance/ChainArrayAllocation: Use map...uniq! instead of map...uniq.
    @transfers                = @questions.all.map {|q| q.transferred}.uniq
                                                                      ^^^^^
app/controllers/dashboard_controller.rb:60:52: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @i_will_writes            = @questions.all.map {|q| q.i_will_write}.uniq
                                                   ^^
app/controllers/dashboard_controller.rb:60:52: C: Style/SymbolProc: Pass &:i_will_write as an argument to map instead of a block.
    @i_will_writes            = @questions.all.map {|q| q.i_will_write}.uniq
                                                   ^^^^^^^^^^^^^^^^^^^^
app/controllers/dashboard_controller.rb:60:71: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    @i_will_writes            = @questions.all.map {|q| q.i_will_write}.uniq
                                                                      ^
app/controllers/dashboard_controller.rb:60:72: C: Performance/ChainArrayAllocation: Use map...uniq! instead of map...uniq.
    @i_will_writes            = @questions.all.map {|q| q.i_will_write}.uniq
                                                                       ^^^^^
app/controllers/dashboard_controller.rb:61:73: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @answering_minister_names = @questions.where('minister_id > 0').map {|q| q.minister.name}.uniq
                                                                        ^^
app/controllers/dashboard_controller.rb:61:93: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    @answering_minister_names = @questions.where('minister_id > 0').map {|q| q.minister.name}.uniq
                                                                                            ^
app/controllers/dashboard_controller.rb:61:94: C: Performance/ChainArrayAllocation: Use map...uniq! instead of map...uniq.
    @answering_minister_names = @questions.where('minister_id > 0').map {|q| q.minister.name}.uniq
                                                                                             ^^^^^
app/controllers/dashboard_controller.rb:62:80: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @policy_minister_names    = @questions.where('policy_minister_id > 0').map {|q| q.policy_minister.name}.uniq
                                                                               ^^
app/controllers/dashboard_controller.rb:62:107: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    @policy_minister_names    = @questions.where('policy_minister_id > 0').map {|q| q.policy_minister.name}.uniq
                                                                                                          ^
app/controllers/dashboard_controller.rb:62:108: C: Performance/ChainArrayAllocation: Use map...uniq! instead of map...uniq.
    @policy_minister_names    = @questions.where('policy_minister_id > 0').map {|q| q.policy_minister.name}.uniq
                                                                                                           ^^^^^
app/helpers/stats_helper.rb:2:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  METRIC_DASHBOARD_HITS = "dashboard.hits"
                          ^^^^^^^^^^^^^^^^
app/helpers/stats_helper.rb:4:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  MAIL_TIMING   = "mails.timing"
                  ^^^^^^^^^^^^^^
app/helpers/stats_helper.rb:5:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  MAIL_SUCCESS  = "mails.success"
                  ^^^^^^^^^^^^^^^
app/helpers/stats_helper.rb:6:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  MAIL_FAILURE  = "mails.failed"
                  ^^^^^^^^^^^^^^
app/helpers/stats_helper.rb:8:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  PAGES_TIMING   = "pages.timing"
                   ^^^^^^^^^^^^^^
app/helpers/stats_helper.rb:9:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  PAGES_ERRORS   = "pages.errors"
                   ^^^^^^^^^^^^^^
app/helpers/stats_helper.rb:11:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  TOKENS_GENERATE = "tokens.generate"
                    ^^^^^^^^^^^^^^^^^
app/helpers/stats_helper.rb:12:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  TOKENS_VALID = "tokens.validation.valid"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/stats_helper.rb:13:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  TOKENS_INVALID = "tokens.validation.invalid"
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/stats_helper.rb:15:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  IMPORT = "questions.import"
           ^^^^^^^^^^^^^^^^^^
app/helpers/stats_helper.rb:16:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  PROGRESS = "questions.progress"
             ^^^^^^^^^^^^^^^^^^^^
app/helpers/devise_helper.rb:9:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    return "" if resource.errors.empty?
           ^^
app/helpers/devise_helper.rb:12:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    sentence = I18n.t("errors.messages.not_saved",
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/devise_helper.rb:23:10: C: Rails/OutputSafety: Tagging a string as html safe may be a security risk.
    html.html_safe
         ^^^^^^^^^
app/helpers/application_helper.rb:5:24: C: Style/InlineComment: Avoid trailing inline comments.
      'pq-msg-success' # We set success msg for notice as well as success
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:17:23: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def state_classname(s)
                      ^
app/helpers/application_helper.rb:18:7: C: Performance/StringReplacement: Use tr instead of gsub.
    s.gsub('_', '-')
      ^^^^^^^^^^^^^^
app/helpers/application_helper.rb:21:19: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def state_label(s)
                  ^
app/helpers/application_helper.rb:26:5: C: Style/DoubleNegation: Avoid the use of double negation (!!).
    !!(question.present? && question.open? && minister.try(:deleted?))
    ^
app/services/mail_service/base.rb:3:5: W: Lint/UselessAccessModifier: Useless module_function access modifier.
    module_function
    ^^^^^^^^^^^^^^^
app/services/mail_service/base.rb:14:7: C: Naming/MemoizedInstanceVariableName: Memoized variable @sender does not match method name default_sender. Use @default_sender instead.
      @sender ||= Settings.mail_from
      ^^^^^^^
app/services/mail_service/base.rb:18:7: C: Naming/MemoizedInstanceVariableName: Memoized variable @reply_to does not match method name default_reply_to. Use @default_reply_to instead.
      @reply_to ||= Settings.mail_reply_to
      ^^^^^^^^^
app/services/mail_service/pq.rb:3:5: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line after module_function.
    module_function
    ^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:8:7: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
      { ...
      ^
app/services/mail_service/pq.rb:10:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        from:   Settings.commission_mail_from,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:11:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        cc:     params[:cc],
        ^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:11:28: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
        cc:     params[:cc],
                           ^
app/services/mail_service/pq.rb:21:26: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def acceptance_email(pq, ao)
                         ^^
app/services/mail_service/pq.rb:21:30: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def acceptance_email(pq, ao)
                             ^^
app/services/mail_service/pq.rb:22:1: C: Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
app/services/mail_service/pq.rb:22:1: C: Style/InlineComment: Avoid trailing inline comments.
=begin ...
^^^^^^
app/services/mail_service/pq.rb:34:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          cc:     params[:cc],
          ^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:34:30: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
          cc:     params[:cc],
                             ^
app/services/mail_service/pq.rb:39:1: C: Layout/EmptyLines: Extra blank line detected.
app/services/mail_service/pq.rb:40:1: C: Layout/EmptyLines: Extra blank line detected.
app/services/mail_service/pq.rb:40:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/services/mail_service/pq.rb:43:35: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def acceptance_reminder_email(pq, ao)
                                  ^^
app/services/mail_service/pq.rb:43:39: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def acceptance_reminder_email(pq, ao)
                                      ^^
app/services/mail_service/pq.rb:44:1: C: Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
app/services/mail_service/pq.rb:44:1: C: Style/InlineComment: Avoid trailing inline comments.
=begin ...
^^^^^^
app/services/mail_service/pq.rb:54:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          cc:     params[:cc],
          ^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:54:30: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
          cc:     params[:cc],
                             ^
app/services/mail_service/pq.rb:58:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/services/mail_service/pq.rb:61:30: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def draft_reminder_email(pq, ao)
                             ^^
app/services/mail_service/pq.rb:61:34: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def draft_reminder_email(pq, ao)
                                 ^^
app/services/mail_service/pq.rb:62:1: C: Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
app/services/mail_service/pq.rb:62:1: C: Style/InlineComment: Avoid trailing inline comments.
=begin ...
^^^^^^
app/services/mail_service/pq.rb:72:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          cc:     params[:cc],
          ^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:72:30: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
          cc:     params[:cc],
                             ^
app/services/mail_service/pq.rb:80:7: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
      { ...
      ^
app/services/mail_service/pq.rb:82:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        cc:     params[:cc],
        ^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:83:30: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        params: params.merge({ date: Date.today.to_s(:date)})
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:83:43: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
        params: params.merge({ date: Date.today.to_s(:date)})
                                          ^^^^^
app/services/mail_service/pq.rb:83:60: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        params: params.merge({ date: Date.today.to_s(:date)})
                                                           ^
app/services/mail_service/pq.rb:91:7: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
      { ...
      ^
app/services/mail_service/pq.rb:93:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        cc:     params[:cc],
        ^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:94:30: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        params: params.merge({ date: Date.today.to_s(:date)})
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:94:43: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
        params: params.merge({ date: Date.today.to_s(:date)})
                                          ^^^^^
app/services/mail_service/pq.rb:94:60: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        params: params.merge({ date: Date.today.to_s(:date)})
                                                           ^
app/services/mail_service/pq.rb:100:5: W: Lint/UselessAccessModifier: Useless private_class_method access modifier.
    private_class_method
    ^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:104:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        mailer:   'PqMailer',
        ^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:105:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        to:       params[:email],
        ^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:106:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        from:     default_sender,
        ^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/pq.rb:108:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        params:   params
        ^^^^^^^^^^^^^^^^
app/services/mail_service/import.rb:3:5: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line after module_function.
    module_function
    ^^^^^^^^^^^^^^^
app/services/mail_service/import.rb:7:18: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      details_h = 
                 ^
app/services/mail_service/import.rb:8:7: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
      { ...
      ^
app/services/mail_service/import.rb:10:24: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
        params: err_msg,
                       ^
app/services/mail_service/import.rb:17:18: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      details_h = 
                 ^
app/services/mail_service/import.rb:18:7: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
      { ...
      ^
app/services/mail_service/import.rb:20:23: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
        params: report,
                      ^
app/services/mail_service/import.rb:26:5: W: Lint/UselessAccessModifier: Useless private_class_method access modifier.
    private_class_method
    ^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/import.rb:31:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          mailer:   'ImportMailer',
          ^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/import.rb:32:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          from:     default_sender,
          ^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/import.rb:33:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          to:       Settings.mail_tech_support,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/db_sync.rb:3:5: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line after module_function.
    module_function
    ^^^^^^^^^^^^^^^
app/services/mail_service/db_sync.rb:7:18: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      details_h = 
                 ^
app/services/mail_service/db_sync.rb:8:7: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
      { ...
      ^
app/services/mail_service/db_sync.rb:9:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        mailer:   'DbSyncMailer',
        ^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/db_sync.rb:10:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        method:   'notify_fail',
        ^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/db_sync.rb:11:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        params:   err_msg,
        ^^^^^^^^^^^^^^^^^
app/services/mail_service/db_sync.rb:12:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        from:     default_sender,
        ^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/db_sync.rb:13:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        to:       Settings.mail_tech_support,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service/db_sync.rb:20:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
app/services/token_service.rb:11:1: C: Layout/EmptyLines: Extra blank line detected.
app/services/token_service.rb:12:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def valid?(token, path, entity)
  ^^^
app/services/token_service.rb:19:1: C: Layout/EmptyLines: Extra blank line detected.
app/services/token_service.rb:20:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def expired?(token, path, entity)
  ^^^
app/services/token_service.rb:21:5: W: Lint/UselessAssignment: Useless assignment to variable - token_dec. Did you mean token?
    token_dec = Devise.token_generator.digest(Token, :token_digest, token)
    ^^^^^^^^^
app/services/token_service.rb:23:29: C: Style/DateTime: Prefer Time over DateTime.
    result = token.expire < DateTime.now
                            ^^^^^^^^^^^^
app/services/token_service.rb:23:38: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
    result = token.expire < DateTime.now
                                     ^^^
app/services/token_service.rb:28:24: C: Style/DateTime: Prefer Time over DateTime.
    now_no_time_zone = DateTime.now
                       ^^^^^^^^^^^^
app/services/token_service.rb:28:33: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
    now_no_time_zone = DateTime.now
                                ^^^
app/services/token_service.rb:31:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/services/working_days.rb:4:23: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def self.days_after(d, v)
                      ^
app/services/working_days.rb:4:26: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def self.days_after(d, v)
                         ^
app/services/working_days.rb:7:7: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      break unless weekend?(result)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/working_days.rb:13:1: C: Layout/AccessModifierIndentation: Indent access modifiers like private.
private
^^^^^^^
app/services/working_days.rb:13:1: W: Lint/UselessAccessModifier: Useless private access modifier.
private
^^^^^^^
app/services/working_days.rb:15:3: W: Lint/IneffectiveAccessModifier: private (on line 13) does not make singleton methods private. Use private_class_method or private inside a class << self block instead.
  def self.weekend?(day)
  ^^^
app/services/assignment_service.rb:31:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/services/mail_service.rb:36:16: C: Style/DateTime: Prefer Time over DateTime.
      sent_at: DateTime.now
               ^^^^^^^^^^^^
app/services/mail_service.rb:36:25: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
      sent_at: DateTime.now
                        ^^^
app/services/mail_service.rb:42:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      status:            'sending',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/mail_service.rb:43:26: C: Style/DateTime: Prefer Time over DateTime.
      send_attempted_at: DateTime.now,
                         ^^^^^^^^^^^^
app/services/mail_service.rb:43:35: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
      send_attempted_at: DateTime.now,
                                  ^^^
app/services/mail_service.rb:56:3: W: Lint/UselessAccessModifier: Useless private_class_method access modifier.
  private_class_method
  ^^^^^^^^^^^^^^^^^^^^
app/services/mail_service.rb:62:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          to:       to,
          ^^^^^^^^^^^^
app/services/mail_service.rb:63:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          from:     from,
          ^^^^^^^^^^^^^^
app/services/mail_service.rb:64:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          cc:       cc,
          ^^^^^^^^^^^^
app/services/health_check_service.rb:2:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  COMPONENT_CLASSES = 
                     ^
app/services/health_check_service.rb:3:3: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
  [ ...
  ^
app/services/health_check_service.rb:11:18: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    @components = 
                 ^
app/services/health_check_service.rb:13:9: C: Layout/MultilineMethodCallIndentation: Align .select with COMPONENT_CLASSES on line 12.
        .select(&:time_to_run?)
        ^^^^^^^
app/services/health_check_service.rb:14:9: C: Layout/MultilineMethodCallIndentation: Align .map with COMPONENT_CLASSES on line 12.
        .map(&:new)
        ^^^^
app/services/health_check_service.rb:14:9: C: Performance/ChainArrayAllocation: Use select...map! instead of select...map.
        .map(&:new)
        ^^^^^^^^^^^
app/services/health_check_service.rb:23:47: C: Performance/ChainArrayAllocation: Use map...flatten! instead of map...flatten.
    errors = @components.map(&:error_messages).flatten
                                              ^^^^^^^^
app/services/health_check_service.rb:28:3: W: Lint/UselessAccessModifier: Useless private access modifier.
  private
  ^^^^^^^
app/services/health_check_service.rb:30:3: C: Layout/ClassStructure: constants is supposed to appear before public_methods.
  HealthCheckReport =  ...
  ^^^^^^^^^^^^^^^^^^^^
app/services/health_check_service.rb:30:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  HealthCheckReport = 
                     ^
app/services/health_check_service.rb:31:38: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    Struct.new(:status, :messages) do 
                                     ^
app/services/health_check_service.rb:39:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    end   
       ^^^
app/services/watchlist_report_service.rb:4:18: C: Naming/UncommunicativeMethodParamName: Only use lowercase characters for method parameter.
  def initialize(tokenService = nil, current_time = nil)
                 ^^^^^^^^^^^^
app/services/watchlist_report_service.rb:4:18: C: Naming/VariableName: Use snake_case for variable names.
  def initialize(tokenService = nil, current_time = nil)
                 ^^^^^^^^^^^^
app/services/watchlist_report_service.rb:5:5: C: Naming/VariableName: Use snake_case for variable names.
    @tokenService = tokenService || TokenService.new
    ^^^^^^^^^^^^^
app/services/watchlist_report_service.rb:6:37: C: Style/DateTime: Prefer Time over DateTime.
    @current_time = current_time || DateTime.now.utc
                                    ^^^^^^^^^^^^
app/services/watchlist_report_service.rb:10:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "watchlist-" + @current_time.to_s
    ^^^^^^^^^^^^
app/services/watchlist_report_service.rb:18:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :name   => 'Watchlist',
      ^^^^^^^^^^^^^^^^^^^^^^
app/services/watchlist_report_service.rb:18:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :name   => 'Watchlist',
      ^^^^^^^^^^
app/services/watchlist_report_service.rb:19:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :entity => entity,
      ^^^^^^^^^^
app/services/watchlist_report_service.rb:20:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :email  => 'pqtest@digital.justice.gov.uk',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/watchlist_report_service.rb:20:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :email  => 'pqtest@digital.justice.gov.uk',
      ^^^^^^^^^^
app/services/watchlist_report_service.rb:21:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :token  => token,
      ^^^^^^^^^^^^^^^^
app/services/watchlist_report_service.rb:21:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :token  => token,
      ^^^^^^^^^^
app/services/watchlist_report_service.rb:22:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :cc     => cc
      ^^^^^^^^^^^^^
app/services/watchlist_report_service.rb:22:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :cc     => cc
      ^^^^^^^^^^
app/services/watchlist_report_service.rb:25:5: C: Style/GlobalVars: Do not introduce global variables.
    $statsd.increment "#{StatsHelper::TOKENS_GENERATE}.watchlist"
    ^^^^^^^
app/services/quick_actions_service.rb:4:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for valid? is too high. [7/6]
  def valid?(pq_list, internal_deadline = "01/01/2000", draft_received = "01/01/2000" , pod_clearance = "01/01/2000", cleared_by_minister = "01/01/2000", answer_submitted = "01/01/2000") ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/quick_actions_service.rb:4:13: C: Metrics/ParameterLists: Avoid parameter lists longer than 5 parameters. [6/5]
  def valid?(pq_list, internal_deadline = "01/01/2000", draft_received = "01/01/2000" , pod_clearance = "01/01/2000", cleared_by_minister = "01/01/2000", answer_submitted = "01/01/2000")
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/quick_actions_service.rb:4:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  def valid?(pq_list, internal_deadline = "01/01/2000", draft_received = "01/01/2000" , pod_clearance = "01/01/2000", cleared_by_minister = "01/01/2000", answer_submitted = "01/01/2000")
                                          ^^^^^^^^^^^^
app/services/quick_actions_service.rb:4:74: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  def valid?(pq_list, internal_deadline = "01/01/2000", draft_received = "01/01/2000" , pod_clearance = "01/01/2000", cleared_by_minister = "01/01/2000", answer_submitted = "01/01/2000")
                                                                         ^^^^^^^^^^^^
app/services/quick_actions_service.rb:4:86: C: Layout/SpaceBeforeComma: Space found before comma.
  def valid?(pq_list, internal_deadline = "01/01/2000", draft_received = "01/01/2000" , pod_clearance = "01/01/2000", cleared_by_minister = "01/01/2000", answer_submitted = "01/01/2000")
                                                                                     ^
app/services/quick_actions_service.rb:4:105: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  def valid?(pq_list, internal_deadline = "01/01/2000", draft_received = "01/01/2000" , pod_clearance = "01/01/2000", cleared_by_minister = "01/01/2000", answer_submitted = "01/01/2000")
                                                                                                        ^^^^^^^^^^^^
app/services/quick_actions_service.rb:4:141: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  def valid?(pq_list, internal_deadline = "01/01/2000", draft_received = "01/01/2000" , pod_clearance = "01/01/2000", cleared_by_minister = "01/01/2000", answer_submitted = "01/01/2000")
                                                                                                                                            ^^^^^^^^^^^^
app/services/quick_actions_service.rb:4:174: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  def valid?(pq_list, internal_deadline = "01/01/2000", draft_received = "01/01/2000" , pod_clearance = "01/01/2000", cleared_by_minister = "01/01/2000", answer_submitted = "01/01/2000")
                                                                                                                                                                             ^^^^^^^^^^^^
app/services/quick_actions_service.rb:5:67: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    parse_datetime(internal_deadline) unless internal_deadline == ""
                                                                  ^^
app/services/quick_actions_service.rb:6:61: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    parse_datetime(draft_received) unless draft_received == ""
                                                            ^^
app/services/quick_actions_service.rb:7:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    parse_datetime(pod_clearance) unless pod_clearance == ""
                                                          ^^
app/services/quick_actions_service.rb:8:71: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    parse_datetime(cleared_by_minister) unless cleared_by_minister == ""
                                                                      ^^
app/services/quick_actions_service.rb:9:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    parse_datetime(answer_submitted) unless answer_submitted == ""
                                                                ^^
app/services/quick_actions_service.rb:11:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
app/services/quick_actions_service.rb:17:17: C: Style/EmptyLiteral: Use array literal [] instead of Array.new.
    pqs_array = Array.new
                ^^^^^^^^^
app/services/quick_actions_service.rb:18:28: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    pq_list.split(',').map { |p|
                           ^
app/services/quick_actions_service.rb:20:7: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
      if real_pq.nil?
      ^^
app/services/quick_actions_service.rb:29:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for update_pq_list is too high. [12/6]
  def update_pq_list(pq_list, internal_deadline, draft_received, pod_clearance, cleared_by_minister, answer_submitted) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/quick_actions_service.rb:29:3: C: Metrics/MethodLength: Method has too many lines. [35/30]
  def update_pq_list(pq_list, internal_deadline, draft_received, pod_clearance, cleared_by_minister, answer_submitted) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/quick_actions_service.rb:29:21: C: Metrics/ParameterLists: Avoid parameter lists longer than 5 parameters. [6/5]
  def update_pq_list(pq_list, internal_deadline, draft_received, pod_clearance, cleared_by_minister, answer_submitted)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/quick_actions_service.rb:30:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
app/services/quick_actions_service.rb:32:5: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    if pq_batch == false
    ^^
app/services/quick_actions_service.rb:36:26: C: Style/AndOr: Use && instead of and.
    if internal_deadline and internal_deadline != ''
                         ^^^
app/services/quick_actions_service.rb:43:23: C: Style/AndOr: Use && instead of and.
    if draft_received and draft_received != ''
                      ^^^
app/services/quick_actions_service.rb:49:22: C: Style/AndOr: Use && instead of and.
    if pod_clearance and pod_clearance != ''
                     ^^^
app/services/quick_actions_service.rb:55:28: C: Style/AndOr: Use && instead of and.
    if cleared_by_minister and cleared_by_minister != ''
                           ^^^
app/services/quick_actions_service.rb:61:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    if answer_submitted and answer_submitted != ''
    ^^
app/services/quick_actions_service.rb:61:25: C: Style/AndOr: Use && instead of and.
    if answer_submitted and answer_submitted != ''
                        ^^^
app/services/quick_actions_service.rb:68:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def get_action_officer_pqs_id(pq)
  ^^^
app/services/quick_actions_service.rb:68:33: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def get_action_officer_pqs_id(pq)
                                ^^
app/services/quick_actions_service.rb:70:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    unless ao_pq.nil?
    ^^^^^^
app/services/quick_actions_service.rb:70:5: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
    unless ao_pq.nil?
    ^^^^^^
app/services/quick_actions_service.rb:70:5: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    unless ao_pq.nil? ...
    ^^^^^^^^^^^^^^^^^
app/services/quick_actions_service.rb:74:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def mail_reminders(pqs)
  ^^^
app/services/quick_actions_service.rb:77:7: C: Style/Next: Use next to skip iteration.
      unless ao_pq_id.nil?
      ^^^^^^^^^^^^^^^^^^^^
app/services/quick_actions_service.rb:80:46: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
        ao_pq.increment(:reminder_draft).save()
                                             ^^
app/services/quick_actions_service.rb:84:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def mail_draft_list(pq_list)
  ^^^
app/services/early_bird_report_service.rb:4:18: C: Naming/UncommunicativeMethodParamName: Only use lowercase characters for method parameter.
  def initialize(tokenService = nil, current_time = nil)
                 ^^^^^^^^^^^^
app/services/early_bird_report_service.rb:4:18: C: Naming/VariableName: Use snake_case for variable names.
  def initialize(tokenService = nil, current_time = nil)
                 ^^^^^^^^^^^^
app/services/early_bird_report_service.rb:5:5: C: Naming/VariableName: Use snake_case for variable names.
    @tokenService = tokenService || TokenService.new
    ^^^^^^^^^^^^^
app/services/early_bird_report_service.rb:6:37: C: Style/DateTime: Prefer Time over DateTime.
    @current_time = current_time || DateTime.now.utc
                                    ^^^^^^^^^^^^
app/services/early_bird_report_service.rb:10:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "early_bird-" + @current_time.to_s
    ^^^^^^^^^^^^^
app/services/early_bird_report_service.rb:18:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :name   => 'early_bird',
      ^^^^^^^^^^^^^^^^^^^^^^^
app/services/early_bird_report_service.rb:18:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :name   => 'early_bird',
      ^^^^^^^^^^
app/services/early_bird_report_service.rb:19:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :entity => entity,
      ^^^^^^^^^^
app/services/early_bird_report_service.rb:20:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :email  => 'pqtest@digital.justice.gov.uk',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/early_bird_report_service.rb:20:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :email  => 'pqtest@digital.justice.gov.uk',
      ^^^^^^^^^^
app/services/early_bird_report_service.rb:21:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :token  => token,
      ^^^^^^^^^^^^^^^^
app/services/early_bird_report_service.rb:21:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :token  => token,
      ^^^^^^^^^^
app/services/early_bird_report_service.rb:22:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :cc     => cc
      ^^^^^^^^^^^^^
app/services/early_bird_report_service.rb:22:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :cc     => cc
      ^^^^^^^^^^
app/services/early_bird_report_service.rb:25:5: C: Style/GlobalVars: Do not introduce global variables.
    $statsd.increment "#{StatsHelper::TOKENS_GENERATE}.earlybird"
    ^^^^^^^
app/services/commissioning_service.rb:5:18: C: Naming/UncommunicativeMethodParamName: Only use lowercase characters for method parameter.
  def initialize(tokenService = nil, current_time = nil)
                 ^^^^^^^^^^^^
app/services/commissioning_service.rb:5:18: C: Naming/VariableName: Use snake_case for variable names.
  def initialize(tokenService = nil, current_time = nil)
                 ^^^^^^^^^^^^
app/services/commissioning_service.rb:6:5: C: Naming/VariableName: Use snake_case for variable names.
    @tokenService = tokenService || TokenService.new
    ^^^^^^^^^^^^^
app/services/commissioning_service.rb:7:37: C: Style/DateTime: Prefer Time over DateTime.
    @current_time = current_time || DateTime.now.utc
                                    ^^^^^^^^^^^^
app/services/commissioning_service.rb:11:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    raise ArgumentError, "form is invalid" unless form.valid?
                         ^^^^^^^^^^^^^^^^^
app/services/commissioning_service.rb:15:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      ao_pqs = form.action_officer_id.uniq.map do |ao_id| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/services/commissioning_service.rb:15:43: C: Performance/ChainArrayAllocation: Use uniq...map! instead of uniq...map.
      ao_pqs = form.action_officer_id.uniq.map do |ao_id|
                                          ^^^^
app/services/commissioning_service.rb:50:5: W: Lint/UselessAssignment: Useless assignment to variable - dd.
    dd      = ao.deputy_director
    ^^
app/services/commissioning_service.rb:52:5: C: Style/GlobalVars: Do not introduce global variables.
    $statsd.increment "#{StatsHelper::TOKENS_GENERATE}.commission"
    ^^^^^^^
app/services/commissioning_service.rb:63:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/services/pqa_service.rb:11:5: C: Style/GlobalVars: Do not introduce global variables.
    $statsd.time("#{StatsHelper::IMPORT}.qa.response_time") do
    ^^^^^^^
app/services/pqa_service.rb:17:1: C: Layout/EmptyLines: Extra blank line detected.
app/services/pqa_service.rb:18:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def question(uin)
  ^^^
app/services/pqa_service.rb:19:5: C: Style/GlobalVars: Do not introduce global variables.
    $statsd.time("#{StatsHelper::IMPORT}.qa.response_time") do
    ^^^^^^^
app/services/deployment.rb:22:3: C: Style/ModuleFunction: Use module_function instead of extend self.
  extend self
  ^^^^^^^^^^^
bin/bundle:2:32: C: Style/ExpandPathArguments: Use expand_path('../Gemfile', __dir__) instead of expand_path('../../Gemfile', __FILE__).
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile', __FILE__)
                               ^^^^^^^^^^^
bin/rails:2:17: C: Style/ExpandPathArguments: Use expand_path('../config/application', __dir__) instead of expand_path('../../config/application', __FILE__).
APP_PATH = File.expand_path('../../config/application',  __FILE__)
                ^^^^^^^^^^^
bin/rails:2:56: C: Layout/ExtraSpacing: Unnecessary spacing detected.
APP_PATH = File.expand_path('../../config/application',  __FILE__)
                                                       ^
config/routes.rb:32:22: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  devise_for :users, :controllers => { :invitations => 'users/invitations', sessions: 'users/sessions' }
                     ^^^^^^^^^^^^^^^
config/routes.rb:32:40: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  devise_for :users, :controllers => { :invitations => 'users/invitations', sessions: 'users/sessions' }
                                       ^^^^^^^^^^^^^^^
config/routes.rb:34:26: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  resources :pqs, only: [ :index, :show, :update ]
                         ^
config/routes.rb:34:49: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  resources :pqs, only: [ :index, :show, :update ]
                                                ^
config/routes.rb:83:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #get 'preview' => 'preview#index'
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:116:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  match "*path", to: "application#page_not_found", via: :all
        ^^^^^^^
config/routes.rb:116:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  match "*path", to: "application#page_not_found", via: :all
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:119:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    get '401', :to => 'application#unauthorized'
               ^^^^^^
config/routes.rb:120:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    get '404', :to => 'application#page_not_found'
               ^^^^^^
config/routes.rb:121:16: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    get '500', :to => 'application#server_error'
               ^^^^^^
config/schedule.rb:8:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
job_type :rake,  "cd :path && RAILS_ENV=production bundle exec rake :task :output"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/schedule.rb:12:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
every 1.day, :at => '4:00 am' do
             ^^^^^^
config/schedule.rb:16:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
every 1.day, :at => '6:00 am' do
             ^^^^^^
config/schedule.rb:22:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
every :weekday, :at => '5:30 am' do
                ^^^^^^
config/schedule.rb:24:6: C: Performance/RegexpMatch: Use match? instead of =~ when MatchData is not used.
  if ENV['ENV'] =~ /prod/
     ^^^^^^^^^^^^^^^^^^^^
config/schedule.rb:35:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
every 1.day, :at => '1:00 am' do
             ^^^^^^
config/schedule.rb:50:1: C: Layout/TrailingBlankLines: 1 trailing blank lines detected.
config/environments/production.rb:59:3: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
  if ENV['ASSET_HOST']
  ^^
config/environments/production.rb:102:84: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    ActionMailer::Base.default_url_options = { host: sending_host, protocol: 'http'}
                                                                                   ^
config/environments/production.rb:103:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    ActionMailer::Base.default :from => Settings.mail_from
                               ^^^^^^^^
config/environments/production.rb:104:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    ActionMailer::Base.default :reply_to => Settings.mail_reply_to
                               ^^^^^^^^^^^^
config/environments/production.rb:106:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
        address: ENV['SMTP_HOSTNAME'] || 'localhost',
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:37:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 6).
  # no details of the controller action or parameters.
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:42:7: C: Layout/CommentIndentation: Incorrect indentation detected (column 6 instead of 2).
      # config.logstasher.source = 'logstasher'
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:52:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    ActionMailer::Base.default :from => Settings.mail_from
                               ^^^^^^^^
config/environments/development.rb:53:32: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    ActionMailer::Base.default :reply_to => Settings.mail_reply_to
                               ^^^^^^^^^^^^
config/environments/development.rb:54:98: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    ActionMailer::Base.default_url_options = { host: sending_host, protocol: 'http', port: '3000'}
                                                                                                 ^
config/environments/development.rb:56:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
        address: ENV['SMTP_HOSTNAME'] || 'localhost',
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/test.rb:16:28: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  config.serve_static_files  = true
                           ^
config/environments/test.rb:16:30: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
  config.serve_static_files  = true
                             ^
config/environments/test.rb:17:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.static_cache_control = "public, max-age=3600"
                                ^^^^^^^^^^^^^^^^^^^^^^
config/environments/test.rb:50:91: C: Layout/SpaceAfterColon: Space missing after colon.
    ActionMailer::Base.default_url_options = { host: sending_host, protocol: 'https', port:'3000'}
                                                                                          ^
config/environments/test.rb:50:98: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    ActionMailer::Base.default_url_options = { host: sending_host, protocol: 'https', port:'3000'}
                                                                                                 ^
config/environments/test.rb:52:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
        address: ENV['SMTP_HOSTNAME'] || 'localhost',
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environment.rb:2:14: C: Style/ExpandPathArguments: Use expand_path('application', __dir__) instead of expand_path('../application', __FILE__).
require File.expand_path('../application', __FILE__)
             ^^^^^^^^^^^
config/environment.rb:10:53: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
smtpconfig = ActionMailer::Base.smtp_settings.reject{|x| x['password'] }
                                                    ^
config/environment.rb:10:53: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
smtpconfig = ActionMailer::Base.smtp_settings.reject{|x| x['password'] }
                                                    ^^
config/application.rb:1:14: C: Style/ExpandPathArguments: Use expand_path('boot', __dir__) instead of expand_path('../boot', __FILE__).
require File.expand_path('../boot', __FILE__)
             ^^^^^^^^^^^
config/application.rb:2:20: C: Style/ExpandPathArguments: Use expand_path('../lib', __dir__) instead of expand_path('../../lib', __FILE__).
$LOAD_PATH << File.expand_path('../../lib', __FILE__)
                   ^^^^^^^^^^^
config/application.rb:47:5: C: Layout/LeadingCommentSpace: Missing space after #.
    #config.assets.paths << "#{Rails}/vendor/assets/fonts"
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:48:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.eager_load_paths << Rails.root.join("app", "assets", "fonts")
                                               ^^^^^
config/application.rb:48:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.eager_load_paths << Rails.root.join("app", "assets", "fonts")
                                                      ^^^^^^^^
config/application.rb:48:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    config.eager_load_paths << Rails.root.join("app", "assets", "fonts")
                                                                ^^^^^^^
config/application.rb:49:35: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
    config.eager_load_paths += %w[ app/assets/images ]
                                  ^
config/application.rb:49:53: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
    config.eager_load_paths += %w[ app/assets/images ]
                                                    ^
config/application.rb:50:35: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
    config.eager_load_paths += %w[ app/assets/javascripts ]
                                  ^
config/application.rb:50:58: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
    config.eager_load_paths += %w[ app/assets/javascripts ]
                                                         ^
config/application.rb:51:35: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
    config.eager_load_paths += %w[ app/assets/stylesheets ]
                                  ^
config/application.rb:51:58: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
    config.eager_load_paths += %w[ app/assets/stylesheets ]
                                                         ^
config/application.rb:52:35: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
    config.eager_load_paths += %w[ app/assets/stylesheets/moj ]
                                  ^
config/application.rb:52:62: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
    config.eager_load_paths += %w[ app/assets/stylesheets/moj ]
                                                             ^
config/application.rb:53:35: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
    config.eager_load_paths += %w[ app/assets/stylesheets/vendor ]
                                  ^
config/application.rb:53:65: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
    config.eager_load_paths += %w[ app/assets/stylesheets/vendor ]
                                                                ^
config/application.rb:55:1: C: Layout/EmptyLines: Extra blank line detected.
config/application.rb:60:29: C: Style/RedundantSelf: Redundant self detected.
    config.exceptions_app = self.routes
                            ^^^^^^^^^^^
config/application.rb:63:5: C: Style/GlobalVars: Do not introduce global variables.
    $statsd = Statsd.new 'localhost', 8125
    ^^^^^^^
config/boot.rb:2:32: C: Style/ExpandPathArguments: Use expand_path('../Gemfile', __dir__) instead of expand_path('../../Gemfile', __FILE__).
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile', __FILE__)
                               ^^^^^^^^^^^
config/boot.rb:4:33: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
require 'bundler/setup' if File.exists?(ENV['BUNDLE_GEMFILE'])
                                ^^^^^^^
config/unicorn.rb:1:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
n = Integer(ENV["WEB_CONCURRENCY"] || 4)
                ^^^^^^^^^^^^^^^^^
config/unicorn.rb:5:32: C: Style/AndOr: Use && instead of and.
  defined?(ActiveRecord::Base) and ActiveRecord::Base.connection.disconnect!
                               ^^^
config/unicorn.rb:9:32: C: Style/AndOr: Use && instead of and.
  defined?(ActiveRecord::Base) and ActiveRecord::Base.establish_connection
                               ^^^
config/initializers/host_env.rb:2:3: C: Style/ModuleFunction: Use module_function instead of extend self.
  extend self
  ^^^^^^^^^^^
config/initializers/host_env.rb:4:7: C: Naming/PredicateName: Rename is_live? to live?.
  def is_live?
      ^^^^^^^^
config/initializers/host_env.rb:8:7: C: Naming/PredicateName: Rename is_staging? to staging?.
  def is_staging?
      ^^^^^^^^^^^
config/initializers/host_env.rb:9:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
   ENV['SENDING_HOST'] =~ /staging.pq.dsd.io/
  ^
config/initializers/host_env.rb:12:7: C: Naming/PredicateName: Rename is_dev? to dev?.
  def is_dev?
      ^^^^^^^
config/initializers/host_env.rb:15:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
config/initializers/assets.rb:1:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( favicon.ico )
                                              ^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:1:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( favicon.ico )
                                                 ^
config/initializers/assets.rb:1:62: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( favicon.ico )
                                                             ^
config/initializers/assets.rb:2:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( apple-touch-icon-152x152.png )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:2:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( apple-touch-icon-152x152.png )
                                                 ^
config/initializers/assets.rb:2:79: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( apple-touch-icon-152x152.png )
                                                                              ^
config/initializers/assets.rb:3:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( apple-touch-icon-120x120.png )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:3:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( apple-touch-icon-120x120.png )
                                                 ^
config/initializers/assets.rb:3:79: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( apple-touch-icon-120x120.png )
                                                                              ^
config/initializers/assets.rb:4:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( apple-touch-icon-76x76.png )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:4:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( apple-touch-icon-76x76.png )
                                                 ^
config/initializers/assets.rb:4:77: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( apple-touch-icon-76x76.png )
                                                                            ^
config/initializers/assets.rb:5:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( apple-touch-icon-60x60.png )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:5:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( apple-touch-icon-60x60.png )
                                                 ^
config/initializers/assets.rb:5:77: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( apple-touch-icon-60x60.png )
                                                                            ^
config/initializers/assets.rb:6:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( opengraph-image.png )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:6:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( opengraph-image.png )
                                                 ^
config/initializers/assets.rb:6:70: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( opengraph-image.png )
                                                                     ^
config/initializers/assets.rb:7:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( gov.uk_logotype_crown.png )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:7:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( gov.uk_logotype_crown.png )
                                                 ^
config/initializers/assets.rb:7:76: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( gov.uk_logotype_crown.png )
                                                                           ^
config/initializers/assets.rb:8:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( font-awesome.css )
                                              ^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:8:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( font-awesome.css )
                                                 ^
config/initializers/assets.rb:8:67: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( font-awesome.css )
                                                                  ^
config/initializers/assets.rb:9:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( select2.css )
                                              ^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:9:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( select2.css )
                                                 ^
config/initializers/assets.rb:9:62: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( select2.css )
                                                             ^
config/initializers/assets.rb:10:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( select2-bootstrap.css )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:10:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( select2-bootstrap.css )
                                                 ^
config/initializers/assets.rb:10:72: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( select2-bootstrap.css )
                                                                       ^
config/initializers/assets.rb:11:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( vendor/jquery.datetimepicker.css )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:11:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( vendor/jquery.datetimepicker.css )
                                                 ^
config/initializers/assets.rb:11:83: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( vendor/jquery.datetimepicker.css )
                                                                                  ^
config/initializers/assets.rb:12:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( vendor/pq-select2.css )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:12:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( vendor/pq-select2.css )
                                                 ^
config/initializers/assets.rb:12:72: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( vendor/pq-select2.css )
                                                                       ^
config/initializers/paper_trail.rb:1:22: C: Style/WordArray: Use %w or %W for an array of words.
PaperTrail.enabled = ['1', 'true'].include?(ENV['PAPER_TRAIL_ENABLED'])
                     ^^^^^^^^^^^^^
config/initializers/devise.rb:45:35: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.case_insensitive_keys = [ :email ]
                                  ^
config/initializers/devise.rb:45:42: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.case_insensitive_keys = [ :email ]
                                         ^
config/initializers/devise.rb:50:35: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.strip_whitespace_keys = [ :email ]
                                  ^
config/initializers/devise.rb:50:42: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.strip_whitespace_keys = [ :email ]
                                         ^
config/initializers/devise.rb:202:25: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.unlock_keys = [ :email ]
                        ^
config/initializers/devise.rb:202:32: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.unlock_keys = [ :email ]
                               ^
config/initializers/devise.rb:259:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 3).
  # are using only default views.
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:260:4: C: Layout/IndentationConsistency: Inconsistent indentation detected.
   config.scoped_views = true
   ^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:314:48: C: Layout/SpaceAfterComma: Space missing after comma.
  Warden::Manager.after_authentication do |user,auth,opts|
                                               ^
config/initializers/devise.rb:314:49: W: Lint/UnusedBlockArgument: Unused block argument - auth. If it's necessary, use _ or _auth as an argument name to indicate that it won't be used.
  Warden::Manager.after_authentication do |user,auth,opts|
                                                ^^^^
config/initializers/devise.rb:314:53: C: Layout/SpaceAfterComma: Space missing after comma.
  Warden::Manager.after_authentication do |user,auth,opts|
                                                    ^
config/initializers/devise.rb:314:54: W: Lint/UnusedBlockArgument: Unused block argument - opts. If it's necessary, use _ or _opts as an argument name to indicate that it won't be used.
  Warden::Manager.after_authentication do |user,auth,opts|
                                                     ^^^^
config/initializers/devise.rb:316:5: C: Style/GlobalVars: Do not introduce global variables.
    $statsd.increment 'login'
    ^^^^^^^
config/initializers/devise.rb:319:41: C: Layout/SpaceAfterComma: Space missing after comma.
  Warden::Manager.before_logout do |user,auth,opts|
                                        ^
config/initializers/devise.rb:319:42: W: Lint/UnusedBlockArgument: Unused block argument - auth. If it's necessary, use _ or _auth as an argument name to indicate that it won't be used.
  Warden::Manager.before_logout do |user,auth,opts|
                                         ^^^^
config/initializers/devise.rb:319:46: C: Layout/SpaceAfterComma: Space missing after comma.
  Warden::Manager.before_logout do |user,auth,opts|
                                             ^
config/initializers/devise.rb:319:47: W: Lint/UnusedBlockArgument: Unused block argument - opts. If it's necessary, use _ or _opts as an argument name to indicate that it won't be used.
  Warden::Manager.before_logout do |user,auth,opts|
                                              ^^^^
config/initializers/devise.rb:322:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
config/initializers/monitoring.rb:1:40: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
ActiveSupport::Notifications.subscribe /process_action.action_controller/ do |*args|
                                       ^
config/initializers/monitoring.rb:6:3: W: Lint/UselessAssignment: Useless assignment to variable - path.
  path = event.payload[:path]
  ^^^^
config/initializers/monitoring.rb:14:3: C: Style/GlobalVars: Do not introduce global variables.
  $statsd.timing("#{key}.page", page_duration)
  ^^^^^^^
config/initializers/monitoring.rb:15:3: C: Style/GlobalVars: Do not introduce global variables.
  $statsd.timing("#{key}.view", view_duration)
  ^^^^^^^
config/initializers/monitoring.rb:16:3: C: Style/GlobalVars: Do not introduce global variables.
  $statsd.timing("#{key}.db", db_duration)
  ^^^^^^^
config/initializers/constants.rb:1:28: C: Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
LARGEST_POSTGRES_INTEGER = 2147483647
                           ^^^^^^^^^^
config/initializers/constants.rb:2:1: C: Layout/TrailingBlankLines: 1 trailing blank lines detected.
config/initializers/geckoboard_stats_start.rb:2:17: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  Date.strptime("{ 2016, 5, 19 }", "{ %Y, %m, %d }")
                ^^^^^^^^^^^^^^^^^
config/initializers/geckoboard_stats_start.rb:2:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  Date.strptime("{ 2016, 5, 19 }", "{ %Y, %m, %d }")
                                   ^^^^^^^^^^^^^^^^
features/watch_list_spec.rb:3:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
feature "Watch list member sees allocated questions", suspend_cleaner: true do
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/watch_list_spec.rb:17:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "An admin can create a new watchlist member" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/watch_list_spec.rb:29:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "An admin can trigger an email notification to the watchlist members with a link to the daily question list" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/watch_list_spec.rb:40:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "A watchlist member follows an email link to view the list of daily questions" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/watch_list_spec.rb:52:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "The URL token sent to the watchlist member expires after 24 hours" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/watch_list_spec.rb:53:37: C: Style/DateTime: Prefer Time over DateTime.
    WatchlistReportService.new(nil, DateTime.now - 2.days).notify_watchlist
                                    ^^^^^^^^^^^^
features/watch_list_spec.rb:53:46: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
    WatchlistReportService.new(nil, DateTime.now - 2.days).notify_watchlist
                                             ^^^
features/watch_list_spec.rb:68:32: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    q.internal_deadline = Date.today + 1.day
                               ^^^^^
features/watch_list_spec.rb:69:32: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    q.internal_deadline = Date.today + 2.day
                               ^^^^^
features/watch_list_spec.rb:69:40: C: Rails/PluralizationGrammar: Prefer 2.days.
    q.internal_deadline = Date.today + 2.day
                                       ^^^^^
features/http_client_spec.rb:4:26: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:default_settings) {[ 
                         ^
features/http_client_spec.rb:4:27: C: Layout/MultilineBlockLayout: Block body expression is on the same line as the block start.
  let(:default_settings) {[  ...
                          ^^
features/http_client_spec.rb:4:27: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:default_settings) {[ 
                          ^
features/http_client_spec.rb:4:28: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  let(:default_settings) {[ 
                           ^
features/http_client_spec.rb:4:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  let(:default_settings) {[ 
                           ^
features/http_client_spec.rb:5:7: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
      Settings.pq_rest_api.host,
      ^^^^^^^^^^^^^^^^^^^^^^^^^
features/http_client_spec.rb:9:4: C: Layout/BlockEndNewline: Expression at 9, 4 should be on its own line.
  ]}
   ^
features/http_client_spec.rb:11:15: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  let(:client)      { HTTPClient.new(*default_settings)                  }
              ^^^^^
features/http_client_spec.rb:11:56: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  let(:client)      { HTTPClient.new(*default_settings)                  }
                                                       ^^^^^^^^^^^^^^^^^
features/http_client_spec.rb:29:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      q   = PQA::QuestionBuilder.default("uin-1")
                                         ^^^^^^^
features/mark_a_question_as_iww_spec.rb:14:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/mark_a_question_as_iww_spec.rb:34:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "Parli-branch creates an IWW follow-up question" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/mark_a_question_as_iww_spec.rb:36:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Answer"
             ^^^^^^^^
features/mark_a_question_as_iww_spec.rb:47:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Answer"
             ^^^^^^^^
features/mark_a_question_as_iww_spec.rb:49:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "PQ commission"
             ^^^^^^^^^^^^^^^
features/mark_a_question_as_iww_spec.rb:56:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Answer"
             ^^^^^^^^
features/application_health_check_spec.rb:10:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
features/application_health_check_spec.rb:21:32: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
    expect(page.body).to match /Database Error/
                               ^
features/commission_question_spec.rb:13:10: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer @pq, =  PQA::QuestionLoader.new.load_and_import(2).
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
         ^^
features/commission_question_spec.rb:13:12: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
           ^
features/commission_question_spec.rb:13:13: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
            ^
features/commission_question_spec.rb:31:11: W: Lint/ParenthesesAsGroupedExpression: (...) interpreted as grouped expression.
    within ('#pq-frame-1') { expect(page).to have_button('Commission') }
          ^
features/commission_question_spec.rb:32:11: W: Lint/ParenthesesAsGroupedExpression: (...) interpreted as grouped expression.
    within ('#pq-frame-2') { expect(page).not_to have_button('Commission') }
          ^
features/commission_question_spec.rb:49:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "Save"
             ^^^^^^
features/commission_question_spec.rb:51:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("PQ assigned")
                                       ^^^^^^^^^^^^^
features/commission_question_spec.rb:66:47: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    expect(ao_mail.text_part.body).to include( "Thank you for agreeing to draft an answer to PQ #{@pq.uin}" )
                                              ^
features/commission_question_spec.rb:66:108: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    expect(ao_mail.text_part.body).to include( "Thank you for agreeing to draft an answer to PQ #{@pq.uin}" )
                                                                                                           ^
features/commission_question_spec.rb:75:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("PQ assignment")
                                       ^^^^^^^^^^^^^^^
features/commission_question_spec.rb:86:31: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      internal_deadline: Date.today
                              ^^^^^
features/commission_question_spec.rb:90:40: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    CommissioningService.new(nil, Date.today - 4.days).commission(form)
                                       ^^^^^
features/commission_question_spec.rb:91:14: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer ao_mail, = sent_mail.last.
    ao_mail, _ = sent_mail.last
             ^^
features/commission_question_spec.rb:95:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("Unauthorised (401)")
                                       ^^^^^^^^^^^^^^^^^^^^
features/commission_question_spec.rb:97:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/commission_question_spec.rb:99:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/backlog_filter_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
features/backlog_filter_spec.rb:24:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions')}
                    ^
features/backlog_filter_spec.rb:24:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions')}
                     ^
features/backlog_filter_spec.rb:24:77: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions')}
                                                                            ^
features/backlog_filter_spec.rb:26:55: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-from', Date.today-20)
                                                      ^^^^^
features/backlog_filter_spec.rb:26:60: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#date-for-answer', 'answer-from', Date.today-20)
                                                           ^
features/backlog_filter_spec.rb:27:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:27:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:27:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:30:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:30:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:30:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:35:55: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-from', Date.today-8)
                                                      ^^^^^
features/backlog_filter_spec.rb:35:60: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#date-for-answer', 'answer-from', Date.today-8)
                                                           ^
features/backlog_filter_spec.rb:36:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:36:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:36:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                                                                                      ^
features/backlog_filter_spec.rb:37:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:37:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:48:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:48:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:48:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:53:55: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-from', Date.today+20)
                                                      ^^^^^
features/backlog_filter_spec.rb:53:60: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#date-for-answer', 'answer-from', Date.today+20)
                                                           ^
features/backlog_filter_spec.rb:54:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:54:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:54:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                                                                                      ^
features/backlog_filter_spec.rb:57:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:57:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:57:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:62:53: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-to', Date.today-20)
                                                    ^^^^^
features/backlog_filter_spec.rb:62:58: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#date-for-answer', 'answer-to', Date.today-20)
                                                         ^
features/backlog_filter_spec.rb:63:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:63:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:63:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                                                                                      ^
features/backlog_filter_spec.rb:66:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:66:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:66:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:71:53: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-to', Date.today-8)
                                                    ^^^^^
features/backlog_filter_spec.rb:71:58: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#date-for-answer', 'answer-to', Date.today-8)
                                                         ^
features/backlog_filter_spec.rb:72:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('9 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:72:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('9 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:72:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('9 parliamentary questions out of 16.')}
                                                                                      ^
features/backlog_filter_spec.rb:73:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:73:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:85:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:85:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:85:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:90:53: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-to', Date.today+20)
                                                    ^^^^^
features/backlog_filter_spec.rb:90:58: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#date-for-answer', 'answer-to', Date.today+20)
                                                         ^
features/backlog_filter_spec.rb:91:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:91:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:91:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:94:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:94:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:94:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:99:59: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-from', Date.today-20)
                                                          ^^^^^
features/backlog_filter_spec.rb:99:64: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#internal-deadline', 'deadline-from', Date.today-20)
                                                               ^
features/backlog_filter_spec.rb:100:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:100:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:100:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:103:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:103:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:103:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:108:59: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-from', Date.today-7)
                                                          ^^^^^
features/backlog_filter_spec.rb:108:64: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#internal-deadline', 'deadline-from', Date.today-7)
                                                               ^
features/backlog_filter_spec.rb:109:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('6 parliamentary questions out of 16')}
                    ^
features/backlog_filter_spec.rb:109:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('6 parliamentary questions out of 16')}
                     ^
features/backlog_filter_spec.rb:109:86: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('6 parliamentary questions out of 16')}
                                                                                     ^
features/backlog_filter_spec.rb:110:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:110:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:119:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:119:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:119:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:124:59: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-from', Date.today+20)
                                                          ^^^^^
features/backlog_filter_spec.rb:124:64: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#internal-deadline', 'deadline-from', Date.today+20)
                                                               ^
features/backlog_filter_spec.rb:125:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:125:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:125:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                                                                                      ^
features/backlog_filter_spec.rb:128:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:128:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:128:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:133:57: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-to', Date.today-20)
                                                        ^^^^^
features/backlog_filter_spec.rb:133:62: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#internal-deadline', 'deadline-to', Date.today-20)
                                                             ^
features/backlog_filter_spec.rb:134:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:134:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:134:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                                                                                      ^
features/backlog_filter_spec.rb:137:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:137:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:137:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:142:57: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-to', Date.today-7)
                                                        ^^^^^
features/backlog_filter_spec.rb:142:62: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#internal-deadline', 'deadline-to', Date.today-7)
                                                             ^
features/backlog_filter_spec.rb:143:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('11 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:143:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('11 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:143:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('11 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:144:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:144:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:158:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:158:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:158:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:163:57: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-to', Date.today+10)
                                                        ^^^^^
features/backlog_filter_spec.rb:163:62: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#internal-deadline', 'deadline-to', Date.today+10)
                                                             ^
features/backlog_filter_spec.rb:164:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:164:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:164:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:167:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:167:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:167:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:173:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:173:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:173:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                                                                                      ^
features/backlog_filter_spec.rb:174:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:174:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:185:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:185:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:185:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:191:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:191:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:191:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                                                                                      ^
features/backlog_filter_spec.rb:192:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:192:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:203:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:203:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:203:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:209:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:209:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:209:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                                                                                      ^
features/backlog_filter_spec.rb:210:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:210:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:221:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:221:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:221:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:228:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:228:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:229:38: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      find('li#pq-frame-14').visible?      
                                     ^^^^^^
features/backlog_filter_spec.rb:245:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:245:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:245:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:248:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:248:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:248:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:254:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:254:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:254:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                                                                                      ^
features/backlog_filter_spec.rb:255:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:255:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:266:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:266:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:266:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:272:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:272:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:272:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                                                                                      ^
features/backlog_filter_spec.rb:275:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/backlog_filter_spec.rb:275:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/backlog_filter_spec.rb:275:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/backlog_filter_spec.rb:280:5: W: Lint/UselessAssignment: Useless assignment to variable - pq1. Did you mean pq10?
    pq1 = FactoryBot.create(:with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today-1, internal_deadline: Date.today-2, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay')
    ^^^
features/backlog_filter_spec.rb:280:79: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq1 = FactoryBot.create(:with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today-1, internal_deadline: Date.today-2, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay')
                                                                              ^^^^^
features/backlog_filter_spec.rb:280:84: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq1 = FactoryBot.create(:with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today-1, internal_deadline: Date.today-2, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                   ^
features/backlog_filter_spec.rb:280:112: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq1 = FactoryBot.create(:with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today-1, internal_deadline: Date.today-2, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                                               ^^^^^
features/backlog_filter_spec.rb:280:117: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq1 = FactoryBot.create(:with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today-1, internal_deadline: Date.today-2, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                                                    ^
features/backlog_filter_spec.rb:281:5: W: Lint/UselessAssignment: Useless assignment to variable - pq2. Did you mean pq12?
    pq2 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today-2, internal_deadline: Date.today-3, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay')
    ^^^
features/backlog_filter_spec.rb:281:84: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq2 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today-2, internal_deadline: Date.today-3, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                   ^^^^^
features/backlog_filter_spec.rb:281:89: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq2 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today-2, internal_deadline: Date.today-3, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                        ^
features/backlog_filter_spec.rb:281:117: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq2 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today-2, internal_deadline: Date.today-3, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                                                    ^^^^^
features/backlog_filter_spec.rb:281:122: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq2 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today-2, internal_deadline: Date.today-3, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                                                         ^
features/backlog_filter_spec.rb:282:5: W: Lint/UselessAssignment: Useless assignment to variable - pq3. Did you mean pq13?
    pq3 = FactoryBot.create(:with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today-3, internal_deadline: Date.today-4, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary')
    ^^^
features/backlog_filter_spec.rb:282:79: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq3 = FactoryBot.create(:with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today-3, internal_deadline: Date.today-4, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary')
                                                                              ^^^^^
features/backlog_filter_spec.rb:282:84: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq3 = FactoryBot.create(:with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today-3, internal_deadline: Date.today-4, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                   ^
features/backlog_filter_spec.rb:282:112: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq3 = FactoryBot.create(:with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today-3, internal_deadline: Date.today-4, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                                               ^^^^^
features/backlog_filter_spec.rb:282:117: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq3 = FactoryBot.create(:with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today-3, internal_deadline: Date.today-4, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                                                    ^
features/backlog_filter_spec.rb:283:5: W: Lint/UselessAssignment: Useless assignment to variable - pq4. Did you mean pq14?
    pq4 = FactoryBot.create(:with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today-4, internal_deadline: Date.today-5, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay')
    ^^^
features/backlog_filter_spec.rb:283:79: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq4 = FactoryBot.create(:with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today-4, internal_deadline: Date.today-5, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay')
                                                                              ^^^^^
features/backlog_filter_spec.rb:283:84: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq4 = FactoryBot.create(:with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today-4, internal_deadline: Date.today-5, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                   ^
features/backlog_filter_spec.rb:283:112: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq4 = FactoryBot.create(:with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today-4, internal_deadline: Date.today-5, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                                               ^^^^^
features/backlog_filter_spec.rb:283:117: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq4 = FactoryBot.create(:with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today-4, internal_deadline: Date.today-5, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                                                    ^
features/backlog_filter_spec.rb:284:5: W: Lint/UselessAssignment: Useless assignment to variable - pq5. Did you mean pq15?
    pq5 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-5', date_for_answer: Date.today-5, internal_deadline: Date.today-6, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
    ^^^
features/backlog_filter_spec.rb:284:84: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq5 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-5', date_for_answer: Date.today-5, internal_deadline: Date.today-6, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                   ^^^^^
features/backlog_filter_spec.rb:284:89: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq5 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-5', date_for_answer: Date.today-5, internal_deadline: Date.today-6, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                        ^
features/backlog_filter_spec.rb:284:117: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq5 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-5', date_for_answer: Date.today-5, internal_deadline: Date.today-6, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                                                    ^^^^^
features/backlog_filter_spec.rb:284:122: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq5 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-5', date_for_answer: Date.today-5, internal_deadline: Date.today-6, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                                                         ^
features/backlog_filter_spec.rb:285:5: W: Lint/UselessAssignment: Useless assignment to variable - pq6. Did you mean pq16?
    pq6 = FactoryBot.create(:with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today-6, internal_deadline: Date.today-7, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay')
    ^^^
features/backlog_filter_spec.rb:285:79: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq6 = FactoryBot.create(:with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today-6, internal_deadline: Date.today-7, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay')
                                                                              ^^^^^
features/backlog_filter_spec.rb:285:84: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq6 = FactoryBot.create(:with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today-6, internal_deadline: Date.today-7, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                   ^
features/backlog_filter_spec.rb:285:112: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq6 = FactoryBot.create(:with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today-6, internal_deadline: Date.today-7, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                                               ^^^^^
features/backlog_filter_spec.rb:285:117: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq6 = FactoryBot.create(:with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today-6, internal_deadline: Date.today-7, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                                                    ^
features/backlog_filter_spec.rb:286:5: W: Lint/UselessAssignment: Useless assignment to variable - pq7.
    pq7 = FactoryBot.create(:with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today-7, internal_deadline: Date.today-8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary')
    ^^^
features/backlog_filter_spec.rb:286:79: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq7 = FactoryBot.create(:with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today-7, internal_deadline: Date.today-8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary')
                                                                              ^^^^^
features/backlog_filter_spec.rb:286:84: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq7 = FactoryBot.create(:with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today-7, internal_deadline: Date.today-8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                   ^
features/backlog_filter_spec.rb:286:112: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq7 = FactoryBot.create(:with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today-7, internal_deadline: Date.today-8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                                               ^^^^^
features/backlog_filter_spec.rb:286:117: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq7 = FactoryBot.create(:with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today-7, internal_deadline: Date.today-8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                                                    ^
features/backlog_filter_spec.rb:287:5: W: Lint/UselessAssignment: Useless assignment to variable - pq8.
    pq8 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today-8, internal_deadline: Date.today-9, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary')
    ^^^
features/backlog_filter_spec.rb:287:84: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq8 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today-8, internal_deadline: Date.today-9, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                   ^^^^^
features/backlog_filter_spec.rb:287:89: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq8 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today-8, internal_deadline: Date.today-9, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                        ^
features/backlog_filter_spec.rb:287:117: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq8 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today-8, internal_deadline: Date.today-9, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                                                    ^^^^^
features/backlog_filter_spec.rb:287:122: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq8 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today-8, internal_deadline: Date.today-9, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                                                         ^
features/backlog_filter_spec.rb:288:5: W: Lint/UselessAssignment: Useless assignment to variable - pq9.
    pq9 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today-9, internal_deadline: Date.today-10, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary')
    ^^^
features/backlog_filter_spec.rb:288:84: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq9 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today-9, internal_deadline: Date.today-10, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                   ^^^^^
features/backlog_filter_spec.rb:288:89: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq9 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today-9, internal_deadline: Date.today-10, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                        ^
features/backlog_filter_spec.rb:288:117: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq9 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today-9, internal_deadline: Date.today-10, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                                                    ^^^^^
features/backlog_filter_spec.rb:288:122: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq9 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today-9, internal_deadline: Date.today-10, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                                                         ^
features/backlog_filter_spec.rb:289:5: W: Lint/UselessAssignment: Useless assignment to variable - pq10. Did you mean pq1?
    pq10 = FactoryBot.create(:with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today-10, internal_deadline: Date.today-11, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
    ^^^^
features/backlog_filter_spec.rb:289:81: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq10 = FactoryBot.create(:with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today-10, internal_deadline: Date.today-11, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                ^^^^^
features/backlog_filter_spec.rb:289:86: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq10 = FactoryBot.create(:with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today-10, internal_deadline: Date.today-11, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                     ^
features/backlog_filter_spec.rb:289:115: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq10 = FactoryBot.create(:with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today-10, internal_deadline: Date.today-11, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                                                  ^^^^^
features/backlog_filter_spec.rb:289:120: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq10 = FactoryBot.create(:with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today-10, internal_deadline: Date.today-11, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                                                       ^
features/backlog_filter_spec.rb:290:5: W: Lint/UselessAssignment: Useless assignment to variable - pq11. Did you mean pq1?
    pq11 = FactoryBot.create(:with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today-11, internal_deadline: Date.today-12, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary')
    ^^^^
features/backlog_filter_spec.rb:290:81: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq11 = FactoryBot.create(:with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today-11, internal_deadline: Date.today-12, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                ^^^^^
features/backlog_filter_spec.rb:290:86: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq11 = FactoryBot.create(:with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today-11, internal_deadline: Date.today-12, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                     ^
features/backlog_filter_spec.rb:290:115: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq11 = FactoryBot.create(:with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today-11, internal_deadline: Date.today-12, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                                                  ^^^^^
features/backlog_filter_spec.rb:290:120: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq11 = FactoryBot.create(:with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today-11, internal_deadline: Date.today-12, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary')
                                                                                                                       ^
features/backlog_filter_spec.rb:291:5: W: Lint/UselessAssignment: Useless assignment to variable - pq12. Did you mean pq1?
    pq12 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today-12, internal_deadline: Date.today-13, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay')
    ^^^^
features/backlog_filter_spec.rb:291:86: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq12 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today-12, internal_deadline: Date.today-13, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                     ^^^^^
features/backlog_filter_spec.rb:291:91: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq12 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today-12, internal_deadline: Date.today-13, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                          ^
features/backlog_filter_spec.rb:291:120: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq12 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today-12, internal_deadline: Date.today-13, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                                                       ^^^^^
features/backlog_filter_spec.rb:291:125: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq12 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today-12, internal_deadline: Date.today-13, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay')
                                                                                                                            ^
features/backlog_filter_spec.rb:292:5: W: Lint/UselessAssignment: Useless assignment to variable - pq13. Did you mean pq1?
    pq13 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today-13, internal_deadline: Date.today-14, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay')
    ^^^^
features/backlog_filter_spec.rb:292:86: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq13 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today-13, internal_deadline: Date.today-14, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                     ^^^^^
features/backlog_filter_spec.rb:292:91: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq13 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today-13, internal_deadline: Date.today-14, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                          ^
features/backlog_filter_spec.rb:292:120: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq13 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today-13, internal_deadline: Date.today-14, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                                                       ^^^^^
features/backlog_filter_spec.rb:292:125: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq13 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today-13, internal_deadline: Date.today-14, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                                                            ^
features/backlog_filter_spec.rb:293:5: W: Lint/UselessAssignment: Useless assignment to variable - pq14. Did you mean pq1?
    pq14 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today-14, internal_deadline: Date.today-15, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary')
    ^^^^
features/backlog_filter_spec.rb:293:86: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq14 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today-14, internal_deadline: Date.today-15, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                     ^^^^^
features/backlog_filter_spec.rb:293:91: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq14 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today-14, internal_deadline: Date.today-15, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                          ^
features/backlog_filter_spec.rb:293:120: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq14 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today-14, internal_deadline: Date.today-15, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                                                       ^^^^^
features/backlog_filter_spec.rb:293:125: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq14 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today-14, internal_deadline: Date.today-15, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                                                            ^
features/backlog_filter_spec.rb:294:5: W: Lint/UselessAssignment: Useless assignment to variable - pq15. Did you mean pq1?
    pq15 = FactoryBot.create(:with_pod_pq, uin: 'UIN-15', date_for_answer: Date.today-15, internal_deadline: Date.today-16, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay')
    ^^^^
features/backlog_filter_spec.rb:294:81: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq15 = FactoryBot.create(:with_pod_pq, uin: 'UIN-15', date_for_answer: Date.today-15, internal_deadline: Date.today-16, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                ^^^^^
features/backlog_filter_spec.rb:294:86: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq15 = FactoryBot.create(:with_pod_pq, uin: 'UIN-15', date_for_answer: Date.today-15, internal_deadline: Date.today-16, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                     ^
features/backlog_filter_spec.rb:294:115: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq15 = FactoryBot.create(:with_pod_pq, uin: 'UIN-15', date_for_answer: Date.today-15, internal_deadline: Date.today-16, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                                                  ^^^^^
features/backlog_filter_spec.rb:294:120: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq15 = FactoryBot.create(:with_pod_pq, uin: 'UIN-15', date_for_answer: Date.today-15, internal_deadline: Date.today-16, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                                                       ^
features/backlog_filter_spec.rb:295:5: W: Lint/UselessAssignment: Useless assignment to variable - pq16. Did you mean pq1?
    pq16 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-16', date_for_answer: Date.today-16, internal_deadline: Date.today-17, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay')
    ^^^^
features/backlog_filter_spec.rb:295:86: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq16 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-16', date_for_answer: Date.today-16, internal_deadline: Date.today-17, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                     ^^^^^
features/backlog_filter_spec.rb:295:91: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq16 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-16', date_for_answer: Date.today-16, internal_deadline: Date.today-17, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                          ^
features/backlog_filter_spec.rb:295:120: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq16 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-16', date_for_answer: Date.today-16, internal_deadline: Date.today-17, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                                                       ^^^^^
features/backlog_filter_spec.rb:295:125: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq16 = FactoryBot.create(:draft_pending_pq, uin: 'UIN-16', date_for_answer: Date.today-16, internal_deadline: Date.today-17, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay')
                                                                                                                            ^
features/backlog_filter_spec.rb:298:16: C: Layout/SpaceAfterMethodName: Do not put a space between a method name and the opening parenthesis.
  def test_date (filter_box, id, date)
               ^
features/backlog_filter_spec.rb:299:39: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within("#{filter_box}.filter-box"){ fill_in id, :with => date }
                                      ^
features/backlog_filter_spec.rb:299:53: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    within("#{filter_box}.filter-box"){ fill_in id, :with => date }
                                                    ^^^^^^^^
features/backlog_filter_spec.rb:303:40: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within("#{filter_box}.filter-box") {
                                       ^
features/backlog_filter_spec.rb:311:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => term
                        ^^^^^^^^
features/backlog_filter_spec.rb:315:41: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within("#{filter_name}.filter-box") {
                                        ^
features/backlog_filter_spec.rb:323:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:323:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/backlog_filter_spec.rb:324:43: C: Style/WhileUntilDo: Do not use do with multi-line while.
      while number_of_questions > counter do
                                          ^^
features/backlog_filter_spec.rb:325:35: C: Style/MultilineIfThen: Do not use then for multi-line if.
        if visibility == 'hidden' then
                                  ^^^^
features/backlog_filter_spec.rb:334:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/reassign_question_spec.rb:13:10: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer @pq, =  PQA::QuestionLoader.new.load_and_import(2).
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
         ^^
features/reassign_question_spec.rb:13:12: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
           ^
features/reassign_question_spec.rb:13:13: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
            ^
features/reassign_question_spec.rb:14:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/reassign_question_spec.rb:29:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "PQ commission"
             ^^^^^^^^^^^^^^^
features/reassign_question_spec.rb:43:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "PQ commission"
             ^^^^^^^^^^^^^^^
features/reassign_question_spec.rb:54:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "PQ commission"
             ^^^^^^^^^^^^^^^
features/reassign_question_spec.rb:59:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/action_officer_spec.rb:37:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("Action officers")
                                       ^^^^^^^^^^^^^^^^^
features/action_officer_spec.rb:48:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("Edit action officer")
                                       ^^^^^^^^^^^^^^^^^^^^^
features/action_officer_spec.rb:52:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("Action officer details")
                                       ^^^^^^^^^^^^^^^^^^^^^^^^
features/action_officer_spec.rb:60:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("Add action officer")
                                       ^^^^^^^^^^^^^^^^^^^^
features/dashboard_new_filter_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
features/dashboard_new_filter_spec.rb:10:22: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    generate_dummy_pq()
                     ^^
features/dashboard_new_filter_spec.rb:17:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "Check filter elements are on page" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/dashboard_new_filter_spec.rb:19:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    within("#count") { expect(page).to have_text('3 parliamentary questions') }
           ^^^^^^^^
features/dashboard_new_filter_spec.rb:20:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    within("#filters") {
           ^^^^^^^^^^
features/dashboard_new_filter_spec.rb:20:24: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within("#filters") {
                       ^
features/dashboard_new_filter_spec.rb:25:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_button "Status"
                   ^^^^^^^^
features/dashboard_new_filter_spec.rb:27:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      within("#flag .list") {
             ^^^^^^^^^^^^^
features/dashboard_new_filter_spec.rb:27:29: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      within("#flag .list") {
                            ^
features/dashboard_new_filter_spec.rb:35:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      within("#flag.filter-box .content.collapsed .clearFilter") {
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/dashboard_new_filter_spec.rb:35:66: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      within("#flag.filter-box .content.collapsed .clearFilter") {
                                                                 ^
features/dashboard_new_filter_spec.rb:59:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "Clear all filters" do
           ^^^^^^^^^^^^^^^^^^^
features/dashboard_new_filter_spec.rb:62:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    within("#flag") {
           ^^^^^^^
features/dashboard_new_filter_spec.rb:62:21: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within("#flag") {
                    ^
features/dashboard_new_filter_spec.rb:63:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_button "Clear"
                   ^^^^^^^
features/dashboard_new_filter_spec.rb:66:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    within("#count") { expect(page).to have_text('3 parliamentary questions out of 3.') }
           ^^^^^^^^
features/dashboard_new_filter_spec.rb:67:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    within(".questions-list") {
           ^^^^^^^^^^^^^^^^^
features/dashboard_new_filter_spec.rb:67:31: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within(".questions-list") {
                              ^
features/dashboard_new_filter_spec.rb:76:24: C: Style/DefWithParentheses: Omit the parentheses in defs when the method doesn't accept any arguments.
  def generate_dummy_pq()
                       ^
features/dashboard_new_filter_spec.rb:77:48: C: Style/InlineComment: Avoid trailing inline comments.
    PQA::QuestionLoader.new.load_and_import(3) # Generate two questions.
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
features/dashboard_new_filter_spec.rb:104:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    select 'action officer 1 (Corporate Finance)', :from => 'action_officers_pqs_action_officer_id_2'
                                                   ^^^^^^^^
features/dashboard_new_filter_spec.rb:105:52: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    select 'action officer 1 (Corporate Finance)', :from => 'action_officers_pqs_action_officer_id_3'
                                                   ^^^^^^^^
features/dashboard_new_filter_spec.rb:108:7: C: Naming/AccessorMethodName: Do not prefix writer method names with set_.
  def set_status(state)
      ^^^^^^^^^^
features/dashboard_new_filter_spec.rb:109:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    within("#flag") {
           ^^^^^^^
features/dashboard_new_filter_spec.rb:109:21: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within("#flag") {
                    ^
features/dashboard_new_filter_spec.rb:110:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_button "Status"
                   ^^^^^^^^
features/dashboard_new_filter_spec.rb:116:25: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def check_visible_pqs(q1, q2, q3)
                        ^^
features/dashboard_new_filter_spec.rb:116:29: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def check_visible_pqs(q1, q2, q3)
                            ^^
features/dashboard_new_filter_spec.rb:116:33: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def check_visible_pqs(q1, q2, q3)
                                ^^
features/dashboard_new_filter_spec.rb:117:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    within("#count") { expect(page).to have_text('1 parliamentary question out of 3.') }
           ^^^^^^^^
features/dashboard_new_filter_spec.rb:118:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    within(".questions-list") {
           ^^^^^^^^^^^^^^^^^
features/dashboard_new_filter_spec.rb:118:31: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within(".questions-list") {
                              ^
features/dashboard_new_filter_spec.rb:124:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/finance_officer_spec.rb:23:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("Users")
                                       ^^^^^^^
features/finance_officer_spec.rb:43:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("New PQs today")
                                       ^^^^^^^^^^^^^^^
features/finance_officer_spec.rb:54:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("New PQs today")
                                       ^^^^^^^^^^^^^^^
features/finance_officer_spec.rb:55:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_content "New PQs today"
                                 ^^^^^^^^^^^^^^^
features/finance_officer_spec.rb:74:5: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
    expect(page.title).to have_content("New PQs today")
    
features/finance_officer_spec.rb:74:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("New PQs today")
                                       ^^^^^^^^^^^^^^^
features/finance_officer_spec.rb:75:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      expect(page).to have_content(pq.text)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/finance_officer_spec.rb:80:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("New PQs today")
                                       ^^^^^^^^^^^^^^^
features/trim_link_spec.rb:3:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
feature "Parli-branch manages trim link" , js: true do
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/trim_link_spec.rb:3:41: C: Layout/SpaceBeforeComma: Space found before comma.
feature "Parli-branch manages trim link" , js: true do
                                        ^
features/trim_link_spec.rb:18:10: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer @pq, = PQA::QuestionLoader.new.load_and_import.
    @pq, _ = PQA::QuestionLoader.new.load_and_import
         ^^
features/trim_link_spec.rb:98:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/trim_link_spec.rb:138:50: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    scenario 'selecting a file to upload to trim'  do
                                                 ^
features/trim_link_spec.rb:189:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/transfer_out_pq_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
features/transfer_out_pq_spec.rb:22:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "PQ commission"
             ^^^^^^^^^^^^^^^
features/transfer_out_pq_spec.rb:23:67: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    find("select[name = 'pq[transfer_out_ogd_id]']").find(:xpath, "option[2]").select_option
                                                                  ^^^^^^^^^^^
features/transfer_out_pq_spec.rb:24:49: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    find('#transfer_out_date').set(date || Date.today.strftime('%d/%m/%Y'))
                                                ^^^^^
features/transfer_out_pq_spec.rb:66:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page.title).to have_text("Dashboard")
                                      ^^^^^^^^^^^
features/ao_reminder_email_spec.rb:12:10: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer @pq, =  PQA::QuestionLoader.new.load_and_import(2).
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
         ^^
features/ao_reminder_email_spec.rb:12:12: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
           ^
features/ao_reminder_email_spec.rb:12:13: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
            ^
features/ao_reminder_email_spec.rb:19:1: C: Style/BlockComments: Do not use block comments.
=begin COMMENTED AS PLACE HOLDER FOR NEXT PART OF THIS EPIC ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/ao_reminder_email_spec.rb:19:1: C: Style/InlineComment: Avoid trailing inline comments.
=begin COMMENTED AS PLACE HOLDER FOR NEXT PART OF THIS EPIC ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/dashboard_spec.rb:27:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      within_pq(pq.uin) {
                        ^
features/dashboard_spec.rb:28:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(page.title).to have_content("Dashboard")
                                           ^^^^^^^^^^^
features/dashboard_spec.rb:46:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("Dashboard")
                                       ^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
features/dashboard_pq_select_spec.rb:11:5: C: Style/ParallelAssignment: Do not use parallel assignment.
    @uin1, @uin2, @uin3 = pq1.uin, pq2.uin, pq3.uin
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:20:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "Check page elements" do
           ^^^^^^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:22:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){
                    ^
features/dashboard_pq_select_spec.rb:22:21: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#count'){
                    ^
features/dashboard_pq_select_spec.rb:23:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("3 parliamentary questions")
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:25:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#draftReminders'){
                             ^
features/dashboard_pq_select_spec.rb:25:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#draftReminders'){
                             ^
features/dashboard_pq_select_spec.rb:27:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("No PQs selected")
                                ^^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:30:25: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#editDates'){
                        ^
features/dashboard_pq_select_spec.rb:30:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#editDates'){
                        ^
features/dashboard_pq_select_spec.rb:32:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("No PQs selected")
                                ^^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:35:25: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#csvExport'){
                        ^
features/dashboard_pq_select_spec.rb:35:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#csvExport'){
                        ^
features/dashboard_pq_select_spec.rb:37:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("No PQs selected")
                                ^^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:45:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#draftReminders'){
                             ^
features/dashboard_pq_select_spec.rb:45:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#draftReminders'){
                             ^
features/dashboard_pq_select_spec.rb:47:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("3 PQs selected")
                                ^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:50:25: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#editDates'){
                        ^
features/dashboard_pq_select_spec.rb:50:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#editDates'){
                        ^
features/dashboard_pq_select_spec.rb:52:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("3 PQs selected")
                                ^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:55:25: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#csvExport'){
                        ^
features/dashboard_pq_select_spec.rb:55:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#csvExport'){
                        ^
features/dashboard_pq_select_spec.rb:57:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("3 PQs selected")
                                ^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:60:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/dashboard_pq_select_spec.rb:60:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/dashboard_pq_select_spec.rb:68:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/dashboard_pq_select_spec.rb:68:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/dashboard_pq_select_spec.rb:75:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#draftReminders'){
                             ^
features/dashboard_pq_select_spec.rb:75:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#draftReminders'){
                             ^
features/dashboard_pq_select_spec.rb:77:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("No PQs selected")
                                ^^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:80:25: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#editDates'){
                        ^
features/dashboard_pq_select_spec.rb:80:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#editDates'){
                        ^
features/dashboard_pq_select_spec.rb:82:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("No PQs selected")
                                ^^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:85:25: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#csvExport'){
                        ^
features/dashboard_pq_select_spec.rb:85:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#csvExport'){
                        ^
features/dashboard_pq_select_spec.rb:87:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("No PQs selected")
                                ^^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:92:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "A user selects individual PQs" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:96:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/dashboard_pq_select_spec.rb:96:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/dashboard_pq_select_spec.rb:99:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#draftReminders'){
                             ^
features/dashboard_pq_select_spec.rb:99:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#draftReminders'){
                             ^
features/dashboard_pq_select_spec.rb:101:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("1 PQ selected")
                                ^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:104:25: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#editDates'){
                        ^
features/dashboard_pq_select_spec.rb:104:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#editDates'){
                        ^
features/dashboard_pq_select_spec.rb:106:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("1 PQ selected")
                                ^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:109:25: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#csvExport'){
                        ^
features/dashboard_pq_select_spec.rb:109:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#csvExport'){
                        ^
features/dashboard_pq_select_spec.rb:111:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("1 PQ selected")
                                ^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:116:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/dashboard_pq_select_spec.rb:116:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/dashboard_pq_select_spec.rb:119:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#draftReminders'){
                             ^
features/dashboard_pq_select_spec.rb:119:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#draftReminders'){
                             ^
features/dashboard_pq_select_spec.rb:121:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("2 PQs selected")
                                ^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:124:25: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#editDates'){
                        ^
features/dashboard_pq_select_spec.rb:124:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#editDates'){
                        ^
features/dashboard_pq_select_spec.rb:126:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("2 PQs selected")
                                ^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:129:25: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#csvExport'){
                        ^
features/dashboard_pq_select_spec.rb:129:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#csvExport'){
                        ^
features/dashboard_pq_select_spec.rb:131:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("2 PQs selected")
                                ^^^^^^^^^^^^^^^^
features/dashboard_pq_select_spec.rb:136:24: C: Style/DefWithParentheses: Omit the parentheses in defs when the method doesn't accept any arguments.
  def accept_commission()
                       ^
features/dashboard_pq_select_spec.rb:137:5: W: Lint/UselessAssignment: Useless assignment to variable - ao_mail.
    ao_mail = sent_mail.first
    ^^^^^^^
features/dashboard_pq_select_spec.rb:145:17: C: Style/DefWithParentheses: Omit the parentheses in defs when the method doesn't accept any arguments.
  def initialise()
                ^
features/dashboard_pq_select_spec.rb:155:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/mi_statistics_spec.rb:4:60: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
  PqStatistics::BUS_DAY_INTERVAL.business_days.before(Date.today)
                                                           ^^^^^
features/mi_statistics_spec.rb:10:28: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
      pqs = (1..6).to_a.map{ FactoryBot.create(:answered_pq) }
                           ^
features/mi_statistics_spec.rb:14:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          date_for_answer:  Date.today,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/mi_statistics_spec.rb:14:34: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
          date_for_answer:  Date.today,
                                 ^^^^^
features/mi_statistics_spec.rb:16:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          state:            PQState::ANSWERED
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/mi_statistics_spec.rb:22:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          date_for_answer:  Date.today,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/mi_statistics_spec.rb:22:34: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
          date_for_answer:  Date.today,
                                 ^^^^^
features/mi_statistics_spec.rb:24:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          state:            PQState::ANSWERED
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/mi_statistics_spec.rb:54:48: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    Timecop.freeze(1.business_days.before(Date.today)) do
                                               ^^^^^
features/mi_statistics_spec.rb:55:28: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
      pqs = (1..4).to_a.map{ FactoryBot.create(:not_responded_pq) }
                           ^
features/mi_statistics_spec.rb:59:51: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
          created_at: 1.business_days.before(Date.today)
                                                  ^^^^^
features/mi_statistics_spec.rb:65:51: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
          created_at: 2.business_days.before(Date.today)
                                                  ^^^^^
features/mi_statistics_spec.rb:74:48: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    Timecop.freeze(1.business_days.before(Date.today)) do
                                               ^^^^^
features/mi_statistics_spec.rb:75:28: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
      pqs = (1..4).to_a.map{ FactoryBot.create(:draft_pending_pq) }
                           ^
features/mi_statistics_spec.rb:79:51: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
          created_at: 2.business_days.before(Date.today)
                                                  ^^^^^
features/mi_statistics_spec.rb:92:5: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
     pqs = (1..4).to_a.map{ FactoryBot.create(:draft_pending_pq) }
    ^
features/mi_statistics_spec.rb:92:27: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
     pqs = (1..4).to_a.map{ FactoryBot.create(:draft_pending_pq) }
                          ^
features/mi_statistics_spec.rb:96:5: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
     Timecop.freeze(Date.yesterday - n.days) do
    ^
features/mi_statistics_spec.rb:98:16: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
         ao_pq =  ActionOfficersPq.create!(
               ^
features/mi_statistics_spec.rb:98:17: C: Layout/ExtraSpacing: Unnecessary spacing detected.
         ao_pq =  ActionOfficersPq.create!(
                ^
features/mi_statistics_spec.rb:99:20: C: Layout/FirstParameterIndentation: Indent the first parameter one step more than the start of the previous line.
                   pq_id: pq.id, ...
                   ^^^^^^^^^^^^^
features/mi_statistics_spec.rb:114:26: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    pq1, pq2 = (1..2).map{ FactoryBot.create(:answered_pq) }
                         ^
features/mi_statistics_spec.rb:120:26: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def update_stage_times(pq, hours, base)
                         ^^
features/mi_statistics_spec.rb:122:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      created_at:                    hours[0].business_hours.before(base),
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/mi_statistics_spec.rb:123:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      draft_answer_received:         hours[1].business_hours.before(base),
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/mi_statistics_spec.rb:124:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      pod_clearance:                 hours[2].business_hours.before(base),
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/mi_statistics_spec.rb:126:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      answer_submitted:              base
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/in_progress_filters_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
features/in_progress_filters_spec.rb:24:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions')}
                    ^
features/in_progress_filters_spec.rb:24:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions')}
                     ^
features/in_progress_filters_spec.rb:24:77: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions')}
                                                                            ^
features/in_progress_filters_spec.rb:26:55: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-from', Date.today-10)
                                                      ^^^^^
features/in_progress_filters_spec.rb:26:60: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#date-for-answer', 'answer-from', Date.today-10)
                                                           ^
features/in_progress_filters_spec.rb:27:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:27:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:27:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:30:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:30:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:30:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:35:55: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-from', Date.today+9)
                                                      ^^^^^
features/in_progress_filters_spec.rb:35:60: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#date-for-answer', 'answer-from', Date.today+9)
                                                           ^
features/in_progress_filters_spec.rb:36:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:36:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:36:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                                                                                      ^
features/in_progress_filters_spec.rb:37:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:37:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:48:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:48:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:48:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:53:55: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-from', Date.today+20)
                                                      ^^^^^
features/in_progress_filters_spec.rb:53:60: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#date-for-answer', 'answer-from', Date.today+20)
                                                           ^
features/in_progress_filters_spec.rb:54:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:54:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:54:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                                                                                      ^
features/in_progress_filters_spec.rb:57:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:57:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:57:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:62:53: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-to', Date.today-10)
                                                    ^^^^^
features/in_progress_filters_spec.rb:62:58: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#date-for-answer', 'answer-to', Date.today-10)
                                                         ^
features/in_progress_filters_spec.rb:63:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:63:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:63:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                                                                                      ^
features/in_progress_filters_spec.rb:66:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:66:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:66:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:71:53: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-to', Date.today+9)
                                                    ^^^^^
features/in_progress_filters_spec.rb:71:58: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#date-for-answer', 'answer-to', Date.today+9)
                                                         ^
features/in_progress_filters_spec.rb:72:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('9 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:72:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('9 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:72:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('9 parliamentary questions out of 16.')}
                                                                                      ^
features/in_progress_filters_spec.rb:73:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:73:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:85:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:85:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:85:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:90:53: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#date-for-answer', 'answer-to', Date.today+20)
                                                    ^^^^^
features/in_progress_filters_spec.rb:90:58: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#date-for-answer', 'answer-to', Date.today+20)
                                                         ^
features/in_progress_filters_spec.rb:91:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:91:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:91:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:94:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:94:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:94:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:99:59: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-from', Date.today-10)
                                                          ^^^^^
features/in_progress_filters_spec.rb:99:64: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#internal-deadline', 'deadline-from', Date.today-10)
                                                               ^
features/in_progress_filters_spec.rb:100:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:100:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:100:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:103:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:103:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:103:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:108:59: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-from', Date.today+9)
                                                          ^^^^^
features/in_progress_filters_spec.rb:108:64: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#internal-deadline', 'deadline-from', Date.today+9)
                                                               ^
features/in_progress_filters_spec.rb:109:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('6 parliamentary questions out of 16')}
                    ^
features/in_progress_filters_spec.rb:109:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('6 parliamentary questions out of 16')}
                     ^
features/in_progress_filters_spec.rb:109:86: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('6 parliamentary questions out of 16')}
                                                                                     ^
features/in_progress_filters_spec.rb:110:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:110:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:119:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:119:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:119:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:124:59: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-from', Date.today+20)
                                                          ^^^^^
features/in_progress_filters_spec.rb:124:64: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#internal-deadline', 'deadline-from', Date.today+20)
                                                               ^
features/in_progress_filters_spec.rb:125:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:125:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:125:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                                                                                      ^
features/in_progress_filters_spec.rb:128:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:128:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:128:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:133:57: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-to', Date.today-10)
                                                        ^^^^^
features/in_progress_filters_spec.rb:133:62: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    test_date('#internal-deadline', 'deadline-to', Date.today-10)
                                                             ^
features/in_progress_filters_spec.rb:134:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:134:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:134:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                                                                                      ^
features/in_progress_filters_spec.rb:137:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:137:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:137:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:142:51: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    test_date('#internal-deadline', 'deadline-to',  Date.today+9)
                                                  ^
features/in_progress_filters_spec.rb:142:58: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-to',  Date.today+9)
                                                         ^^^^^
features/in_progress_filters_spec.rb:142:63: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#internal-deadline', 'deadline-to',  Date.today+9)
                                                              ^
features/in_progress_filters_spec.rb:143:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('11 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:143:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('11 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:143:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('11 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:144:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:144:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:158:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:158:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:158:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:163:57: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    test_date('#internal-deadline', 'deadline-to', Date.today+20)
                                                        ^^^^^
features/in_progress_filters_spec.rb:163:62: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    test_date('#internal-deadline', 'deadline-to', Date.today+20)
                                                             ^
features/in_progress_filters_spec.rb:164:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:164:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:164:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:167:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:167:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:167:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:173:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:173:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:173:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                                                                                      ^
features/in_progress_filters_spec.rb:174:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:174:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:185:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:185:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:185:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:191:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:191:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:191:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                                                                                      ^
features/in_progress_filters_spec.rb:192:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:192:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:203:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:203:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:203:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:209:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:209:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:209:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                                                                                      ^
features/in_progress_filters_spec.rb:210:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:210:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:221:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:221:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:221:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:228:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:228:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:245:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:245:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:245:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:248:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:248:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:248:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:254:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:254:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:254:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('8 parliamentary questions out of 16.')}
                                                                                      ^
features/in_progress_filters_spec.rb:255:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:255:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:266:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:266:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:266:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:272:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:272:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:272:87: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('0 parliamentary questions out of 16.')}
                                                                                      ^
features/in_progress_filters_spec.rb:275:21: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                    ^
features/in_progress_filters_spec.rb:275:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                     ^
features/in_progress_filters_spec.rb:275:88: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    within('#count'){expect(page).to have_text('16 parliamentary questions out of 16.')}
                                                                                       ^
features/in_progress_filters_spec.rb:280:5: W: Lint/UselessAssignment: Useless assignment to variable - pq1. Did you mean pq10?
    pq1 = FactoryBot.create( :with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today+16, internal_deadline: Date.today+14, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
    ^^^
features/in_progress_filters_spec.rb:280:29: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq1 = FactoryBot.create( :with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today+16, internal_deadline: Date.today+14, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                            ^
features/in_progress_filters_spec.rb:280:80: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq1 = FactoryBot.create( :with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today+16, internal_deadline: Date.today+14, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                               ^^^^^
features/in_progress_filters_spec.rb:280:85: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq1 = FactoryBot.create( :with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today+16, internal_deadline: Date.today+14, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                    ^
features/in_progress_filters_spec.rb:280:114: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq1 = FactoryBot.create( :with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today+16, internal_deadline: Date.today+14, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                                                 ^^^^^
features/in_progress_filters_spec.rb:280:119: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq1 = FactoryBot.create( :with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today+16, internal_deadline: Date.today+14, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                                                      ^
features/in_progress_filters_spec.rb:280:188: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq1 = FactoryBot.create( :with_pod_pq, uin: 'UIN-1', date_for_answer: Date.today+16, internal_deadline: Date.today+14, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                                                                                                                           ^
features/in_progress_filters_spec.rb:281:5: W: Lint/UselessAssignment: Useless assignment to variable - pq2. Did you mean pq12?
    pq2 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today+15, internal_deadline: Date.today+13, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
    ^^^
features/in_progress_filters_spec.rb:281:29: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq2 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today+15, internal_deadline: Date.today+13, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                            ^
features/in_progress_filters_spec.rb:281:85: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq2 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today+15, internal_deadline: Date.today+13, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                    ^^^^^
features/in_progress_filters_spec.rb:281:90: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq2 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today+15, internal_deadline: Date.today+13, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                         ^
features/in_progress_filters_spec.rb:281:119: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq2 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today+15, internal_deadline: Date.today+13, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                      ^^^^^
features/in_progress_filters_spec.rb:281:124: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq2 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today+15, internal_deadline: Date.today+13, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                           ^
features/in_progress_filters_spec.rb:281:193: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq2 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-2', date_for_answer: Date.today+15, internal_deadline: Date.today+13, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                                                                                                ^
features/in_progress_filters_spec.rb:282:5: W: Lint/UselessAssignment: Useless assignment to variable - pq3. Did you mean pq13?
    pq3 = FactoryBot.create( :with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today+14, internal_deadline: Date.today+12, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
    ^^^
features/in_progress_filters_spec.rb:282:29: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq3 = FactoryBot.create( :with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today+14, internal_deadline: Date.today+12, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                            ^
features/in_progress_filters_spec.rb:282:80: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq3 = FactoryBot.create( :with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today+14, internal_deadline: Date.today+12, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                               ^^^^^
features/in_progress_filters_spec.rb:282:85: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq3 = FactoryBot.create( :with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today+14, internal_deadline: Date.today+12, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                    ^
features/in_progress_filters_spec.rb:282:114: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq3 = FactoryBot.create( :with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today+14, internal_deadline: Date.today+12, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                                                 ^^^^^
features/in_progress_filters_spec.rb:282:119: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq3 = FactoryBot.create( :with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today+14, internal_deadline: Date.today+12, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                                                      ^
features/in_progress_filters_spec.rb:282:188: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq3 = FactoryBot.create( :with_pod_pq, uin: 'UIN-3', date_for_answer: Date.today+14, internal_deadline: Date.today+12, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                                                                                                                           ^
features/in_progress_filters_spec.rb:283:5: W: Lint/UselessAssignment: Useless assignment to variable - pq4. Did you mean pq14?
    pq4 = FactoryBot.create( :with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today+13, internal_deadline: Date.today+11, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
    ^^^
features/in_progress_filters_spec.rb:283:29: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq4 = FactoryBot.create( :with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today+13, internal_deadline: Date.today+11, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                            ^
features/in_progress_filters_spec.rb:283:80: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq4 = FactoryBot.create( :with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today+13, internal_deadline: Date.today+11, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                               ^^^^^
features/in_progress_filters_spec.rb:283:85: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq4 = FactoryBot.create( :with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today+13, internal_deadline: Date.today+11, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                    ^
features/in_progress_filters_spec.rb:283:114: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq4 = FactoryBot.create( :with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today+13, internal_deadline: Date.today+11, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                 ^^^^^
features/in_progress_filters_spec.rb:283:119: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq4 = FactoryBot.create( :with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today+13, internal_deadline: Date.today+11, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                      ^
features/in_progress_filters_spec.rb:283:188: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq4 = FactoryBot.create( :with_pod_pq, uin: 'UIN-4', date_for_answer: Date.today+13, internal_deadline: Date.today+11, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                                                                                           ^
features/in_progress_filters_spec.rb:284:5: W: Lint/UselessAssignment: Useless assignment to variable - pq5. Did you mean pq15?
    pq5 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-5', date_for_answer: Date.today+12, internal_deadline: Date.today+10, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
    ^^^
features/in_progress_filters_spec.rb:284:29: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq5 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-5', date_for_answer: Date.today+12, internal_deadline: Date.today+10, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                            ^
features/in_progress_filters_spec.rb:284:85: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq5 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-5', date_for_answer: Date.today+12, internal_deadline: Date.today+10, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                    ^^^^^
features/in_progress_filters_spec.rb:284:90: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq5 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-5', date_for_answer: Date.today+12, internal_deadline: Date.today+10, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                         ^
features/in_progress_filters_spec.rb:284:119: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq5 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-5', date_for_answer: Date.today+12, internal_deadline: Date.today+10, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                                                      ^^^^^
features/in_progress_filters_spec.rb:284:124: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq5 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-5', date_for_answer: Date.today+12, internal_deadline: Date.today+10, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary')
                                                                                                                           ^
features/in_progress_filters_spec.rb:285:5: W: Lint/UselessAssignment: Useless assignment to variable - pq6. Did you mean pq16?
    pq6 = FactoryBot.create( :with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today+11, internal_deadline: Date.today+9, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
    ^^^
features/in_progress_filters_spec.rb:285:29: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq6 = FactoryBot.create( :with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today+11, internal_deadline: Date.today+9, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                            ^
features/in_progress_filters_spec.rb:285:80: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq6 = FactoryBot.create( :with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today+11, internal_deadline: Date.today+9, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                               ^^^^^
features/in_progress_filters_spec.rb:285:85: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq6 = FactoryBot.create( :with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today+11, internal_deadline: Date.today+9, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                    ^
features/in_progress_filters_spec.rb:285:114: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq6 = FactoryBot.create( :with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today+11, internal_deadline: Date.today+9, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                 ^^^^^
features/in_progress_filters_spec.rb:285:119: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq6 = FactoryBot.create( :with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today+11, internal_deadline: Date.today+9, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                      ^
features/in_progress_filters_spec.rb:285:187: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq6 = FactoryBot.create( :with_pod_pq, uin: 'UIN-6', date_for_answer: Date.today+11, internal_deadline: Date.today+9, minister_id: 3, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                                                                                          ^
features/in_progress_filters_spec.rb:286:5: W: Lint/UselessAssignment: Useless assignment to variable - pq7.
    pq7 = FactoryBot.create( :with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today+10, internal_deadline: Date.today+8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
    ^^^
features/in_progress_filters_spec.rb:286:29: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq7 = FactoryBot.create( :with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today+10, internal_deadline: Date.today+8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                            ^
features/in_progress_filters_spec.rb:286:80: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq7 = FactoryBot.create( :with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today+10, internal_deadline: Date.today+8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                               ^^^^^
features/in_progress_filters_spec.rb:286:85: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq7 = FactoryBot.create( :with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today+10, internal_deadline: Date.today+8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                    ^
features/in_progress_filters_spec.rb:286:114: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq7 = FactoryBot.create( :with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today+10, internal_deadline: Date.today+8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                 ^^^^^
features/in_progress_filters_spec.rb:286:119: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq7 = FactoryBot.create( :with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today+10, internal_deadline: Date.today+8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                      ^
features/in_progress_filters_spec.rb:286:187: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq7 = FactoryBot.create( :with_pod_pq, uin: 'UIN-7', date_for_answer: Date.today+10, internal_deadline: Date.today+8, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                                                                                          ^
features/in_progress_filters_spec.rb:287:5: W: Lint/UselessAssignment: Useless assignment to variable - pq8.
    pq8 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today+9, internal_deadline: Date.today+7, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
    ^^^
features/in_progress_filters_spec.rb:287:29: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq8 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today+9, internal_deadline: Date.today+7, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                            ^
features/in_progress_filters_spec.rb:287:85: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq8 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today+9, internal_deadline: Date.today+7, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                    ^^^^^
features/in_progress_filters_spec.rb:287:90: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq8 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today+9, internal_deadline: Date.today+7, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                         ^
features/in_progress_filters_spec.rb:287:118: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq8 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today+9, internal_deadline: Date.today+7, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                     ^^^^^
features/in_progress_filters_spec.rb:287:123: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq8 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today+9, internal_deadline: Date.today+7, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                          ^
features/in_progress_filters_spec.rb:287:191: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq8 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-8', date_for_answer: Date.today+9, internal_deadline: Date.today+7, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                                                                                              ^
features/in_progress_filters_spec.rb:288:5: W: Lint/UselessAssignment: Useless assignment to variable - pq9.
    pq9 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today+8, internal_deadline: Date.today+6, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
    ^^^
features/in_progress_filters_spec.rb:288:29: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq9 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today+8, internal_deadline: Date.today+6, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                            ^
features/in_progress_filters_spec.rb:288:85: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq9 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today+8, internal_deadline: Date.today+6, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                    ^^^^^
features/in_progress_filters_spec.rb:288:90: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq9 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today+8, internal_deadline: Date.today+6, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                         ^
features/in_progress_filters_spec.rb:288:118: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq9 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today+8, internal_deadline: Date.today+6, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                     ^^^^^
features/in_progress_filters_spec.rb:288:123: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq9 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today+8, internal_deadline: Date.today+6, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                          ^
features/in_progress_filters_spec.rb:288:191: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq9 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-9', date_for_answer: Date.today+8, internal_deadline: Date.today+6, minister_id: 5, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                                                                                              ^
features/in_progress_filters_spec.rb:289:5: W: Lint/UselessAssignment: Useless assignment to variable - pq10. Did you mean pq1?
    pq10 = FactoryBot.create( :with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today+7, internal_deadline: Date.today+5, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary' )
    ^^^^
features/in_progress_filters_spec.rb:289:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq10 = FactoryBot.create( :with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today+7, internal_deadline: Date.today+5, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary' )
                             ^
features/in_progress_filters_spec.rb:289:82: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq10 = FactoryBot.create( :with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today+7, internal_deadline: Date.today+5, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                 ^^^^^
features/in_progress_filters_spec.rb:289:87: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq10 = FactoryBot.create( :with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today+7, internal_deadline: Date.today+5, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                      ^
features/in_progress_filters_spec.rb:289:115: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq10 = FactoryBot.create( :with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today+7, internal_deadline: Date.today+5, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                                                  ^^^^^
features/in_progress_filters_spec.rb:289:120: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq10 = FactoryBot.create( :with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today+7, internal_deadline: Date.today+5, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                                                       ^
features/in_progress_filters_spec.rb:289:188: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq10 = FactoryBot.create( :with_pod_pq, uin: 'UIN-10', date_for_answer: Date.today+7, internal_deadline: Date.today+5, minister_id: 5, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                                                                                                                           ^
features/in_progress_filters_spec.rb:290:5: W: Lint/UselessAssignment: Useless assignment to variable - pq11. Did you mean pq1?
    pq11 = FactoryBot.create( :with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today+6, internal_deadline: Date.today+4, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
    ^^^^
features/in_progress_filters_spec.rb:290:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq11 = FactoryBot.create( :with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today+6, internal_deadline: Date.today+4, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                             ^
features/in_progress_filters_spec.rb:290:82: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq11 = FactoryBot.create( :with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today+6, internal_deadline: Date.today+4, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                 ^^^^^
features/in_progress_filters_spec.rb:290:87: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq11 = FactoryBot.create( :with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today+6, internal_deadline: Date.today+4, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                      ^
features/in_progress_filters_spec.rb:290:115: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq11 = FactoryBot.create( :with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today+6, internal_deadline: Date.today+4, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                  ^^^^^
features/in_progress_filters_spec.rb:290:120: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq11 = FactoryBot.create( :with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today+6, internal_deadline: Date.today+4, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                       ^
features/in_progress_filters_spec.rb:290:188: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq11 = FactoryBot.create( :with_pod_pq, uin: 'UIN-11', date_for_answer: Date.today+6, internal_deadline: Date.today+4, minister_id: 3, policy_minister_id: 6, question_type: 'Ordinary' )
                                                                                                                                                                                           ^
features/in_progress_filters_spec.rb:291:5: W: Lint/UselessAssignment: Useless assignment to variable - pq12. Did you mean pq1?
    pq12 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today+5, internal_deadline: Date.today+3, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
    ^^^^
features/in_progress_filters_spec.rb:291:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq12 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today+5, internal_deadline: Date.today+3, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                             ^
features/in_progress_filters_spec.rb:291:87: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq12 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today+5, internal_deadline: Date.today+3, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                      ^^^^^
features/in_progress_filters_spec.rb:291:92: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq12 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today+5, internal_deadline: Date.today+3, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                           ^
features/in_progress_filters_spec.rb:291:120: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq12 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today+5, internal_deadline: Date.today+3, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                       ^^^^^
features/in_progress_filters_spec.rb:291:125: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq12 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today+5, internal_deadline: Date.today+3, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                            ^
features/in_progress_filters_spec.rb:291:193: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq12 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-12', date_for_answer: Date.today+5, internal_deadline: Date.today+3, minister_id: 5, policy_minister_id: 4, question_type: 'NamedDay' )
                                                                                                                                                                                                ^
features/in_progress_filters_spec.rb:292:5: W: Lint/UselessAssignment: Useless assignment to variable - pq13. Did you mean pq1?
    pq13 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today+4, internal_deadline: Date.today+2, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
    ^^^^
features/in_progress_filters_spec.rb:292:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq13 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today+4, internal_deadline: Date.today+2, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
                             ^
features/in_progress_filters_spec.rb:292:87: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq13 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today+4, internal_deadline: Date.today+2, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                      ^^^^^
features/in_progress_filters_spec.rb:292:92: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq13 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today+4, internal_deadline: Date.today+2, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                           ^
features/in_progress_filters_spec.rb:292:120: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq13 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today+4, internal_deadline: Date.today+2, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                                                       ^^^^^
features/in_progress_filters_spec.rb:292:125: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq13 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today+4, internal_deadline: Date.today+2, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                                                            ^
features/in_progress_filters_spec.rb:292:193: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq13 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-13', date_for_answer: Date.today+4, internal_deadline: Date.today+2, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                                                                                                                                ^
features/in_progress_filters_spec.rb:293:5: W: Lint/UselessAssignment: Useless assignment to variable - pq14. Did you mean pq1?
    pq14 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today+3, internal_deadline: Date.today+1, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
    ^^^^
features/in_progress_filters_spec.rb:293:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq14 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today+3, internal_deadline: Date.today+1, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                             ^
features/in_progress_filters_spec.rb:293:87: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq14 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today+3, internal_deadline: Date.today+1, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                      ^^^^^
features/in_progress_filters_spec.rb:293:92: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq14 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today+3, internal_deadline: Date.today+1, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                           ^
features/in_progress_filters_spec.rb:293:120: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq14 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today+3, internal_deadline: Date.today+1, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                                                       ^^^^^
features/in_progress_filters_spec.rb:293:125: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq14 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today+3, internal_deadline: Date.today+1, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                                                            ^
features/in_progress_filters_spec.rb:293:193: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq14 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-14', date_for_answer: Date.today+3, internal_deadline: Date.today+1, minister_id: 3, policy_minister_id: 4, question_type: 'Ordinary' )
                                                                                                                                                                                                ^
features/in_progress_filters_spec.rb:294:5: W: Lint/UselessAssignment: Useless assignment to variable - pq15. Did you mean pq1?
    pq15 = FactoryBot.create( :with_pod_pq, uin: 'UIN-15', date_for_answer: Date.today+2, internal_deadline: Date.today, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
    ^^^^
features/in_progress_filters_spec.rb:294:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq15 = FactoryBot.create( :with_pod_pq, uin: 'UIN-15', date_for_answer: Date.today+2, internal_deadline: Date.today, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
                             ^
features/in_progress_filters_spec.rb:294:82: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq15 = FactoryBot.create( :with_pod_pq, uin: 'UIN-15', date_for_answer: Date.today+2, internal_deadline: Date.today, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                 ^^^^^
features/in_progress_filters_spec.rb:294:87: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq15 = FactoryBot.create( :with_pod_pq, uin: 'UIN-15', date_for_answer: Date.today+2, internal_deadline: Date.today, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                      ^
features/in_progress_filters_spec.rb:294:115: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq15 = FactoryBot.create( :with_pod_pq, uin: 'UIN-15', date_for_answer: Date.today+2, internal_deadline: Date.today, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                                                  ^^^^^
features/in_progress_filters_spec.rb:294:186: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq15 = FactoryBot.create( :with_pod_pq, uin: 'UIN-15', date_for_answer: Date.today+2, internal_deadline: Date.today, minister_id: 5, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                                                                                                                         ^
features/in_progress_filters_spec.rb:295:5: W: Lint/UselessAssignment: Useless assignment to variable - pq16. Did you mean pq1?
    pq16 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-16', date_for_answer:  Date.today+1, internal_deadline: Date.today-1, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
    ^^^^
features/in_progress_filters_spec.rb:295:30: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq16 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-16', date_for_answer:  Date.today+1, internal_deadline: Date.today-1, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                             ^
features/in_progress_filters_spec.rb:295:81: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    pq16 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-16', date_for_answer:  Date.today+1, internal_deadline: Date.today-1, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                ^
features/in_progress_filters_spec.rb:295:88: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq16 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-16', date_for_answer:  Date.today+1, internal_deadline: Date.today-1, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                       ^^^^^
features/in_progress_filters_spec.rb:295:93: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    pq16 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-16', date_for_answer:  Date.today+1, internal_deadline: Date.today-1, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                            ^
features/in_progress_filters_spec.rb:295:121: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    pq16 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-16', date_for_answer:  Date.today+1, internal_deadline: Date.today-1, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                                                        ^^^^^
features/in_progress_filters_spec.rb:295:126: C: Layout/SpaceAroundOperators: Surrounding space missing for operator -.
    pq16 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-16', date_for_answer:  Date.today+1, internal_deadline: Date.today-1, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                                                             ^
features/in_progress_filters_spec.rb:295:194: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    pq16 = FactoryBot.create( :draft_pending_pq, uin: 'UIN-16', date_for_answer:  Date.today+1, internal_deadline: Date.today-1, minister_id: 3, policy_minister_id: 6, question_type: 'NamedDay' )
                                                                                                                                                                                                 ^
features/in_progress_filters_spec.rb:298:16: C: Layout/SpaceAfterMethodName: Do not put a space between a method name and the opening parenthesis.
  def test_date (filter_box, id, date)
               ^
features/in_progress_filters_spec.rb:299:54: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    within("#{filter_box}.filter-box") { fill_in id, :with => date }
                                                     ^^^^^^^^
features/in_progress_filters_spec.rb:303:40: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within("#{filter_box}.filter-box") {
                                       ^
features/in_progress_filters_spec.rb:311:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => term
                        ^^^^^^^^
features/in_progress_filters_spec.rb:315:41: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within("#{filter_name}.filter-box") {
                                        ^
features/in_progress_filters_spec.rb:323:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:323:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.questions-list'){
                             ^
features/in_progress_filters_spec.rb:324:43: C: Style/WhileUntilDo: Do not use do with multi-line while.
      while number_of_questions > counter do
                                          ^^
features/in_progress_filters_spec.rb:325:35: C: Style/MultilineIfThen: Do not use then for multi-line if.
        if visibility == 'hidden' then
                                  ^^^^
features/in_progress_filters_spec.rb:334:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/rejecting_questions_spec.rb:10:10: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer @pq, =  PQA::QuestionLoader.new.load_and_import(2).
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
         ^^
features/rejecting_questions_spec.rb:10:12: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
           ^
features/rejecting_questions_spec.rb:10:13: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
            ^
features/rejecting_questions_spec.rb:11:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/rejecting_questions_spec.rb:22:1: C: Layout/EmptyLines: Extra blank line detected.
features/rejecting_questions_spec.rb:29:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_text("PQ rejected")
                                    ^^^^^^^^^^^^^
features/rejecting_questions_spec.rb:38:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page.title).to have_text("Dashboard")
                                      ^^^^^^^^^^^
features/rejecting_questions_spec.rb:68:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    fill_in 'allocation_response_reason', with: "no time"
                                                ^^^^^^^^^
features/rejecting_questions_spec.rb:93:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("too busy!")
                                ^^^^^^^^^^^
features/csv_export_spec.rb:10:10: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    @pqs =  PQA::QuestionLoader.new.load_and_import(3)
         ^
features/csv_export_spec.rb:10:11: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    @pqs =  PQA::QuestionLoader.new.load_and_import(3)
          ^
features/csv_export_spec.rb:17:37: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    fill_in 'Date from', with: Date.today.strftime('%d/%m/%Y')
                                    ^^^^^
features/csv_export_spec.rb:30:37: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    fill_in 'Date from', with: Date.today.strftime('%d/%m/%Y')
                                    ^^^^^
features/csv_export_spec.rb:34:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_content("Export PQs to CSV")
                                       ^^^^^^^^^^^^^^^^^^^
features/metrics_dashboard_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
features/metrics_dashboard_spec.rb:9:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_content("Metrics dashboard")
                                 ^^^^^^^^^^^^^^^^^^^
features/metrics_dashboard_spec.rb:14:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.current_url).to include("/users/sign_in")
                                        ^^^^^^^^^^^^^^^^
features/metrics_dashboard_spec.rb:18:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    visit metrics_dashboard_path + ".json"
                                   ^^^^^^^
features/metrics_dashboard_spec.rb:23:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    page.driver.basic_authorize("test_username", "X")
                                ^^^^^^^^^^^^^^^
features/metrics_dashboard_spec.rb:23:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    page.driver.basic_authorize("test_username", "X")
                                                 ^^^
features/metrics_dashboard_spec.rb:24:36: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    visit metrics_dashboard_path + ".json"
                                   ^^^^^^^
features/metrics_dashboard_spec.rb:26:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.response_headers).to include("Content-Type" => "application/json; charset=utf-8")
                                             ^^^^^^^^^^^^^^
features/metrics_dashboard_spec.rb:26:64: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.response_headers).to include("Content-Type" => "application/json; charset=utf-8")
                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/transfer_in_pq_spec.rb:16:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      .find(:xpath, "option[2]")
                    ^^^^^^^^^^^
features/transfer_in_pq_spec.rb:19:40: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    find('#transfer_in_date').set Date.today.strftime('%d/%m/%Y')
                                       ^^^^^
features/transfer_in_pq_spec.rb:36:73: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    create_transferred_pq('invalid-uin-1', 'question_text', invalid_date )
                                                                        ^
features/transfer_in_pq_spec.rb:38:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_text("")
                                    ^^
features/transfer_in_pq_spec.rb:46:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page.title).to have_text("Dashboard")
                                    ^^^^^^^^^^^
features/transfer_in_pq_spec.rb:66:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    expect(report).to include(:updated => 1)
                              ^^^^^^^^^^^
features/early_bird_spec.rb:4:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
feature "Early bird member sees allocated questions", suspend_cleaner: true do
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_spec.rb:18:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "An admin can create a new early bird member" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_spec.rb:32:35: C: Layout/LeadingCommentSpace: Missing space after #.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_spec.rb:32:35: C: Style/InlineComment: Avoid trailing inline comments.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_spec.rb:37:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "An admin can trigger an email notification to the early bird members with a link to the daily question list" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_spec.rb:48:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "A early bird member follows an email link to view the list of daily questions" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_spec.rb:57:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "The URL token sent to the early bird member expires after 24 hours" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_spec.rb:58:37: C: Style/DateTime: Prefer Time over DateTime.
    EarlyBirdReportService.new(nil, DateTime.now - 2.days).notify_early_bird
                                    ^^^^^^^^^^^^
features/early_bird_spec.rb:58:46: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
    EarlyBirdReportService.new(nil, DateTime.now - 2.days).notify_early_bird
                                             ^^^
features/early_bird_spec.rb:67:25: W: Lint/UnusedMethodArgument: Unused method argument - aos. If it's necessary, use _ or _aos as an argument name to indicate that it won't be used. You can also write as generate_dummy_pq(*) if you want the method to accept any arguments but don't care about them.
  def generate_dummy_pq(aos)
                        ^^^
features/early_bird_spec.rb:71:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    q.uin               = "1"
                          ^^^
features/early_bird_spec.rb:74:32: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    q.internal_deadline = Date.today + 1.day
                               ^^^^^
features/early_bird_spec.rb:75:32: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    q.internal_deadline = Date.today + 2.day
                               ^^^^^
features/early_bird_spec.rb:75:40: C: Rails/PluralizationGrammar: Prefer 2.days.
    q.internal_deadline = Date.today + 2.day
                                       ^^^^^
features/rejecting_aos_spec.rb:10:10: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer @pq, =  PQA::QuestionLoader.new.load_and_import(2).
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
         ^^
features/rejecting_aos_spec.rb:10:12: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
           ^
features/rejecting_aos_spec.rb:10:13: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    @pq, _ =  PQA::QuestionLoader.new.load_and_import(2)
            ^
features/rejecting_aos_spec.rb:11:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/rejecting_aos_spec.rb:28:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "PB commissions a question to two AOs" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/rejecting_aos_spec.rb:32:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "PB manually rejects the first AO" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/rejecting_aos_spec.rb:35:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "PQ commission"
             ^^^^^^^^^^^^^^^
features/rejecting_aos_spec.rb:36:20: C: Layout/SpaceAfterColon: Space missing after colon.
    first('a', text:'Manually reject this action officer').click
                   ^
features/rejecting_aos_spec.rb:41:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "PQ commission"
             ^^^^^^^^^^^^^^^
features/rejecting_aos_spec.rb:43:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_content("rejected manually by pq@pq.com")
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/rejecting_aos_spec.rb:44:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect_pq_status(@pq.uin, "No response")
                              ^^^^^^^^^^^^^
features/rejecting_aos_spec.rb:47:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "PB manually rejects the last AO" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/rejecting_aos_spec.rb:50:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "PQ commission"
             ^^^^^^^^^^^^^^^
features/rejecting_aos_spec.rb:51:20: C: Layout/SpaceAfterColon: Space missing after colon.
    first('a', text:'Manually reject this action officer').click
                   ^
features/rejecting_aos_spec.rb:52:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect_pq_status(@pq.uin, "Rejected")
                              ^^^^^^^^^^
features/reports_spec.rb:14:5: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
    param_name = case record ...
    ^^^^^^^^^^^^^^^^^^^^^^^^
features/reports_spec.rb:15:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                 when Minister  then "minister_id"
                                     ^^^^^^^^^^^^^
features/reports_spec.rb:16:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                 when PressDesk then "press_desk_id"
                                     ^^^^^^^^^^^^^^^
features/reports_spec.rb:18:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                   raise ArgumentError, "record must be either minister or press desk"
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/reports_spec.rb:26:17: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer @pq1, @pq2, = PQA::QuestionLoader.new.load_and_import(10).
    @pq1, @pq2, _ = PQA::QuestionLoader.new.load_and_import(10)
                ^^
features/reports_spec.rb:33:26: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_name.
  let(:minister)       { Minister.find_by_name('Chris Grayling') }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:3:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
feature "User filters early bird questions", js: true, suspend_cleaner: true do
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
features/early_bird_filters_spec.rb:7:22: C: Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    generate_dummy_pq()
                     ^^
features/early_bird_filters_spec.rb:37:35: C: Layout/LeadingCommentSpace: Missing space after #.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:37:35: C: Style/InlineComment: Avoid trailing inline comments.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:56:35: C: Layout/LeadingCommentSpace: Missing space after #.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:56:35: C: Style/InlineComment: Avoid trailing inline comments.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:87:35: C: Layout/LeadingCommentSpace: Missing space after #.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:87:35: C: Style/InlineComment: Avoid trailing inline comments.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:92:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Lorem Ipsum'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:97:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Ministry of Justice'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:102:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'not simply random text'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:107:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'by Cicero, written in 45 BC'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:112:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Renaissance. The first line'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:117:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/early_bird_filters_spec.rb:122:35: C: Layout/LeadingCommentSpace: Missing space after #.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:122:35: C: Style/InlineComment: Avoid trailing inline comments.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:130:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Lorem Ipsum'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:135:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Ministry of Justice'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:140:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'not simply random text'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:145:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'by Cicero, written in 45 BC'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:150:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Renaissance. The first line'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:159:35: C: Layout/LeadingCommentSpace: Missing space after #.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:159:35: C: Style/InlineComment: Avoid trailing inline comments.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:168:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Lorem Ipsum'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:173:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Ministry of Justice'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:178:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'not simply random text'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:183:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'by Cicero, written in 45 BC'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:188:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Renaissance. The first line'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:193:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/early_bird_filters_spec.rb:196:1: C: Layout/EmptyLines: Extra blank line detected.
features/early_bird_filters_spec.rb:198:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
features/early_bird_filters_spec.rb:200:35: C: Layout/LeadingCommentSpace: Missing space after #.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:200:35: C: Style/InlineComment: Avoid trailing inline comments.
    visit early_bird_preview_path #'/early_bird/preview'
                                  ^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:208:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Lorem Ipsum'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:213:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Ministry of Justice'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:218:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'not simply random text'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:223:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'by Cicero, written in 45 BC'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:228:25: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    fill_in 'keywords', :with => 'Renaissance. The first line'
                        ^^^^^^^^
features/early_bird_filters_spec.rb:233:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/early_bird_filters_spec.rb:238:24: C: Style/DefWithParentheses: Omit the parentheses in defs when the method doesn't accept any arguments.
  def generate_dummy_pq()
                       ^
features/early_bird_filters_spec.rb:239:48: C: Style/InlineComment: Avoid trailing inline comments.
    PQA::QuestionLoader.new.load_and_import(3) # Generate three questions.
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/early_bird_filters_spec.rb:241:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/qa_pq_edit_dates_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
features/qa_pq_edit_dates_spec.rb:11:5: C: Style/ParallelAssignment: Do not use parallel assignment.
    @uin1, @uin2, @uin3 = pq1.uin, pq2.uin, pq3.uin
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:20:26: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
  let(:testDate) { (Date.today+3).to_s + ' 12:00' }
                         ^^^^^
features/qa_pq_edit_dates_spec.rb:20:31: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
  let(:testDate) { (Date.today+3).to_s + ' 12:00' }
                              ^
features/qa_pq_edit_dates_spec.rb:22:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "Check all elements are present" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:24:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_css("#count", text: "3 parliamentary questions")
                             ^^^^^^^^
features/qa_pq_edit_dates_spec.rb:24:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_css("#count", text: "3 parliamentary questions")
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:25:26: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#editDates') {
                         ^
features/qa_pq_edit_dates_spec.rb:27:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("No PQs selected")
                                ^^^^^^^^^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:37:26: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#editDates') {
                         ^
features/qa_pq_edit_dates_spec.rb:44:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "A user sets the deadline date for all PQs" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:47:26: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#editDates') {
                         ^
features/qa_pq_edit_dates_spec.rb:53:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_css(".pq-msg-success.fade.in", text: "Date(s) updated")
                             ^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:53:63: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_css(".pq-msg-success.fade.in", text: "Date(s) updated")
                                                              ^^^^^^^^^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:54:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_css("#pq-frame-1 .deadline-date.text", text: testDate)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:55:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_css("#pq-frame-2 .deadline-date.text", text: testDate)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:56:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_css("#pq-frame-3 .deadline-date.text", text: testDate)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:79:24: C: Style/DefWithParentheses: Omit the parentheses in defs when the method doesn't accept any arguments.
  def accept_commission()
                       ^
features/qa_pq_edit_dates_spec.rb:80:5: W: Lint/UselessAssignment: Useless assignment to variable - ao_mail.
    ao_mail = sent_mail.first
    ^^^^^^^
features/qa_pq_edit_dates_spec.rb:88:17: C: Style/DefWithParentheses: Omit the parentheses in defs when the method doesn't accept any arguments.
  def initialise()
                ^
features/qa_pq_edit_dates_spec.rb:99:7: C: Naming/MethodName: Use snake_case for method names.
  def setDate(dateType, tabLink, dateField)
      ^^^^^^^
features/qa_pq_edit_dates_spec.rb:99:15: C: Naming/UncommunicativeMethodParamName: Only use lowercase characters for method parameter.
  def setDate(dateType, tabLink, dateField)
              ^^^^^^^^
features/qa_pq_edit_dates_spec.rb:99:15: C: Naming/VariableName: Use snake_case for variable names.
  def setDate(dateType, tabLink, dateField)
              ^^^^^^^^
features/qa_pq_edit_dates_spec.rb:99:25: C: Naming/UncommunicativeMethodParamName: Only use lowercase characters for method parameter.
  def setDate(dateType, tabLink, dateField)
                        ^^^^^^^
features/qa_pq_edit_dates_spec.rb:99:25: C: Naming/VariableName: Use snake_case for variable names.
  def setDate(dateType, tabLink, dateField)
                        ^^^^^^^
features/qa_pq_edit_dates_spec.rb:99:34: C: Naming/UncommunicativeMethodParamName: Only use lowercase characters for method parameter.
  def setDate(dateType, tabLink, dateField)
                                 ^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:99:34: C: Naming/VariableName: Use snake_case for variable names.
  def setDate(dateType, tabLink, dateField)
                                 ^^^^^^^^^
features/qa_pq_edit_dates_spec.rb:101:26: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#editDates') {
                         ^
features/qa_pq_edit_dates_spec.rb:110:37: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    expect(page).to have_field('pq['+dateField+']', with: '')
                                    ^
features/qa_pq_edit_dates_spec.rb:110:47: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    expect(page).to have_field('pq['+dateField+']', with: '')
                                              ^
features/qa_pq_edit_dates_spec.rb:114:37: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    expect(page).to have_field('pq['+dateField+']', with: '')
                                    ^
features/qa_pq_edit_dates_spec.rb:114:47: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    expect(page).to have_field('pq['+dateField+']', with: '')
                                              ^
features/qa_pq_edit_dates_spec.rb:118:37: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    expect(page).to have_field('pq['+dateField+']', with: testDate)
                                    ^
features/qa_pq_edit_dates_spec.rb:118:47: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    expect(page).to have_field('pq['+dateField+']', with: testDate)
                                              ^
features/post_commissioning_spec.rb:13:5: C: Style/ParallelAssignment: Do not use parallel assignment.
    @uin1, @uin2, @uin3 = pq1.uin, pq2.uin, pq3.uin
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:14:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
features/post_commissioning_spec.rb:34:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin1, "PQ draft") { fillin_date('#draft_answer_received') }
                        ^^^^^^^^^^
features/post_commissioning_spec.rb:38:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "Question that is late by less than one hour shows overdue warning" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:41:34: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    pq.internal_deadline = (Time.now - 10.minutes).to_s
                                 ^^^
features/post_commissioning_spec.rb:44:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    click_on "PQ commission"
             ^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:49:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin1, "POD check") { check "POD query flag" }
                        ^^^^^^^^^^^
features/post_commissioning_spec.rb:49:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin1, "POD check") { check "POD query flag" }
                                             ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:52:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin1, "POD check") { fillin_date('#pod_clearance') }
                        ^^^^^^^^^^^
features/post_commissioning_spec.rb:57:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin1, "Minister check") { fillin_date('#sent_to_answering_minister') }
                        ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:60:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin1, "Minister check") { check 'Answering minister query' }
                        ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:63:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin1, "Minister check") { fillin_date('#cleared_by_answering_minister') }
                        ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:79:1: C: Layout/EmptyLines: Extra blank line detected.
features/post_commissioning_spec.rb:80:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "PQ draft")       { fillin_date('#draft_answer_received') }
                        ^^^^^^^^^^
features/post_commissioning_spec.rb:81:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "POD check")      { check "POD query flag" }
                        ^^^^^^^^^^^
features/post_commissioning_spec.rb:81:51: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "POD check")      { check "POD query flag" }
                                                  ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:82:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "POD check")      { fillin_date('#pod_clearance') }
                        ^^^^^^^^^^^
features/post_commissioning_spec.rb:83:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "Minister check") { fillin_date('#sent_to_answering_minister') }
                        ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:84:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "Minister check") { check 'Answering minister query' }
                        ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:85:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "Minister check") { fillin_date('#cleared_by_answering_minister') }
                        ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:88:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "Minister check") { remove_date('#cleared_by_answering_minister') }
                        ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:93:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "Minister check") { uncheck 'Answering minister query' }
                        ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:98:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "Minister check") { remove_date('#sent_to_answering_minister') }
                        ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:101:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "Minister check") { remove_date('#sent_to_answering_minister') }
                        ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:104:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "POD check") { remove_date('#pod_clearance') }
                        ^^^^^^^^^^^
features/post_commissioning_spec.rb:107:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "POD check") { uncheck "POD query flag" }
                        ^^^^^^^^^^^
features/post_commissioning_spec.rb:107:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "POD check") { uncheck "POD query flag" }
                                               ^^^^^^^^^^^^^^^^
features/post_commissioning_spec.rb:108:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    in_pq_detail(@uin2, "PQ draft")  { remove_date('#draft_answer_received') }
                        ^^^^^^^^^^
features/qa_draft_reminder_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
features/qa_draft_reminder_spec.rb:5:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	include Features::PqHelpers
^
features/qa_draft_reminder_spec.rb:5:1: C: Layout/Tab: Tab detected.
	include Features::PqHelpers
^
features/qa_draft_reminder_spec.rb:7:1: C: Layout/Tab: Tab detected.
	before(:each) do
^
features/qa_draft_reminder_spec.rb:8:1: C: Layout/Tab: Tab detected.
		clear_sent_mail
^^
features/qa_draft_reminder_spec.rb:8:3: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
		clear_sent_mail
  
features/qa_draft_reminder_spec.rb:9:1: C: Layout/Tab: Tab detected.
		DBHelpers.load_feature_fixtures
^^
features/qa_draft_reminder_spec.rb:10:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    pq1, pq2, pq3 = PQA::QuestionLoader.new.load_and_import(3)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:11:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    @uin1, @uin2, @uin3 = pq1.uin, pq2.uin, pq3.uin
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:11:5: C: Style/ParallelAssignment: Do not use parallel assignment.
    @uin1, @uin2, @uin3 = pq1.uin, pq2.uin, pq3.uin
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:12:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    @ao = ActionOfficer.find_by(email: 'ao1@pq.com')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:13:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    @minister = Minister.first
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:14:3: C: Layout/BlockAlignment: end at 14, 2 is not aligned with before(:each) do at 7, 1.
  end
  ^^^
features/qa_draft_reminder_spec.rb:16:1: C: Layout/Tab: Tab detected.
	after(:each) do
^
features/qa_draft_reminder_spec.rb:17:1: C: Layout/Tab: Tab detected.
		DatabaseCleaner.clean
^^
features/qa_draft_reminder_spec.rb:17:3: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
		DatabaseCleaner.clean
  
features/qa_draft_reminder_spec.rb:18:3: C: Layout/BlockAlignment: end at 18, 2 is not aligned with after(:each) do at 16, 1.
  end
  ^^^
features/qa_draft_reminder_spec.rb:20:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  scenario "A user sends draft reminders for all PQs" do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:20:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "A user sends draft reminders for all PQs" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:23:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#draftReminders'){
                             ^
features/qa_draft_reminder_spec.rb:23:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#draftReminders'){
                             ^
features/qa_draft_reminder_spec.rb:25:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("3 PQs selected")
                                ^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:31:38: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('.pq-msg-success.fade.in'){
                                     ^
features/qa_draft_reminder_spec.rb:31:38: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('.pq-msg-success.fade.in'){
                                     ^
features/qa_draft_reminder_spec.rb:32:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("Draft Reminder(s) Sent")
                                ^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:36:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  scenario "A user cancels draft reminders for all PQs" do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:36:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  scenario "A user cancels draft reminders for all PQs" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:39:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    within('#draftReminders'){
                             ^
features/qa_draft_reminder_spec.rb:39:30: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    within('#draftReminders'){
                             ^
features/qa_draft_reminder_spec.rb:41:33: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_text("3 PQs selected")
                                ^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:49:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  def accept_commission() ...
  ^^^^^^^^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:49:24: C: Style/DefWithParentheses: Omit the parentheses in defs when the method doesn't accept any arguments.
  def accept_commission()
                       ^
features/qa_draft_reminder_spec.rb:50:5: W: Lint/UselessAssignment: Useless assignment to variable - ao_mail.
    ao_mail = sent_mail.first
    ^^^^^^^
features/qa_draft_reminder_spec.rb:58:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  def initialise() ...
  ^^^^^^^^^^^^^^^^
features/qa_draft_reminder_spec.rb:58:17: C: Style/DefWithParentheses: Omit the parentheses in defs when the method doesn't accept any arguments.
  def initialise()
                ^
features/qa_draft_reminder_spec.rb:68:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/spec_helper.rb:4:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= 'test'
    ^^^^^^^^^^^
spec/spec_helper.rb:6:14: C: Style/ExpandPathArguments: Use expand_path('../config/environment', __dir__) instead of expand_path('../../config/environment', __FILE__).
require File.expand_path("../../config/environment", __FILE__)
             ^^^^^^^^^^^
spec/spec_helper.rb:6:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require File.expand_path("../../config/environment", __FILE__)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:17:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup"
        ^^^^^^^^^^^^^^^
spec/spec_helper.rb:22:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/spec_helper.rb:48:2: C: Layout/CommentIndentation: Incorrect indentation detected (column 1 instead of 2).
 # config.include Devise::TestHelpers, type: :controller
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:74:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  config.order = "random"
                 ^^^^^^^^
spec/spec_helper.rb:95:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/spec_helper.rb:115:22: C: Style/IfInsideElse: Convert if nested inside else to elsif.
      result = false if actual.message != message
                     ^^
spec/spec_helper.rb:120:1: C: Layout/TrailingBlankLines: 2 trailing blank lines detected.
spec/mailers/pq_accepted_mailer_spec.rb:10:81: C: Layout/SpaceAfterColon: Space missing after colon.
  let(:dd)             { create(:deputy_director, name: 'Deputy Director', email:'dep@dep.gov')}
                                                                                ^
spec/mailers/pq_accepted_mailer_spec.rb:10:96: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:dd)             { create(:deputy_director, name: 'Deputy Director', email:'dep@dep.gov')}
                                                                                               ^
spec/mailers/pq_accepted_mailer_spec.rb:18:31: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def trigger_acceptance_mail(pq, ao)
                              ^^
spec/mailers/pq_accepted_mailer_spec.rb:18:35: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def trigger_acceptance_mail(pq, ao)
                                  ^^
spec/mailers/pq_accepted_mailer_spec.rb:37:7: C: Naming/VariableName: Use snake_case for variable names.
      expectedCC = 'test1@tesk.uk'
      ^^^^^^^^^^
spec/mailers/pq_accepted_mailer_spec.rb:44:49: C: Style/ColonMethodCall: Do not use :: for method calls.
      expect(mail.html_part.body).to include CGI::escape(expectedCC)
                                                ^^
spec/mailers/pq_accepted_mailer_spec.rb:53:7: C: Naming/VariableName: Use snake_case for variable names.
      expectedCC = contact_emails.join(';')
      ^^^^^^^^^^
spec/mailers/pq_accepted_mailer_spec.rb:60:49: C: Style/ColonMethodCall: Do not use :: for method calls.
      expect(mail.html_part.body).to include CGI::escape(expectedCC)
                                                ^^
spec/mailers/pq_accepted_mailer_spec.rb:69:7: C: Naming/VariableName: Use snake_case for variable names.
      expectedCC = 'test1@tesk.uk;test2@tesk.uk;a1@a1.com;a2@a2.com'
      ^^^^^^^^^^
spec/mailers/pq_accepted_mailer_spec.rb:76:49: C: Style/ColonMethodCall: Do not use :: for method calls.
      expect(mail.html_part.body).to include CGI::escape(expectedCC)
                                                ^^
spec/mailers/pq_accepted_mailer_spec.rb:91:19: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      member_name =  'Jeremy Snodgrass'
                  ^
spec/mailers/pq_accepted_mailer_spec.rb:91:20: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      member_name =  'Jeremy Snodgrass'
                   ^
spec/mailers/pq_accepted_mailer_spec.rb:124:1: C: Layout/EmptyLines: Extra blank line detected.
spec/mailers/pq_accepted_mailer_spec.rb:126:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/mailers/pq_accepted_mailer_spec.rb:129:24: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      my_finance_email =  'financepq@wibble.com'
                       ^
spec/mailers/pq_accepted_mailer_spec.rb:129:25: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      my_finance_email =  'financepq@wibble.com'
                        ^
spec/mailers/pq_accepted_mailer_spec.rb:130:25: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: false, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                        ^
spec/mailers/pq_accepted_mailer_spec.rb:130:47: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: false, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                                              ^
spec/mailers/pq_accepted_mailer_spec.rb:130:80: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: false, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                                                                               ^
spec/mailers/pq_accepted_mailer_spec.rb:130:107: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: false, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                                                                                                          ^
spec/mailers/pq_accepted_mailer_spec.rb:131:25: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy2', roles:'FINANCE', deleted: true, email:'financePQ2@wibble.com', password:'bloib2bloib2bloib2bloib2')
                        ^
spec/mailers/pq_accepted_mailer_spec.rb:131:47: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy2', roles:'FINANCE', deleted: true, email:'financePQ2@wibble.com', password:'bloib2bloib2bloib2bloib2')
                                              ^
spec/mailers/pq_accepted_mailer_spec.rb:131:79: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy2', roles:'FINANCE', deleted: true, email:'financePQ2@wibble.com', password:'bloib2bloib2bloib2bloib2')
                                                                              ^
spec/mailers/pq_accepted_mailer_spec.rb:131:113: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy2', roles:'FINANCE', deleted: true, email:'financePQ2@wibble.com', password:'bloib2bloib2bloib2bloib2')
                                                                                                                ^
spec/mailers/pq_accepted_mailer_spec.rb:133:1: C: Layout/EmptyLines: Extra blank line detected.
spec/mailers/pq_accepted_mailer_spec.rb:141:49: C: Style/ColonMethodCall: Do not use :: for method calls.
      expect(mail.html_part.body).to include CGI::escape(my_finance_email)
                                                ^^
spec/mailers/pq_accepted_mailer_spec.rb:148:24: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      my_finance_email =  'financepq@wibble.com'
                       ^
spec/mailers/pq_accepted_mailer_spec.rb:148:25: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      my_finance_email =  'financepq@wibble.com'
                        ^
spec/mailers/pq_accepted_mailer_spec.rb:149:25: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: false, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                        ^
spec/mailers/pq_accepted_mailer_spec.rb:149:47: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: false, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                                              ^
spec/mailers/pq_accepted_mailer_spec.rb:149:80: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: false, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                                                                               ^
spec/mailers/pq_accepted_mailer_spec.rb:149:107: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: false, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                                                                                                          ^
spec/mailers/pq_accepted_mailer_spec.rb:158:53: C: Style/ColonMethodCall: Do not use :: for method calls.
      expect(mail.html_part.body).to_not include CGI::escape(my_finance_email)
                                                    ^^
spec/mailers/pq_accepted_mailer_spec.rb:162:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/mailers/pq_accepted_mailer_spec.rb:166:24: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      my_finance_email =  'financepq@wibble.com'
                       ^
spec/mailers/pq_accepted_mailer_spec.rb:166:25: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      my_finance_email =  'financepq@wibble.com'
                        ^
spec/mailers/pq_accepted_mailer_spec.rb:167:25: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: true, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                        ^
spec/mailers/pq_accepted_mailer_spec.rb:167:47: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: true, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                                              ^
spec/mailers/pq_accepted_mailer_spec.rb:167:79: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: true, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                                                                              ^
spec/mailers/pq_accepted_mailer_spec.rb:167:106: C: Layout/SpaceAfterColon: Space missing after colon.
      create(:user, name:'Finance Guy1', roles:'FINANCE', deleted: true, email:my_finance_email, password:'bloibbloibbloibbloibbloib')
                                                                                                         ^
spec/mailers/pq_accepted_mailer_spec.rb:176:53: C: Style/ColonMethodCall: Do not use :: for method calls.
      expect(mail.html_part.body).to_not include CGI::escape(my_finance_email)
                                                    ^^
spec/mailers/pq_accepted_mailer_spec.rb:180:68: C: Layout/SpaceAfterComma: Space missing after comma.
      pq = create(:pq, uin: 'HL789', date_for_answer: Date.new(2014,9,4), question: 'test question?', minister_id: minister_1.id, member_name: 'Jeremy Snodgrass', house_name: 'HoL')
                                                                   ^
spec/mailers/pq_accepted_mailer_spec.rb:180:70: C: Layout/SpaceAfterComma: Space missing after comma.
      pq = create(:pq, uin: 'HL789', date_for_answer: Date.new(2014,9,4), question: 'test question?', minister_id: minister_1.id, member_name: 'Jeremy Snodgrass', house_name: 'HoL')
                                                                     ^
spec/mailers/pq_accepted_mailer_spec.rb:203:7: C: Naming/VariableName: Use snake_case for variable names.
      expectedCC = 'dep@dep.gov'
      ^^^^^^^^^^
spec/mailers/pq_accepted_mailer_spec.rb:211:49: C: Style/ColonMethodCall: Do not use :: for method calls.
      expect(mail.html_part.body).to include CGI::escape(expectedCC)
                                                ^^
spec/mailers/pq_accepted_mailer_spec.rb:216:7: C: Naming/VariableName: Use snake_case for variable names.
      expectedCC = 'dep@dep.gov'
      ^^^^^^^^^^
spec/mailers/pq_accepted_mailer_spec.rb:223:53: C: Style/ColonMethodCall: Do not use :: for method calls.
      expect(mail.html_part.body).to_not include CGI::escape(expectedCC)
                                                    ^^
spec/mailers/action_officer_reminder_mailer_spec.rb:4:37: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  let(:ao) { create(:action_officer,  name: 'ao name 1', email: 'ao@ao.gov') }
                                    ^
spec/mailers/action_officer_reminder_mailer_spec.rb:9:76: C: Layout/SpaceAfterColon: Space missing after colon.
    @pq = create(:pq, uin: 'HL789', question: 'test question?', member_name:'Asking MP', minister_id: minister_1.id, house_name: 'House of Lords')
                                                                           ^
spec/mailers/action_officer_reminder_mailer_spec.rb:11:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/mailers/action_officer_reminder_mailer_spec.rb:52:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/mailers/pq_base_mailer_spec.rb:4:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  context "logging" do
          ^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:5:13: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    let(:pq)      { FactoryBot.create :pq }
            ^^^^^
spec/mailers/pq_base_mailer_spec.rb:9:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :uin                  => pq.uin,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:9:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :uin                  => pq.uin,
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:10:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :question             => pq.question,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:10:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :question             => pq.question,
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:11:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :ao_name              => "Colin Bruce",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:11:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :ao_name              => "Colin Bruce",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:11:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :ao_name              => "Colin Bruce",
                                 ^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:12:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :member_constituency  => "Kingston upon Hull North",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:12:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :member_constituency  => "Kingston upon Hull North",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:12:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :member_constituency  => "Kingston upon Hull North",
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:13:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :member_name          => "Diana Johnson",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:13:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :member_name          => "Diana Johnson",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:13:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :member_name          => "Diana Johnson",
                                 ^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:14:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :house_name           => "House of Commons",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:14:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :house_name           => "House of Commons",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:14:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :house_name           => "House of Commons",
                                 ^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:15:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :answer_by            => "Damian Green (MP)",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:15:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :answer_by            => "Damian Green (MP)",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:15:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :answer_by            => "Damian Green (MP)",
                                 ^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:16:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :internal_deadline    => 3.days.from_now,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:16:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :internal_deadline    => 3.days.from_now,
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:17:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :date_to_parliament   => 5.days.from_now,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:17:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :date_to_parliament   => 5.days.from_now,
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:18:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :email                => "colin.bruce@digital.justice.gov.uk",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:18:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :email                => "colin.bruce@digital.justice.gov.uk",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:18:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :email                => "colin.bruce@digital.justice.gov.uk",
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:19:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :token                => "KL7g57Y-7ZFgBBGvWq9o",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:19:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :token                => "KL7g57Y-7ZFgBBGvWq9o",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:19:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :token                => "KL7g57Y-7ZFgBBGvWq9o",
                                 ^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:20:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :entity               => "assignment:4"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:20:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :entity               => "assignment:4"
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_base_mailer_spec.rb:20:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :entity               => "assignment:4"
                                 ^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/mailers/pq_mailers_spec.rb:6:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/mailers/pq_mailers_spec.rb:10:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :uin                  => pq.uin,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:10:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :uin                  => pq.uin,
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:11:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :question             => pq.question,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:11:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :question             => pq.question,
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:12:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :ao_name              => "Colin Bruce",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:12:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :ao_name              => "Colin Bruce",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:12:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :ao_name              => "Colin Bruce",
                                 ^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:13:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :member_constituency  => "Kingston upon Hull North",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:13:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :member_constituency  => "Kingston upon Hull North",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:13:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :member_constituency  => "Kingston upon Hull North",
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:14:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :member_name          => "Diana Johnson",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:14:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :member_name          => "Diana Johnson",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:14:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :member_name          => "Diana Johnson",
                                 ^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:15:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :house_name           => "House of Commons",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:15:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :house_name           => "House of Commons",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:15:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :house_name           => "House of Commons",
                                 ^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:16:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :answer_by            => "Damian Green (MP)",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:16:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :answer_by            => "Damian Green (MP)",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:16:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :answer_by            => "Damian Green (MP)",
                                 ^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:17:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :internal_deadline    => 3.days.from_now,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:17:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :internal_deadline    => 3.days.from_now,
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:18:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :date_to_parliament   => 5.days.from_now,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:18:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :date_to_parliament   => 5.days.from_now,
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:19:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :email                => "colin.bruce@digital.justice.gov.uk",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:19:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :email                => "colin.bruce@digital.justice.gov.uk",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:19:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :email                => "colin.bruce@digital.justice.gov.uk",
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:20:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :cc                   => "kulsgroupmail@digital.justice.gov.uk",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:20:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :cc                   => "kulsgroupmail@digital.justice.gov.uk",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:20:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :cc                   => "kulsgroupmail@digital.justice.gov.uk",
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:21:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :token                => "KL7g57Y-7ZFgBBGvWq9o",
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:21:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :token                => "KL7g57Y-7ZFgBBGvWq9o",
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:21:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :token                => "KL7g57Y-7ZFgBBGvWq9o",
                                 ^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:22:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :entity               => "assignment:4"}
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:22:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :entity               => "assignment:4"}
        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:22:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        :entity               => "assignment:4"}
                                 ^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:22:48: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the line after the last hash element when opening brace is on a separate line from the first hash element.
        :entity               => "assignment:4"}
                                               ^
spec/mailers/pq_mailers_spec.rb:22:48: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        :entity               => "assignment:4"}
                                               ^
spec/mailers/pq_mailers_spec.rb:30:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(mail.to).to eq ["colin.bruce@digital.justice.gov.uk"]
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:31:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(mail.from).to eq ["no-reply@trackparliamentaryquestions.service.gov.uk"]
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:32:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(mail.reply_to).to eq ["pqs@justice.gsi.gov.uk"]
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:33:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(mail.cc).to eq ["kulsgroupmail@digital.justice.gov.uk"]
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/mailers/pq_mailers_spec.rb:45:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/mailers/pq_mailers_spec.rb:48:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/mailers/pq_mailers_spec.rb:50:1: C: Layout/TrailingBlankLines: 1 trailing blank lines detected.
spec/models/deputy_director_spec.rb:17:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	let(:depdir) {build(:deputy_director)}
^
spec/models/deputy_director_spec.rb:17:1: C: Layout/Tab: Tab detected.
	let(:depdir) {build(:deputy_director)}
^
spec/models/deputy_director_spec.rb:17:16: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
	let(:depdir) {build(:deputy_director)}
               ^
spec/models/deputy_director_spec.rb:17:39: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
	let(:depdir) {build(:deputy_director)}
                                      ^
spec/models/deputy_director_spec.rb:18:1: C: Layout/Tab: Tab detected.
spec/models/deputy_director_spec.rb:18:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/models/deputy_director_spec.rb:19:1: C: Layout/Tab: Tab detected.
	it { should validate_presence_of(:name) }
^
spec/models/deputy_director_spec.rb:21:1: C: Layout/Tab: Tab detected.
	it 'should pass factory build' do
^
spec/models/deputy_director_spec.rb:22:1: C: Layout/Tab: Tab detected.
		expect(depdir).to be_valid
^^
spec/models/deputy_director_spec.rb:22:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		expect(depdir).to be_valid
 ^
spec/models/deputy_director_spec.rb:23:1: C: Layout/Tab: Tab detected.
	end
^
spec/models/deputy_director_spec.rb:25:1: C: Layout/Tab: Tab detected.
	it 'should have a division' do
^
spec/models/deputy_director_spec.rb:26:1: C: Layout/Tab: Tab detected.
		depdir.division_id = nil
^^
spec/models/deputy_director_spec.rb:26:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		depdir.division_id = nil
 ^
spec/models/deputy_director_spec.rb:27:1: C: Layout/Tab: Tab detected.
		expect(depdir).to be_invalid
^^
spec/models/deputy_director_spec.rb:28:1: C: Layout/Tab: Tab detected.
	end
^
spec/models/deputy_director_spec.rb:30:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  describe "associations" do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/deputy_director_spec.rb:30:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "associations" do
           ^^^^^^^^^^^^^^
spec/models/deputy_director_spec.rb:31:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have a division attribute" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:73:18: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:subject) {build(:pq)}
                 ^
spec/models/pq_spec.rb:73:28: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:subject) {build(:pq)}
                           ^
spec/models/pq_spec.rb:75:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "associations" do
           ^^^^^^^^^^^^^^
spec/models/pq_spec.rb:83:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe ".before_update" do
           ^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:84:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "sets the state weight" do
       ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:86:11: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer pq, = DBHelpers.pqs.
      pq, _    = DBHelpers.pqs
          ^^^^^
spec/models/pq_spec.rb:92:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe ".sorted_for_dashboard" do
           ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:93:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "sorts pqs in the expected order" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:100:55: C: Rails/PluralizationGrammar: Prefer 1.day.
      pqs[2].update(date_for_answer: Date.tomorrow  + 1.days, state: PQState::POD_QUERY)
                                                      ^^^^^^
spec/models/pq_spec.rb:101:55: C: Rails/PluralizationGrammar: Prefer 1.day.
      pqs[3].update(date_for_answer: Date.tomorrow  + 1.days)
                                                      ^^^^^^
spec/models/pq_spec.rb:104:55: C: Rails/PluralizationGrammar: Prefer 1.day.
      pqs[6].update(date_for_answer: Date.yesterday - 1.days, state: PQState::WITH_MINISTER)
                                                      ^^^^^^
spec/models/pq_spec.rb:105:55: C: Rails/PluralizationGrammar: Prefer 1.day.
      pqs[7].update(date_for_answer: Date.yesterday - 1.days) && pqs[7]
                                                      ^^^^^^
spec/models/pq_spec.rb:132:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe ".count_accepted_by_press_desk" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:133:19: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def accept_pq(pq, ao)
                  ^^
spec/models/pq_spec.rb:133:23: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def accept_pq(pq, ao)
                      ^^
spec/models/pq_spec.rb:140:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when no data exist" do
            ^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:141:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns an empty hash" do
         ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:146:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when some data exist" do
            ^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:161:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns a hash with states as keys and press-desk/counts as values" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:162:55: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        expect(Pq.count_accepted_by_press_desk).to eq({ ...
                                                      ^
spec/models/pq_spec.rb:163:11: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
          PQState::NO_RESPONSE => { ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:169:9: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
        })
        ^
spec/models/pq_spec.rb:172:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      context "when a press desk gets deleted" do
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:177:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        it "omits the associated questions from the results" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:178:57: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
          expect(Pq.count_accepted_by_press_desk).to eq({ ...
                                                        ^
spec/models/pq_spec.rb:179:13: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
            PQState::WITH_POD => { ...
            ^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:182:11: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
          })
          ^
spec/models/pq_spec.rb:188:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe ".count_in_progress_by_minister" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:189:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when no data exist" do
            ^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:190:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns an empty hash" do
         ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:195:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when some data exist" do
            ^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:197:33: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer @minister1, @minister2, = DBHelpers.ministers.
        @minister1, @minister2, _ = DBHelpers.ministers
                                ^^
spec/models/pq_spec.rb:207:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns a hash with states as keys and minister counts as values" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:208:56: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        expect(Pq.count_in_progress_by_minister).to eq({ ...
                                                       ^
spec/models/pq_spec.rb:209:11: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
          PQState::DRAFT_PENDING => { ...
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:211:31: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
            @minister2.id => 1,
                              ^
spec/models/pq_spec.rb:216:9: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
        })
        ^
spec/models/pq_spec.rb:219:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      context "when a minister becomes inactive" do
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:224:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        it "omits the minister and its related PQ count from the results" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:225:58: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
          expect(Pq.count_in_progress_by_minister).to eq({ ...
                                                         ^
spec/models/pq_spec.rb:226:13: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
            PQState::DRAFT_PENDING => { ...
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:227:33: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
              @minister2.id => 1,
                                ^
spec/models/pq_spec.rb:232:11: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
          })
          ^
spec/models/pq_spec.rb:238:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe ".filter_for_report" do
           ^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:239:31: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def commission_and_accept(pq, ao, minister)
                              ^^
spec/models/pq_spec.rb:239:35: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def commission_and_accept(pq, ao, minister)
                                  ^^
spec/models/pq_spec.rb:244:72: C: Style/TrailingCommaInArguments: Avoid comma after the last parameter of a method call.
                                                     action_officer: ao,)
                                                                       ^
spec/models/pq_spec.rb:250:14: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer @min1, = DBHelpers.ministers.
      @min1, _               = DBHelpers.ministers
             ^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:258:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when state, minister or press desk are all nil" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:259:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns all the records" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:265:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when state, minister or press desk are all present" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:266:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns the expected records" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:292:83: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    let!(:older_pq) { create(:not_responded_pq, action_officer_allocated_at: Time.now - 2.days)}
                                                                                  ^^^
spec/models/pq_spec.rb:292:96: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    let!(:older_pq) { create(:not_responded_pq, action_officer_allocated_at: Time.now - 2.days)}
                                                                                               ^
spec/models/pq_spec.rb:293:96: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    let!(:new_pq1) { create(:not_responded_pq, uin: '20001', action_officer_allocated_at: Time.now + 3.hours)}
                                                                                               ^^^
spec/models/pq_spec.rb:293:110: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    let!(:new_pq1) { create(:not_responded_pq, uin: '20001', action_officer_allocated_at: Time.now + 3.hours)}
                                                                                                             ^
spec/models/pq_spec.rb:294:96: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    let!(:new_pq2) { create(:not_responded_pq, uin: 'HL01',  action_officer_allocated_at: Time.now + 5.hours)}
                                                                                               ^^^
spec/models/pq_spec.rb:294:110: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    let!(:new_pq2) { create(:not_responded_pq, uin: 'HL01',  action_officer_allocated_at: Time.now + 5.hours)}
                                                                                                             ^
spec/models/pq_spec.rb:295:96: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    let!(:new_pq3) { create(:not_responded_pq, uin: '15000', action_officer_allocated_at: Time.now + 5.hours)}
                                                                                               ^^^
spec/models/pq_spec.rb:295:110: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    let!(:new_pq3) { create(:not_responded_pq, uin: '15000', action_officer_allocated_at: Time.now + 5.hours)}
                                                                                                             ^
spec/models/pq_spec.rb:297:39: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    subject { Pq.allocated_since(Time.now) }
                                      ^^^
spec/models/pq_spec.rb:304:41: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
      expect(subject.map(&:uin)).to eql(%w(15000 20001 HL01))
                                        ^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:406:46: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      it { is_expected.not_to be_commissioned}
                                             ^
spec/models/pq_spec.rb:414:46: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      it { is_expected.not_to be_commissioned}
                                             ^
spec/models/pq_spec.rb:423:42: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      it { is_expected.to be_commissioned}
                                         ^
spec/models/pq_spec.rb:453:56: C: Layout/SpaceAfterComma: Space missing after comma.
    subject.update(draft_answer_received: Date.new(2014,9,4))
                                                       ^
spec/models/pq_spec.rb:453:58: C: Layout/SpaceAfterComma: Space missing after comma.
    subject.update(draft_answer_received: Date.new(2014,9,4))
                                                         ^
spec/models/pq_spec.rb:460:24: C: Layout/SpaceAfterComma: Space missing after comma.
    dar = Date.new(2014,9,4)
                       ^
spec/models/pq_spec.rb:460:26: C: Layout/SpaceAfterComma: Space missing after comma.
    dar = Date.new(2014,9,4)
                         ^
spec/models/pq_spec.rb:472:18: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      subject.uin=nil
                 ^
spec/models/pq_spec.rb:477:32: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      subject.raising_member_id=nil
                               ^
spec/models/pq_spec.rb:482:23: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      subject.question=nil
                      ^
spec/models/pq_spec.rb:487:36: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      subject.update(uin: ' hl1234' )
                                   ^
spec/models/pq_spec.rb:490:36: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      subject.update(uin: 'hl1234 ' )
                                   ^
spec/models/pq_spec.rb:493:37: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      subject.update(uin: ' hl1 234' )
                                    ^
spec/models/pq_spec.rb:500:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      let(:pq) do ...
      ^^^^^^^^^^^
spec/models/pq_spec.rb:510:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      it 'should be valid if none accepted' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:515:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      it 'should be valid if only one accepted' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:524:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      it 'should not be valid if multiple accepted but only one of those is active' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:535:68: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        expect(pq.action_officers.order(:id).map(&:deleted)).to eq( [ true, true, false ] )
                                                                   ^
spec/models/pq_spec.rb:535:70: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
        expect(pq.action_officers.order(:id).map(&:deleted)).to eq( [ true, true, false ] )
                                                                     ^
spec/models/pq_spec.rb:535:88: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
        expect(pq.action_officers.order(:id).map(&:deleted)).to eq( [ true, true, false ] )
                                                                                       ^
spec/models/pq_spec.rb:535:90: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        expect(pq.action_officers.order(:id).map(&:deleted)).to eq( [ true, true, false ] )
                                                                                         ^
spec/models/pq_spec.rb:538:41: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
        expect(pq.errors[:base]).to eq([ 'Unable to have two action officers accepted on the same question'])
                                        ^
spec/models/pq_spec.rb:541:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pq_spec.rb:542:7: C: Layout/IndentationConsistency: Inconsistent indentation detected.
      it 'should not be valid if multiple accepted active' do ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pq_spec.rb:547:68: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        expect(pq.action_officers.order(:id).map(&:deleted)).to eq( [ false, false, false ] )
                                                                   ^
spec/models/pq_spec.rb:547:70: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
        expect(pq.action_officers.order(:id).map(&:deleted)).to eq( [ false, false, false ] )
                                                                     ^
spec/models/pq_spec.rb:547:90: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
        expect(pq.action_officers.order(:id).map(&:deleted)).to eq( [ false, false, false ] )
                                                                                         ^
spec/models/pq_spec.rb:547:92: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        expect(pq.action_officers.order(:id).map(&:deleted)).to eq( [ false, false, false ] )
                                                                                           ^
spec/models/pq_spec.rb:550:41: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
        expect(pq.errors[:base]).to eq([ 'Unable to have two action officers accepted on the same question'])
                                        ^
spec/models/pq_spec.rb:556:31: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      subject.finance_interest=true
                              ^
spec/models/pq_spec.rb:558:31: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
      subject.finance_interest=false
                              ^
spec/models/directorate_spec.rb:15:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	let(:dir) {build(:directorate)}
^
spec/models/directorate_spec.rb:15:1: C: Layout/Tab: Tab detected.
	let(:dir) {build(:directorate)}
^
spec/models/directorate_spec.rb:15:13: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
	let(:dir) {build(:directorate)}
            ^
spec/models/directorate_spec.rb:15:32: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
	let(:dir) {build(:directorate)}
                               ^
spec/models/directorate_spec.rb:17:1: C: Layout/Tab: Tab detected.
	it { should validate_presence_of(:name) }
^
spec/models/directorate_spec.rb:19:1: C: Layout/Tab: Tab detected.
	it 'should pass factory build' do
^
spec/models/directorate_spec.rb:20:1: C: Layout/Tab: Tab detected.
		expect(dir).to be_valid
^^
spec/models/directorate_spec.rb:20:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		expect(dir).to be_valid
 ^
spec/models/directorate_spec.rb:21:1: C: Layout/Tab: Tab detected.
	end
^
spec/models/directorate_spec.rb:23:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  describe "associations" do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/directorate_spec.rb:23:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "associations" do
           ^^^^^^^^^^^^^^
spec/models/directorate_spec.rb:24:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have a divisions collection" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/action_officers_pq_spec.rb:47:35: C: Style/Semicolon: Do not use semicolons to terminate expressions.
      subject.response = :accepted;
                                  ^
spec/models/action_officers_pq_spec.rb:57:5: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    {awaiting: :awaiting_response, accepted: :accepted, rejected: :rejected}.each do |state, check|
    ^
spec/models/action_officers_pq_spec.rb:57:76: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    {awaiting: :awaiting_response, accepted: :accepted, rejected: :rejected}.each do |state, check|
                                                                           ^
spec/models/action_officers_pq_spec.rb:60:29: C: Style/Send: Prefer Object#__send__ or Object#public_send to send.
        it { is_expected.to send("be_#{check}") }
                            ^^^^
spec/models/action_officers_pq_spec.rb:63:15: W: Lint/InterpolationCheck: Interpolation in single quoted string detected. Use double quoted strings if you need interpolation.
      context 'when not #{state}' do
              ^^^^^^^^^^^^^^^^^^^
spec/models/action_officers_pq_spec.rb:65:33: C: Style/Send: Prefer Object#__send__ or Object#public_send to send.
        it { is_expected.not_to send("be_#{check}") }
                                ^^^^
spec/models/minister_spec.rb:22:63: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  it { should accept_nested_attributes_for(:minister_contacts)}
                                                              ^
spec/models/minister_spec.rb:36:9: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
        minister_contact1.email,
        ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/minister_spec.rb:38:7: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
      ])
      ^
spec/models/minister_spec.rb:52:49: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      let(:minister) { create(:deleted_minister)}
                                                ^
spec/models/action_officer_spec.rb:20:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	let(:officer) {build(:action_officer)}
^
spec/models/action_officer_spec.rb:20:1: C: Layout/Tab: Tab detected.
	let(:officer) {build(:action_officer)}
^
spec/models/action_officer_spec.rb:20:17: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
	let(:officer) {build(:action_officer)}
                ^
spec/models/action_officer_spec.rb:20:39: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
	let(:officer) {build(:action_officer)}
                                      ^
spec/models/action_officer_spec.rb:22:1: C: Layout/Tab: Tab detected.
	it 'should pass factory build' do
^
spec/models/action_officer_spec.rb:23:1: C: Layout/Tab: Tab detected.
		expect(officer).to be_valid
^^
spec/models/action_officer_spec.rb:23:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		expect(officer).to be_valid
 ^
spec/models/action_officer_spec.rb:24:1: C: Layout/Tab: Tab detected.
	end
^
spec/models/action_officer_spec.rb:26:1: C: Layout/Tab: Tab detected.
	it 'should have a deputy director' do
^
spec/models/action_officer_spec.rb:27:1: C: Layout/Tab: Tab detected.
		officer.deputy_director_id = nil
^^
spec/models/action_officer_spec.rb:27:3: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
		officer.deputy_director_id = nil
  
spec/models/action_officer_spec.rb:28:1: C: Layout/Tab: Tab detected.
		expect(officer).to be_invalid
^^
spec/models/action_officer_spec.rb:29:3: C: Layout/BlockAlignment: end at 29, 2 is not aligned with it 'should have a deputy director' do at 26, 1.
  end
  ^^^
spec/models/action_officer_spec.rb:31:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  it 'should have a press desk' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/action_officer_spec.rb:36:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  it 'should strip whitespace from emails' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/action_officer_spec.rb:37:25: C: Layout/SpaceAfterColon: Space missing after colon.
    officer.update(email:' action.officer@new.email.com')
                        ^
spec/models/action_officer_spec.rb:41:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  describe "associations" do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/action_officer_spec.rb:41:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "associations" do
           ^^^^^^^^^^^^^^
spec/models/action_officer_spec.rb:42:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have a deputy director attribute" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/action_officer_spec.rb:46:1: C: Layout/Tab: Tab detected.
		it 'should have a collection of assignments' do
^^
spec/models/action_officer_spec.rb:46:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
		it 'should have a collection of assignments' do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/action_officer_spec.rb:48:5: C: Layout/BlockAlignment: end at 48, 4 is not aligned with it 'should have a collection of assignments' do at 46, 2.
    end
    ^^^
spec/models/press_desk_spec.rb:15:16: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:pdesk) {build(:press_desk)}
               ^
spec/models/press_desk_spec.rb:15:34: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:pdesk) {build(:press_desk)}
                                 ^
spec/models/press_desk_spec.rb:27:5: W: Lint/UselessAssignment: Useless assignment to variable - pdesk.
    pdesk = create(:press_desk, name: 'Finance desk')
    ^^^^^
spec/models/press_desk_spec.rb:39:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/press_desk_spec.rb:47:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "associations" do
           ^^^^^^^^^^^^^^
spec/models/press_desk_spec.rb:48:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have a collection of press officers" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/commission_form_spec.rb:13:78: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      it { is_expected.to include('Please provide question id to commission')}
                                                                             ^
spec/models/commission_form_spec.rb:17:70: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      it { is_expected.to include('Please select answering minister')}
                                                                     ^
spec/models/commission_form_spec.rb:21:79: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      it { is_expected.to include('Please select at least one action officer')}
                                                                              ^
spec/models/commission_form_spec.rb:25:68: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      let(:form) { build(:commission_form, action_officer_id: [''])}
                                                                   ^
spec/models/commission_form_spec.rb:26:79: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      it { is_expected.to include('Please select at least one action officer')}
                                                                              ^
spec/models/commission_form_spec.rb:30:67: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      it { is_expected.to include('Please choose date for answer')}
                                                                  ^
spec/models/commission_form_spec.rb:34:69: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      it { is_expected.to include('Please choose internal deadline')}
                                                                    ^
spec/models/commission_form_spec.rb:38:157: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      let(:form) { build(:commission_form, pq_id: 1, minister_id: 1, action_officer_id: [1], date_for_answer: '20/10/2014', internal_deadline: '14/10/2014')}
                                                                                                                                                            ^
spec/models/pq_followup_spec.rb:4:1: C: Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
spec/models/pq_followup_spec.rb:4:1: C: Style/InlineComment: Avoid trailing inline comments.
=begin ...
^^^^^^
spec/models/pq_followup_spec.rb:10:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:directorate) {create(:directorate, name: 'This Directorate', id: 1+rand(10))}
                     ^
spec/models/pq_followup_spec.rb:10:73: C: Style/RandomWithOffset: Prefer ranges when generating random numbers instead of integers with offsets.
  let(:directorate) {create(:directorate, name: 'This Directorate', id: 1+rand(10))}
                                                                        ^^^^^^^^^^
spec/models/pq_followup_spec.rb:10:74: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
  let(:directorate) {create(:directorate, name: 'This Directorate', id: 1+rand(10))}
                                                                         ^
spec/models/pq_followup_spec.rb:10:84: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:directorate) {create(:directorate, name: 'This Directorate', id: 1+rand(10))}
                                                                                   ^
spec/models/pq_followup_spec.rb:11:19: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:division) {create(:division,name: 'Division', directorate_id: directorate.id, id: 1+rand(10))}
                  ^
spec/models/pq_followup_spec.rb:11:35: C: Layout/SpaceAfterComma: Space missing after comma.
  let(:division) {create(:division,name: 'Division', directorate_id: directorate.id, id: 1+rand(10))}
                                  ^
spec/models/pq_followup_spec.rb:11:90: C: Style/RandomWithOffset: Prefer ranges when generating random numbers instead of integers with offsets.
  let(:division) {create(:division,name: 'Division', directorate_id: directorate.id, id: 1+rand(10))}
                                                                                         ^^^^^^^^^^
spec/models/pq_followup_spec.rb:11:91: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
  let(:division) {create(:division,name: 'Division', directorate_id: directorate.id, id: 1+rand(10))}
                                                                                          ^
spec/models/pq_followup_spec.rb:11:101: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:division) {create(:division,name: 'Division', directorate_id: directorate.id, id: 1+rand(10))}
                                                                                                    ^
spec/models/pq_followup_spec.rb:12:99: C: Style/RandomWithOffset: Prefer ranges when generating random numbers instead of integers with offsets.
  let(:deputy_director) { create(:deputy_director, name: 'dd name', division_id: division.id, id: 1+rand(10))}
                                                                                                  ^^^^^^^^^^
spec/models/pq_followup_spec.rb:12:100: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
  let(:deputy_director) { create(:deputy_director, name: 'dd name', division_id: division.id, id: 1+rand(10))}
                                                                                                   ^
spec/models/pq_followup_spec.rb:12:110: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:deputy_director) { create(:deputy_director, name: 'dd name', division_id: division.id, id: 1+rand(10))}
                                                                                                             ^
spec/models/pq_followup_spec.rb:15:66: C: Layout/SpaceAfterComma: Space missing after comma.
  let(:pq) { create(:pq, uin: 'HL789', question: 'test question?',minister:minister, house_name:'commons', i_will_write:true) }
                                                                 ^
spec/models/pq_followup_spec.rb:15:75: C: Layout/SpaceAfterColon: Space missing after colon.
  let(:pq) { create(:pq, uin: 'HL789', question: 'test question?',minister:minister, house_name:'commons', i_will_write:true) }
                                                                          ^
spec/models/pq_followup_spec.rb:15:96: C: Layout/SpaceAfterColon: Space missing after colon.
  let(:pq) { create(:pq, uin: 'HL789', question: 'test question?',minister:minister, house_name:'commons', i_will_write:true) }
                                                                                               ^
spec/models/pq_followup_spec.rb:15:120: C: Layout/SpaceAfterColon: Space missing after colon.
  let(:pq) { create(:pq, uin: 'HL789', question: 'test question?',minister:minister, house_name:'commons', i_will_write:true) }
                                                                                                                       ^
spec/models/pq_followup_spec.rb:22:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pq_followup_spec.rb:24:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/pq_followup_spec.rb:33:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/token_spec.rb:18:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
describe Token, :type => :model do
                ^^^^^^^^
spec/models/token_spec.rb:19:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/token_spec.rb:21:63: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    it { should validate_inclusion_of(:acknowledged).in_array( ['accept', 'reject', nil] ) }
                                                              ^
spec/models/token_spec.rb:21:89: C: Layout/SpaceInsideParens: Space inside parentheses detected.
    it { should validate_inclusion_of(:acknowledged).in_array( ['accept', 'reject', nil] ) }
                                                                                        ^
spec/models/token_spec.rb:24:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/token_spec.rb:48:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/token_spec.rb:51:36: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      t = FactoryBot.build(:token, :acknowledged => 'accept')
                                   ^^^^^^^^^^^^^^^^
spec/models/token_spec.rb:56:36: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      t = FactoryBot.build(:token, :acknowledged => 'reject')
                                   ^^^^^^^^^^^^^^^^
spec/models/token_spec.rb:66:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/token_spec.rb:68:17: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    let(:entity)  { "watchlist-#{Date.today.strftime('%d/%m/%Y')} 11:37" }
                ^
spec/models/token_spec.rb:68:39: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    let(:entity)  { "watchlist-#{Date.today.strftime('%d/%m/%Y')} 11:37" }
                                      ^^^^^
spec/models/token_spec.rb:69:17: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    let!(:token)   { FactoryBot.create :token, path: '/watchlist/dashboard', entity: entity }
                ^^
spec/models/token_spec.rb:81:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/token_spec.rb:84:27: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
      start_of_day = Time.now.beginning_of_day
                          ^^^
spec/models/token_spec.rb:96:44: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      expect(Token.assignment_stats).to eq( {total: 6, ack: 2, open: 4,  pctg: 33.33 } )
                                           ^
spec/models/token_spec.rb:96:45: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      expect(Token.assignment_stats).to eq( {total: 6, ack: 2, open: 4,  pctg: 33.33 } )
                                            ^
spec/models/token_spec.rb:96:45: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
      expect(Token.assignment_stats).to eq( {total: 6, ack: 2, open: 4,  pctg: 33.33 } )
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/token_spec.rb:96:72: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      expect(Token.assignment_stats).to eq( {total: 6, ack: 2, open: 4,  pctg: 33.33 } )
                                                                       ^
spec/models/token_spec.rb:96:87: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      expect(Token.assignment_stats).to eq( {total: 6, ack: 2, open: 4,  pctg: 33.33 } )
                                                                                      ^
spec/models/token_spec.rb:99:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/models/pqa_import_run_spec.rb:18:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:19:24: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
describe PqaImportRun, :type => :model do
                       ^^^^^^^^
spec/models/pqa_import_run_spec.rb:20:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/pqa_import_run_spec.rb:22:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/pqa_import_run_spec.rb:35:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      pir = FactoryBot.build(:pqa_import_run, status: "Failure")
                                                      ^^^^^^^^^
spec/models/pqa_import_run_spec.rb:40:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      pir = FactoryBot.build(:pqa_import_run, status: "OK_with_errors")
                                                      ^^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:43:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/models/pqa_import_run_spec.rb:46:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:49:27: C: Rails/TimeZone: Do not use Time.new without zone. Use one of Time.zone.local, Time.current, Time.new.in_time_zone, Time.new.utc, Time.new.getlocal, Time.new.xmlschema, Time.new.iso8601, Time.new.jisx0301, Time.new.rfc3339, Time.new.httpdate, Time.new.to_i, Time.new.to_f instead.
      Timecop.freeze(Time.new(2015, 5, 7, 11, 15, 45)) do
                          ^^^
spec/models/pqa_import_run_spec.rb:57:16: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      times = [  10.seconds.ago, 1.day.ago, 2.days.ago ]
               ^
spec/models/pqa_import_run_spec.rb:57:16: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      times = [  10.seconds.ago, 1.day.ago, 2.days.ago ]
               ^^
spec/models/pqa_import_run_spec.rb:57:55: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      times = [  10.seconds.ago, 1.day.ago, 2.days.ago ]
                                                      ^
spec/models/pqa_import_run_spec.rb:68:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          10.seconds.ago  => 'Failure',
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:69:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          2.minutes.ago   => 'OK_with_errors',
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:70:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          5.minutes.ago   => 'OK',
          ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:71:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          1.day.ago       => 'OK',
          ^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:72:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          3.days.ago      => 'Failure'}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:72:39: C: Layout/MultilineHashBraceLayout: Closing hash brace must be on the line after the last hash element when opening brace is on a separate line from the first hash element.
          3.days.ago      => 'Failure'}
                                      ^
spec/models/pqa_import_run_spec.rb:72:39: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
          3.days.ago      => 'Failure'}
                                      ^
spec/models/pqa_import_run_spec.rb:81:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/models/pqa_import_run_spec.rb:84:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:87:26: C: Rails/TimeZone: Do not use Time.new without zone. Use one of Time.zone.local, Time.current, Time.new.in_time_zone, Time.new.utc, Time.new.getlocal, Time.new.xmlschema, Time.new.iso8601, Time.new.jisx0301, Time.new.rfc3339, Time.new.httpdate, Time.new.to_i, Time.new.to_f instead.
      freeze_time = Time.new(2015, 5, 7, 10, 1, 33)
                         ^^^
spec/models/pqa_import_run_spec.rb:100:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:102:26: C: Rails/TimeZone: Do not use Time.new without zone. Use one of Time.zone.local, Time.current, Time.new.in_time_zone, Time.new.utc, Time.new.getlocal, Time.new.xmlschema, Time.new.iso8601, Time.new.jisx0301, Time.new.rfc3339, Time.new.httpdate, Time.new.to_i, Time.new.to_f instead.
      freeze_time = Time.new(2015, 5, 7, 10, 1, 33)
                         ^^^
spec/models/pqa_import_run_spec.rb:112:40: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      expect(pir.error_messages).to eq( {"UIN1234" => "Invalid Record", "UIN666" => "Really, really invalid"} )
                                       ^
spec/models/pqa_import_run_spec.rb:112:41: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      expect(pir.error_messages).to eq( {"UIN1234" => "Invalid Record", "UIN666" => "Really, really invalid"} )
                                        ^
spec/models/pqa_import_run_spec.rb:112:41: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
      expect(pir.error_messages).to eq( {"UIN1234" => "Invalid Record", "UIN666" => "Really, really invalid"} )
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:112:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(pir.error_messages).to eq( {"UIN1234" => "Invalid Record", "UIN666" => "Really, really invalid"} )
                                         ^^^^^^^^^
spec/models/pqa_import_run_spec.rb:112:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(pir.error_messages).to eq( {"UIN1234" => "Invalid Record", "UIN666" => "Really, really invalid"} )
                                                      ^^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:112:73: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(pir.error_messages).to eq( {"UIN1234" => "Invalid Record", "UIN666" => "Really, really invalid"} )
                                                                        ^^^^^^^^
spec/models/pqa_import_run_spec.rb:112:85: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(pir.error_messages).to eq( {"UIN1234" => "Invalid Record", "UIN666" => "Really, really invalid"} )
                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:112:109: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      expect(pir.error_messages).to eq( {"UIN1234" => "Invalid Record", "UIN666" => "Really, really invalid"} )
                                                                                                            ^
spec/models/pqa_import_run_spec.rb:112:110: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      expect(pir.error_messages).to eq( {"UIN1234" => "Invalid Record", "UIN666" => "Really, really invalid"} )
                                                                                                             ^
spec/models/pqa_import_run_spec.rb:116:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:119:26: C: Rails/TimeZone: Do not use Time.new without zone. Use one of Time.zone.local, Time.current, Time.new.in_time_zone, Time.new.utc, Time.new.getlocal, Time.new.xmlschema, Time.new.iso8601, Time.new.jisx0301, Time.new.rfc3339, Time.new.httpdate, Time.new.to_i, Time.new.to_f instead.
      freeze_time = Time.new(2015, 5, 7, 10, 1, 33)
                         ^^^
spec/models/pqa_import_run_spec.rb:133:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:134:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:135:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:137:22: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    let(:freeze_time)      { Time.utc(2015, 5, 11, 9, 33, 45) }
                     ^^^^^
spec/models/pqa_import_run_spec.rb:140:14: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/models/pqa_import_run_spec.rb:145:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:147:118: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      FactoryBot.create(:pqa_import_run, start_time: 1.year.ago, end_time: 1.year.ago, num_created: 3, num_updated: 4 )
                                                                                                                     ^
spec/models/pqa_import_run_spec.rb:155:120: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        FactoryBot.create(:pqa_import_run, start_time: 1.hour.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4 )       # today
                                                                                                                       ^
spec/models/pqa_import_run_spec.rb:155:129: C: Style/InlineComment: Avoid trailing inline comments.
        FactoryBot.create(:pqa_import_run, start_time: 1.hour.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4 )       # today
                                                                                                                                ^^^^^^^
spec/models/pqa_import_run_spec.rb:156:122: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        FactoryBot.create(:pqa_import_run, start_time: 2.hours.ago, end_time: 2.hours.ago, num_created: 2, num_updated: 5 )     # today
                                                                                                                         ^
spec/models/pqa_import_run_spec.rb:156:129: C: Style/InlineComment: Avoid trailing inline comments.
        FactoryBot.create(:pqa_import_run, start_time: 2.hours.ago, end_time: 2.hours.ago, num_created: 2, num_updated: 5 )     # today
                                                                                                                                ^^^^^^^
spec/models/pqa_import_run_spec.rb:157:124: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        FactoryBot.create(:pqa_import_run, start_time: 25.hours.ago, end_time: 25.hours.ago, num_created: 3, num_updated: 4 )   # this week
                                                                                                                           ^
spec/models/pqa_import_run_spec.rb:157:129: C: Style/InlineComment: Avoid trailing inline comments.
        FactoryBot.create(:pqa_import_run, start_time: 25.hours.ago, end_time: 25.hours.ago, num_created: 3, num_updated: 4 )   # this week
                                                                                                                                ^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:158:56: C: Rails/PluralizationGrammar: Prefer 72.hours.
        FactoryBot.create(:pqa_import_run, start_time: 72.hour.ago, end_time: 72.hour.ago, num_created: 3, num_updated: 4 )     # this week
                                                       ^^^^^^^
spec/models/pqa_import_run_spec.rb:158:79: C: Rails/PluralizationGrammar: Prefer 72.hours.
        FactoryBot.create(:pqa_import_run, start_time: 72.hour.ago, end_time: 72.hour.ago, num_created: 3, num_updated: 4 )     # this week
                                                                              ^^^^^^^
spec/models/pqa_import_run_spec.rb:158:122: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        FactoryBot.create(:pqa_import_run, start_time: 72.hour.ago, end_time: 72.hour.ago, num_created: 3, num_updated: 4 )     # this week
                                                                                                                         ^
spec/models/pqa_import_run_spec.rb:158:129: C: Style/InlineComment: Avoid trailing inline comments.
        FactoryBot.create(:pqa_import_run, start_time: 72.hour.ago, end_time: 72.hour.ago, num_created: 3, num_updated: 4 )     # this week
                                                                                                                                ^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:159:122: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        FactoryBot.create(:pqa_import_run, start_time: 9.days.ago, end_time: 9.days.ago, num_created: 23, num_updated: 14 )     # this week
                                                                                                                         ^
spec/models/pqa_import_run_spec.rb:159:129: C: Style/InlineComment: Avoid trailing inline comments.
        FactoryBot.create(:pqa_import_run, start_time: 9.days.ago, end_time: 9.days.ago, num_created: 23, num_updated: 14 )     # this week
                                                                                                                                ^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:160:123: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        FactoryBot.create(:pqa_import_run, start_time: 10.days.ago, end_time: 10.days.ago, num_created: 35, num_updated: 7 )     # this week
                                                                                                                          ^
spec/models/pqa_import_run_spec.rb:160:125: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        FactoryBot.create(:pqa_import_run, start_time: 10.days.ago, end_time: 10.days.ago, num_created: 35, num_updated: 7 )     # this week
                                                                                                                            ^^^^
spec/models/pqa_import_run_spec.rb:160:130: C: Style/InlineComment: Avoid trailing inline comments.
        FactoryBot.create(:pqa_import_run, start_time: 10.days.ago, end_time: 10.days.ago, num_created: 35, num_updated: 7 )     # this week
                                                                                                                                 ^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:171:132: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      FactoryBot.create(:pqa_import_run, start_time: 1.hour.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'OK' )       # today, valid
                                                                                                                                   ^
spec/models/pqa_import_run_spec.rb:171:134: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      FactoryBot.create(:pqa_import_run, start_time: 1.hour.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'OK' )       # today, valid
                                                                                                                                     ^^^^^^
spec/models/pqa_import_run_spec.rb:171:141: C: Style/InlineComment: Avoid trailing inline comments.
      FactoryBot.create(:pqa_import_run, start_time: 1.hour.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'OK' )       # today, valid
                                                                                                                                            ^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:176:131: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      FactoryBot.create(:pqa_import_run, start_time: 1.day.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'OK' )       # yesterday, valid
                                                                                                                                  ^
spec/models/pqa_import_run_spec.rb:176:133: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      FactoryBot.create(:pqa_import_run, start_time: 1.day.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'OK' )       # yesterday, valid
                                                                                                                                    ^^^^^^
spec/models/pqa_import_run_spec.rb:176:140: C: Style/InlineComment: Avoid trailing inline comments.
      FactoryBot.create(:pqa_import_run, start_time: 1.day.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'OK' )       # yesterday, valid
                                                                                                                                           ^^^^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:181:137: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      FactoryBot.create(:pqa_import_run, start_time: 1.hour.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'Failure' )       # today, failed
                                                                                                                                        ^
spec/models/pqa_import_run_spec.rb:181:139: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      FactoryBot.create(:pqa_import_run, start_time: 1.hour.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'Failure' )       # today, failed
                                                                                                                                          ^^^^^^
spec/models/pqa_import_run_spec.rb:181:146: C: Style/InlineComment: Avoid trailing inline comments.
      FactoryBot.create(:pqa_import_run, start_time: 1.hour.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'Failure' )       # today, failed
                                                                                                                                                 ^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:186:144: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      FactoryBot.create(:pqa_import_run, start_time: 1.hour.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'OK_with_errors' )       # today, failed
                                                                                                                                               ^
spec/models/pqa_import_run_spec.rb:186:146: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      FactoryBot.create(:pqa_import_run, start_time: 1.hour.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'OK_with_errors' )       # today, failed
                                                                                                                                                 ^^^^^^
spec/models/pqa_import_run_spec.rb:186:153: C: Style/InlineComment: Avoid trailing inline comments.
      FactoryBot.create(:pqa_import_run, start_time: 1.hour.ago, end_time: 1.hour.ago, num_created: 3, num_updated: 4, status: 'OK_with_errors' )       # today, failed
                                                                                                                                                        ^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:189:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/models/pqa_import_run_spec.rb:193:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:194:18: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
def times_equal?(t1, t2)
                 ^^
spec/models/pqa_import_run_spec.rb:194:22: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
def times_equal?(t1, t2)
                     ^^
spec/models/pqa_import_run_spec.rb:195:3: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using t1.to_f, use stricter Float(t1).
  t1.to_f.round(2) == t2.to_f.round(2)
  ^^^^^^^
spec/models/pqa_import_run_spec.rb:195:23: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using t2.to_f, use stricter Float(t2).
  t1.to_f.round(2) == t2.to_f.round(2)
                      ^^^^^^^
spec/models/pqa_import_run_spec.rb:198:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:199:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:200:1: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
def all_ok_report
^^^
spec/models/pqa_import_run_spec.rb:202:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    total:    18,
    ^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:203:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    created:  15,
    ^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:204:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    updated:  3,
    ^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:205:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    errors:   {}
    ^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:209:1: C: Layout/EmptyLines: Extra blank line detected.
spec/models/pqa_import_run_spec.rb:210:1: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
def ok_with_errors_report
^^^
spec/models/pqa_import_run_spec.rb:212:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    total:    22,
    ^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:213:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    created:  7,
    ^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:214:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    updated:  15,
    ^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:215:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    errors:   { ...
    ^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:216:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "UIN1234" => "Invalid Record",
      ^^^^^^^^^
spec/models/pqa_import_run_spec.rb:216:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "UIN1234" => "Invalid Record",
                   ^^^^^^^^^^^^^^^^
spec/models/pqa_import_run_spec.rb:217:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "UIN666" => "Really, really invalid"
      ^^^^^^^^
spec/models/pqa_import_run_spec.rb:217:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "UIN666" => "Really, really invalid"
                  ^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/press_officer_spec.rb:17:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	let(:pofficer) {build(:press_officer)}
^
spec/models/press_officer_spec.rb:17:1: C: Layout/Tab: Tab detected.
	let(:pofficer) {build(:press_officer)}
^
spec/models/press_officer_spec.rb:17:18: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
	let(:pofficer) {build(:press_officer)}
                 ^
spec/models/press_officer_spec.rb:17:39: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
	let(:pofficer) {build(:press_officer)}
                                      ^
spec/models/press_officer_spec.rb:19:1: C: Layout/Tab: Tab detected.
	it { should validate_presence_of(:name) }
^
spec/models/press_officer_spec.rb:21:1: C: Layout/Tab: Tab detected.
	it 'should pass factory build' do
^
spec/models/press_officer_spec.rb:22:1: C: Layout/Tab: Tab detected.
		expect(pofficer).to be_valid
^^
spec/models/press_officer_spec.rb:22:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		expect(pofficer).to be_valid
 ^
spec/models/press_officer_spec.rb:23:1: C: Layout/Tab: Tab detected.
	end
^
spec/models/press_officer_spec.rb:25:1: C: Layout/Tab: Tab detected.
	it 'should have a press desk' do
^
spec/models/press_officer_spec.rb:26:1: C: Layout/Tab: Tab detected.
		pofficer.press_desk_id = nil
^^
spec/models/press_officer_spec.rb:26:3: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
		pofficer.press_desk_id = nil
  
spec/models/press_officer_spec.rb:27:1: C: Layout/Tab: Tab detected.
		expect(pofficer).to be_invalid
^^
spec/models/press_officer_spec.rb:28:3: C: Layout/BlockAlignment: end at 28, 2 is not aligned with it 'should have a press desk' do at 25, 1.
  end
  ^^^
spec/models/press_officer_spec.rb:30:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  describe "associations" do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/press_officer_spec.rb:30:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "associations" do
           ^^^^^^^^^^^^^^
spec/models/early_bird_member_spec.rb:4:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	let(:member) {build(:early_bird_member)}
^
spec/models/early_bird_member_spec.rb:4:1: C: Layout/Tab: Tab detected.
	let(:member) {build(:early_bird_member)}
^
spec/models/early_bird_member_spec.rb:4:16: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
	let(:member) {build(:early_bird_member)}
               ^
spec/models/early_bird_member_spec.rb:4:41: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
	let(:member) {build(:early_bird_member)}
                                        ^
spec/models/early_bird_member_spec.rb:6:1: C: Layout/Tab: Tab detected.
	describe 'validation' do
^
spec/models/early_bird_member_spec.rb:7:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/early_bird_member_spec.rb:8:1: C: Layout/Tab: Tab detected.
		it 'should pass onfactory build' do
^^
spec/models/early_bird_member_spec.rb:8:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		it 'should pass onfactory build' do
 ^
spec/models/early_bird_member_spec.rb:9:1: C: Layout/Tab: Tab detected.
			expect(member).to be_valid
^^^
spec/models/early_bird_member_spec.rb:9:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			expect(member).to be_valid
  ^
spec/models/early_bird_member_spec.rb:10:1: C: Layout/Tab: Tab detected.
		end
^^
spec/models/early_bird_member_spec.rb:12:1: C: Layout/Tab: Tab detected.
		it 'should have a name' do
^^
spec/models/early_bird_member_spec.rb:13:1: C: Layout/Tab: Tab detected.
			member.name=nil
^^^
spec/models/early_bird_member_spec.rb:13:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			member.name=nil
  ^
spec/models/early_bird_member_spec.rb:13:15: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
			member.name=nil
              ^
spec/models/early_bird_member_spec.rb:14:1: C: Layout/Tab: Tab detected.
			expect(member).to be_invalid
^^^
spec/models/early_bird_member_spec.rb:15:1: C: Layout/Tab: Tab detected.
		end
^^
spec/models/early_bird_member_spec.rb:17:1: C: Layout/Tab: Tab detected.
		it 'should have a unique email' do
^^
spec/models/early_bird_member_spec.rb:18:1: C: Layout/Tab: Tab detected.
			member = create(:early_bird_member, name: 'Early Bird Member 1', email: 'member.one@earlybird.com')
^^^
spec/models/early_bird_member_spec.rb:18:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			member = create(:early_bird_member, name: 'Early Bird Member 1', email: 'member.one@earlybird.com')
  ^
spec/models/early_bird_member_spec.rb:18:4: W: Lint/UselessAssignment: Useless assignment to variable - member.
			member = create(:early_bird_member, name: 'Early Bird Member 1', email: 'member.one@earlybird.com')
   ^^^^^^
spec/models/early_bird_member_spec.rb:19:1: C: Layout/Tab: Tab detected.
			duplicate = build(:early_bird_member, name: 'Early Bird Member 2', email: 'member.one@earlybird.com')
^^^
spec/models/early_bird_member_spec.rb:20:1: C: Layout/Tab: Tab detected.
			expect(duplicate).to be_invalid
^^^
spec/models/early_bird_member_spec.rb:21:1: C: Layout/Tab: Tab detected.
		end
^^
spec/models/early_bird_member_spec.rb:22:1: C: Layout/Tab: Tab detected.
	end
^
spec/models/early_bird_member_spec.rb:23:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/models/watchlist_member_spec.rb:16:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	let(:member) {build(:watchlist_member)}
^
spec/models/watchlist_member_spec.rb:16:1: C: Layout/Tab: Tab detected.
	let(:member) {build(:watchlist_member)}
^
spec/models/watchlist_member_spec.rb:16:16: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
	let(:member) {build(:watchlist_member)}
               ^
spec/models/watchlist_member_spec.rb:16:40: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
	let(:member) {build(:watchlist_member)}
                                       ^
spec/models/watchlist_member_spec.rb:18:1: C: Layout/Tab: Tab detected.
	describe 'validation' do
^
spec/models/watchlist_member_spec.rb:19:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/watchlist_member_spec.rb:20:1: C: Layout/Tab: Tab detected.
		it 'should pass onfactory build' do
^^
spec/models/watchlist_member_spec.rb:20:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		it 'should pass onfactory build' do
 ^
spec/models/watchlist_member_spec.rb:21:1: C: Layout/Tab: Tab detected.
			expect(member).to be_valid
^^^
spec/models/watchlist_member_spec.rb:21:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			expect(member).to be_valid
  ^
spec/models/watchlist_member_spec.rb:22:1: C: Layout/Tab: Tab detected.
		end
^^
spec/models/watchlist_member_spec.rb:24:1: C: Layout/Tab: Tab detected.
		it 'should have a name' do
^^
spec/models/watchlist_member_spec.rb:25:1: C: Layout/Tab: Tab detected.
			member.name=nil
^^^
spec/models/watchlist_member_spec.rb:25:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			member.name=nil
  ^
spec/models/watchlist_member_spec.rb:25:15: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
			member.name=nil
              ^
spec/models/watchlist_member_spec.rb:26:1: C: Layout/Tab: Tab detected.
			expect(member).to be_invalid
^^^
spec/models/watchlist_member_spec.rb:27:1: C: Layout/Tab: Tab detected.
		end
^^
spec/models/watchlist_member_spec.rb:29:1: C: Layout/Tab: Tab detected.
		it 'should have a unique email' do
^^
spec/models/watchlist_member_spec.rb:30:1: C: Layout/Tab: Tab detected.
			member = create(:watchlist_member, name: 'Watchlist Member 1', email: 'member.one@watchlist.com')
^^^
spec/models/watchlist_member_spec.rb:30:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
			member = create(:watchlist_member, name: 'Watchlist Member 1', email: 'member.one@watchlist.com')
  ^
spec/models/watchlist_member_spec.rb:30:4: W: Lint/UselessAssignment: Useless assignment to variable - member.
			member = create(:watchlist_member, name: 'Watchlist Member 1', email: 'member.one@watchlist.com')
   ^^^^^^
spec/models/watchlist_member_spec.rb:31:1: C: Layout/Tab: Tab detected.
			duplicate = build(:watchlist_member, name: 'Watchlist Member 2', email: 'member.one@watchlist.com')
^^^
spec/models/watchlist_member_spec.rb:32:1: C: Layout/Tab: Tab detected.
			expect(duplicate).to be_invalid
^^^
spec/models/watchlist_member_spec.rb:33:1: C: Layout/Tab: Tab detected.
		end
^^
spec/models/watchlist_member_spec.rb:34:1: C: Layout/Tab: Tab detected.
	end
^
spec/models/email_spec.rb:23:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
describe Email, :type => :model do
                ^^^^^^^^
spec/models/email_spec.rb:34:55: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
  it { should validate_inclusion_of(:mailer).in_array(%w(DbSyncMailer ImportMailer PqMailer)) }
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/email_spec.rb:55:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/models/email_spec.rb:70:55: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
  it { should validate_inclusion_of(:status).in_array(%w(new sending sent failed abandoned)) }
                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/settings_spec.rb:11:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    describe '.from_env' do 
                           ^
spec/models/settings_spec.rb:19:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/models/settings_spec.rb:20:11: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
          Settings::PqRestApi.from_env
          
spec/models/settings_spec.rb:21:11: C: Layout/BlockAlignment: } at 21, 10 is not aligned with expect { at 19, 8.
          }.to raise_error RuntimeError, 'Cannot find environment variable PQ_REST_API_HOST. Please set it first'
          ^
spec/models/settings_spec.rb:65:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/models/minister_contact_spec.rb:21:61: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  it { should allow_value(Faker::Internet.email).for(:email)}
                                                            ^
spec/models/minister_contact_spec.rb:22:53: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  it { should_not allow_value('invalid').for(:email)}
                                                    ^
spec/models/User_spec.rb:1:1: C: Naming/FileName: The name of this source file (User_spec.rb) should use snake_case.
# == Schema Information
^
spec/models/User_spec.rb:37:15: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:user) {build(:user)}
              ^
spec/models/User_spec.rb:37:27: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:user) {build(:user)}
                          ^
spec/models/division_spec.rb:16:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	let(:div) { build(:division) }
^
spec/models/division_spec.rb:16:1: C: Layout/Tab: Tab detected.
	let(:div) { build(:division) }
^
spec/models/division_spec.rb:18:1: C: Layout/Tab: Tab detected.
	it { should validate_presence_of(:name) }
^
spec/models/division_spec.rb:20:1: C: Layout/Tab: Tab detected.
	it 'should pass factory build' do
^
spec/models/division_spec.rb:21:1: C: Layout/Tab: Tab detected.
		expect(div).to be_valid
^^
spec/models/division_spec.rb:21:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		expect(div).to be_valid
 ^
spec/models/division_spec.rb:22:1: C: Layout/Tab: Tab detected.
	end
^
spec/models/division_spec.rb:24:1: C: Layout/Tab: Tab detected.
	it 'should have a directorate' do
^
spec/models/division_spec.rb:25:1: C: Layout/Tab: Tab detected.
		div.directorate_id = nil
^^
spec/models/division_spec.rb:25:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		div.directorate_id = nil
 ^
spec/models/division_spec.rb:26:1: C: Layout/Tab: Tab detected.
		expect(div).to be_invalid
^^
spec/models/division_spec.rb:27:1: C: Layout/Tab: Tab detected.
	end
^
spec/models/division_spec.rb:29:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  describe "associations" do ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/division_spec.rb:29:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "associations" do
           ^^^^^^^^^^^^^^
spec/models/division_spec.rb:30:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should have a directorate attribute" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/division_spec.rb:34:4: C: Layout/Tab: Tab detected.
   	it 'should have a collection of Deputy directors' do
   ^
spec/models/division_spec.rb:35:4: C: Layout/IndentationWidth: Use 2 (not -1) spaces for indentation.
   expect(div).to respond_to(:deputy_directors)
   ^
spec/models/division_spec.rb:36:4: C: Layout/Tab: Tab detected.
   	end
   ^
spec/support/unit/question_factory.rb:3:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body beginning.
spec/support/unit/question_factory.rb:4:20: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def mk_pq(uin, h = {})
                   ^
spec/support/unit/question_factory.rb:10:32: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
        answer_submitted: Date.today,
                               ^^^^^
spec/support/unit/question_factory.rb:11:37: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
        draft_answer_received: Date.today,
                                    ^^^^^
spec/support/unit/question_factory.rb:11:42: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
        draft_answer_received: Date.today,
                                         ^
spec/support/csv_helpers.rb:2:14: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def date_s(d)
             ^
spec/support/csv_helpers.rb:3:5: W: Lint/UnderscorePrefixedVariableName: Do not use prefix _ for a variable that is used.
    _m = "%02d" % d.month
    ^^
spec/support/csv_helpers.rb:3:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    _m = "%02d" % d.month
         ^^^^^^
spec/support/csv_helpers.rb:3:17: C: Style/FormatString: Favor format over String#%.
    _m = "%02d" % d.month
                ^
spec/support/csv_helpers.rb:4:5: W: Lint/UnderscorePrefixedVariableName: Do not use prefix _ for a variable that is used.
    _d = "%02d" % d.day
    ^^
spec/support/csv_helpers.rb:4:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    _d = "%02d" % d.day
         ^^^^^^
spec/support/csv_helpers.rb:4:17: C: Style/FormatString: Favor format over String#%.
    _d = "%02d" % d.day
                ^
spec/support/csv_helpers.rb:8:18: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def decode_csv(s)
                 ^
spec/support/csv_helpers.rb:9:40: C: Style/SymbolProc: Pass &:to_hash as an argument to map instead of a block.
    CSV.new(s, headers: true).to_a.map do |row| ...
                                       ^^^^^^^^
spec/support/features/pq_helpers.rb:21:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        find("#internal-deadline input").set Date.tomorrow.strftime('%d/%m/%Y 12:00')
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/support/features/pq_helpers.rb:50:71: C: Layout/LeadingCommentSpace: Missing space after #.
      visit dashboard_path unless page.current_path == dashboard_path #Return page to dashboard
                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/support/features/pq_helpers.rb:50:71: C: Style/InlineComment: Avoid trailing inline comments.
      visit dashboard_path unless page.current_path == dashboard_path #Return page to dashboard
                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/support/features/pq_helpers.rb:58:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def expect_pq_to_be_in_state(uin, status)
    ^^^
spec/support/features/pq_helpers.rb:62:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def within_pq(uin)
    ^^^
spec/support/features/pq_helpers.rb:72:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      click_on "Save"
               ^^^^^^
spec/support/features/pq_helpers.rb:79:13: C: Layout/MultilineMethodCallIndentation: Use 2 (not 6) spaces for indenting an expression spanning multiple lines.
            .find(:option, text: option_text)
            ^^^^^
spec/support/features/pq_helpers.rb:80:13: C: Layout/MultilineMethodCallIndentation: Use 2 (not 6) spaces for indenting an expression spanning multiple lines.
            .select_option
            ^^^^^^^^^^^^^^
spec/support/features/pq_helpers.rb:90:30: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      find(css_sel).set(Date.today.strftime('%d/%m/%Y'))
                             ^^^^^
spec/support/features/pq_helpers.rb:92:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body end.
spec/support/features/email_helpers.rb:9:7: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
      if watchlist_a
      ^^
spec/support/features/email_helpers.rb:9:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if watchlist_a
      ^^
spec/support/sample_files.rb:7:3: W: Layout/DefEndAlignment: end at 7, 2 is not aligned with def at 5, 0.
  end
  ^^^
spec/support/db_helpers.rb:2:3: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line after module_function.
  module_function
  ^^^^^^^^^^^^^^^
spec/support/db_helpers.rb:17:3: C: Style/EmptyMethod: Put empty method definitions on a single line.
  def load_spec_fixtures ...
  ^^^^^^^^^^^^^^^^^^^^^^
spec/support/db_helpers.rb:38:6: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the start of the line where the left square bracket is.
     ['pq@pq.com', 'pq-user', User::ROLE_PQ_USER],
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/support/db_helpers.rb:42:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if u.new_record?
      ^^
spec/support/db_helpers.rb:49:11: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def pqs(n=4)
          ^
spec/support/db_helpers.rb:49:12: C: Layout/SpaceAroundEqualsInParameterDefault: Surrounding space missing in default value assignment.
  def pqs(n=4)
           ^
spec/support/db_helpers.rb:50:20: W: Lint/ShadowingOuterLocalVariable: Shadowing outer local variable - n.
    (1..n).map do |n|
                   ^
spec/support/db_helpers.rb:55:27: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
        tabled_date: Date.today,
                          ^^^^^
spec/support/db_helpers.rb:65:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'Chris Grayling', title: 'Secretary of State and Lord High Chancellor of Great Britain'},
      ^
spec/support/db_helpers.rb:65:101: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'Chris Grayling', title: 'Secretary of State and Lord High Chancellor of Great Britain'},
                                                                                                    ^
spec/support/db_helpers.rb:66:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'Damian Green (MP)', title: 'Minister of State'},
      ^
spec/support/db_helpers.rb:66:61: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'Damian Green (MP)', title: 'Minister of State'},
                                                            ^
spec/support/db_helpers.rb:67:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'Jeremy Wright (MP)', title: 'Parliamentary Under-Secretary of State; Minister for Prisons and Rehabilitation'},
      ^
spec/support/db_helpers.rb:67:124: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'Jeremy Wright (MP)', title: 'Parliamentary Under-Secretary of State; Minister for Prisons and Rehabilitation'},
                                                                                                                           ^
spec/support/db_helpers.rb:68:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'Shailesh Vara (MP)', title: 'Parliamentary Under-Secretary of State'},
      ^
spec/support/db_helpers.rb:68:83: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'Shailesh Vara (MP)', title: 'Parliamentary Under-Secretary of State'},
                                                                                  ^
spec/support/db_helpers.rb:69:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'Simon Hughes (MP)',  title: 'Minister of State for Justice & Civil Liberties'},
      ^
spec/support/db_helpers.rb:69:92: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'Simon Hughes (MP)',  title: 'Minister of State for Justice & Civil Liberties'},
                                                                                           ^
spec/support/db_helpers.rb:70:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'Lord Faulks QC',  title: 'Lord Faulks QC, Minister of State'}
      ^
spec/support/db_helpers.rb:70:75: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'Lord Faulks QC',  title: 'Lord Faulks QC, Minister of State'}
                                                                          ^
spec/support/db_helpers.rb:76:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'Finance Assurance and Commercial'},
      ^
spec/support/db_helpers.rb:76:48: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'Finance Assurance and Commercial'},
                                               ^
spec/support/db_helpers.rb:77:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'Criminal Justice'},
      ^
spec/support/db_helpers.rb:77:32: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'Criminal Justice'},
                               ^
spec/support/db_helpers.rb:78:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'Law and Access to Justice'},
      ^
spec/support/db_helpers.rb:78:41: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'Law and Access to Justice'},
                                        ^
spec/support/db_helpers.rb:79:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'NOMS'},
      ^
spec/support/db_helpers.rb:79:20: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'NOMS'},
                   ^
spec/support/db_helpers.rb:80:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'HMCTS'},
      ^
spec/support/db_helpers.rb:80:21: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'HMCTS'},
                    ^
spec/support/db_helpers.rb:81:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'LAA and Corporate Services'},
      ^
spec/support/db_helpers.rb:81:42: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'LAA and Corporate Services'},
                                         ^
spec/support/db_helpers.rb:81:43: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
      {name: 'LAA and Corporate Services'},
                                          ^
spec/support/db_helpers.rb:87:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[0], name: 'Corporate Finance'},
      ^
spec/support/db_helpers.rb:87:64: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[0], name: 'Corporate Finance'},
                                                               ^
spec/support/db_helpers.rb:88:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[0], name: 'Analytical Services'},
      ^
spec/support/db_helpers.rb:88:66: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[0], name: 'Analytical Services'},
                                                                 ^
spec/support/db_helpers.rb:89:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[0], name: 'Procurement'},
      ^
spec/support/db_helpers.rb:89:58: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[0], name: 'Procurement'},
                                                         ^
spec/support/db_helpers.rb:90:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[0], name: 'Change due diligence'},
      ^
spec/support/db_helpers.rb:90:67: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[0], name: 'Change due diligence'},
                                                                  ^
spec/support/db_helpers.rb:91:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[1], name: 'Sentencing and Rehabilitation Policy'},
      ^
spec/support/db_helpers.rb:91:83: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[1], name: 'Sentencing and Rehabilitation Policy'},
                                                                                  ^
spec/support/db_helpers.rb:92:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[1], name: 'Justice Reform'},
      ^
spec/support/db_helpers.rb:92:61: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[1], name: 'Justice Reform'},
                                                            ^
spec/support/db_helpers.rb:93:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[1], name: 'Transforming Rehabilitation'},
      ^
spec/support/db_helpers.rb:93:74: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[1], name: 'Transforming Rehabilitation'},
                                                                         ^
spec/support/db_helpers.rb:94:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[1], name: 'MoJ Strategy'},
      ^
spec/support/db_helpers.rb:94:59: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[1], name: 'MoJ Strategy'},
                                                          ^
spec/support/db_helpers.rb:95:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[2], name: 'Law, Rights, International'},
      ^
spec/support/db_helpers.rb:95:73: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[2], name: 'Law, Rights, International'},
                                                                        ^
spec/support/db_helpers.rb:96:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[2], name: 'Access to Justice'},
      ^
spec/support/db_helpers.rb:96:64: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[2], name: 'Access to Justice'},
                                                               ^
spec/support/db_helpers.rb:97:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[2], name: 'Judicial Reward and Pensions reform'},
      ^
spec/support/db_helpers.rb:97:82: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[2], name: 'Judicial Reward and Pensions reform'},
                                                                                 ^
spec/support/db_helpers.rb:98:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[2], name: 'Communications and Information'},
      ^
spec/support/db_helpers.rb:98:77: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[2], name: 'Communications and Information'},
                                                                            ^
spec/support/db_helpers.rb:99:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[3], name: 'HR'},
      ^
spec/support/db_helpers.rb:99:49: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[3], name: 'HR'},
                                                ^
spec/support/db_helpers.rb:100:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[3], name: 'Public Sector Prisons'},
      ^
spec/support/db_helpers.rb:100:68: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[3], name: 'Public Sector Prisons'},
                                                                   ^
spec/support/db_helpers.rb:101:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[4], name: 'Civil, Family and Tribunals'},
      ^
spec/support/db_helpers.rb:101:74: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[4], name: 'Civil, Family and Tribunals'},
                                                                         ^
spec/support/db_helpers.rb:102:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[4], name: 'Crime'},
      ^
spec/support/db_helpers.rb:102:52: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[4], name: 'Crime'},
                                                   ^
spec/support/db_helpers.rb:103:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[4], name: 'IT'},
      ^
spec/support/db_helpers.rb:103:49: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[4], name: 'IT'},
                                                ^
spec/support/db_helpers.rb:104:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[5], name: 'Shared Services'},
      ^
spec/support/db_helpers.rb:104:62: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[5], name: 'Shared Services'},
                                                             ^
spec/support/db_helpers.rb:105:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {directorate:  directorates[5], name: 'MoJ Technology'}
      ^
spec/support/db_helpers.rb:105:61: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {directorate:  directorates[5], name: 'MoJ Technology'}
                                                            ^
spec/support/db_helpers.rb:111:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {division: divisions[0], email: 'dd1@pq.com', name: 'deputy director 1'},
      ^
spec/support/db_helpers.rb:111:78: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {division: divisions[0], email: 'dd1@pq.com', name: 'deputy director 1'},
                                                                             ^
spec/support/db_helpers.rb:112:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {division: divisions[0], email: 'dd2@pq.com', name: 'deputy director 2'},
      ^
spec/support/db_helpers.rb:112:78: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {division: divisions[0], email: 'dd2@pq.com', name: 'deputy director 2'},
                                                                             ^
spec/support/db_helpers.rb:112:79: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
      {division: divisions[0], email: 'dd2@pq.com', name: 'deputy director 2'},
                                                                              ^
spec/support/db_helpers.rb:118:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'Finance press desk'},
      ^
spec/support/db_helpers.rb:118:34: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'Finance press desk'},
                                 ^
spec/support/db_helpers.rb:119:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'Prisons press desk'}
      ^
spec/support/db_helpers.rb:119:34: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name: 'Prisons press desk'}
                                 ^
spec/support/db_helpers.rb:125:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'press officer 1', email: 'one@press.office.com', press_desk: press_desks[0] },
      ^
spec/support/db_helpers.rb:126:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name: 'press officer 2', email: 'two@press.office.com', press_desk: press_desks[1] },
      ^
spec/support/db_helpers.rb:126:92: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
      {name: 'press officer 2', email: 'two@press.office.com', press_desk: press_desks[1] },
                                                                                           ^
spec/support/db_helpers.rb:132:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {deputy_director: deputy_directors[0], name: 'action officer 1', email: 'ao1@pq.com', press_desk: press_desks[0]},
      ^
spec/support/db_helpers.rb:132:119: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {deputy_director: deputy_directors[0], name: 'action officer 1', email: 'ao1@pq.com', press_desk: press_desks[0]},
                                                                                                                      ^
spec/support/db_helpers.rb:133:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {deputy_director: deputy_directors[1], name: 'action officer 2', email: 'ao2@pq.com', press_desk: press_desks[1]},
      ^
spec/support/db_helpers.rb:133:119: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {deputy_director: deputy_directors[1], name: 'action officer 2', email: 'ao2@pq.com', press_desk: press_desks[1]},
                                                                                                                      ^
spec/support/db_helpers.rb:134:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {deputy_director: deputy_directors[1], name: 'action officer 3', email: 'ao3@pq.com', press_desk: press_desks[1]},
      ^
spec/support/db_helpers.rb:134:119: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {deputy_director: deputy_directors[1], name: 'action officer 3', email: 'ao3@pq.com', press_desk: press_desks[1]},
                                                                                                                      ^
spec/support/db_helpers.rb:134:120: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
      {deputy_director: deputy_directors[1], name: 'action officer 3', email: 'ao3@pq.com', press_desk: press_desks[1]},
                                                                                                                       ^
spec/support/db_helpers.rb:140:7: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
      {name:'Ministry of Defence', acronym:'MOD'}
      ^
spec/support/db_helpers.rb:140:12: C: Layout/SpaceAfterColon: Space missing after colon.
      {name:'Ministry of Defence', acronym:'MOD'}
           ^
spec/support/db_helpers.rb:140:43: C: Layout/SpaceAfterColon: Space missing after colon.
      {name:'Ministry of Defence', acronym:'MOD'}
                                          ^
spec/support/db_helpers.rb:140:49: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      {name:'Ministry of Defence', acronym:'MOD'}
                                                ^
spec/factories/pqs.rb:75:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    tabled_date { "2014-05-08 13:45:31" }
                  ^^^^^^^^^^^^^^^^^^^^^
spec/factories/pqs.rb:76:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    response_due { "2014-05-08 13:45:31" }
                   ^^^^^^^^^^^^^^^^^^^^^
spec/factories/pqs.rb:87:93: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
        date_for_answer { Faker::Date.between(internal_deadline, internal_deadline + 7.days)}
                                                                                            ^
spec/factories/pqs.rb:92:46: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
          action_officer_allocated_at { Time.now }
                                             ^^^
spec/factories/pqs.rb:107:93: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
        date_for_answer { Faker::Date.between(internal_deadline, internal_deadline + 7.days)}
                                                                                            ^
spec/factories/pqs.rb:116:40: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
          draft_answer_received { Time.now }
                                       ^^^
spec/factories/pqs.rb:124:36: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
              pod_clearance { Time.now }
                                   ^^^
spec/factories/pqs.rb:128:51: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
                sent_to_answering_minister { Time.now }
                                                  ^^^
spec/factories/pqs.rb:137:56: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
                  cleared_by_answering_minister { Time.now }
                                                       ^^^
spec/factories/early_bird_members.rb:3:1: C: Layout/EmptyLines: Extra blank line detected.
spec/factories/early_bird_members.rb:6:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    name { "Early Bird Member 1" }
           ^^^^^^^^^^^^^^^^^^^^^
spec/factories/early_bird_members.rb:7:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    email { "member.one@earlybird.com" }
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/factories/trim_links.rb:19:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    filename { "trim_link.tr5" }
               ^^^^^^^^^^^^^^^
spec/factories/trim_links.rb:21:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    data { "binarydata?" }
           ^^^^^^^^^^^^^
spec/factories/actionlist_members.rb:17:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    name { "actionlist Member 1" }
           ^^^^^^^^^^^^^^^^^^^^^
spec/factories/actionlist_members.rb:18:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    email { "member.one@actionlist.com" }
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/factories/tokens.rb:18:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/factories/tokens.rb:19:32: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    sequence(:path)       { |n|  "assignment/uin-#{n}" }
                               ^
spec/factories/tokens.rb:22:32: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    sequence(:entity)     { |n|  "assignment:#{n}" }
                               ^
spec/factories/tokens.rb:23:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/factories/ogds.rb:17:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    name { "Ministry of Defence" }
           ^^^^^^^^^^^^^^^^^^^^^
spec/factories/ogds.rb:18:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    acronym { "MOD" }
              ^^^^^
spec/factories/emails.rb:27:31: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    params                  { {uin: '1', ao: 'an ao'}    }
                              ^
spec/factories/emails.rb:27:53: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    params                  { {uin: '1', ao: 'an ao'}    }
                                                    ^
spec/factories/emails.rb:32:51: C: Style/DateTime: Prefer Time over DateTime.
    send_attempted_at       { Faker::Time.between(DateTime.yesterday, DateTime.now) }
                                                  ^^^^^^^^^^^^^^^^^^
spec/factories/emails.rb:32:71: C: Style/DateTime: Prefer Time over DateTime.
    send_attempted_at       { Faker::Time.between(DateTime.yesterday, DateTime.now) }
                                                                      ^^^^^^^^^^^^
spec/factories/emails.rb:32:80: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
    send_attempted_at       { Faker::Time.between(DateTime.yesterday, DateTime.now) }
                                                                               ^^^
spec/factories/emails.rb:37:51: C: Style/DateTime: Prefer Time over DateTime.
      sent_at               { Faker::Time.between(DateTime.yesterday, DateTime.now) }
                                                  ^^^^^^^^^^^^^^^^^^
spec/factories/emails.rb:37:71: C: Style/DateTime: Prefer Time over DateTime.
      sent_at               { Faker::Time.between(DateTime.yesterday, DateTime.now) }
                                                                      ^^^^^^^^^^^^
spec/factories/emails.rb:37:80: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
      sent_at               { Faker::Time.between(DateTime.yesterday, DateTime.now) }
                                                                               ^^^
spec/factories/watchlist_members.rb:17:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    name { "Watchlist Member 1" }
           ^^^^^^^^^^^^^^^^^^^^
spec/factories/watchlist_members.rb:18:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    email { "member.one@watchlist.com" }
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/metrics/health_spec.rb:67:23: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      let(:pqa_data) {  "1431099345::OK::[]\n"  }
                      ^
spec/lib/metrics/health_spec.rb:81:87: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      it 'should set the pqa api status to false if the api status check is not OK' do        
                                                                                      ^^^^^^^^
spec/lib/metrics/health_spec.rb:112:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/lib/metrics/mail_spec.rb:11:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end 
     ^
spec/lib/metrics/mail_spec.rb:24:67: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      threshold = Settings.gecko_warning_levels.num_emails_waiting 
                                                                  ^
spec/lib/metrics/mail_spec.rb:35:21: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        .and_return({ total: 6, ack: 6, open: 0, pctg: 100.00 })
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/metrics/mail_spec.rb:44:21: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        .and_return({ total: 6, ack: 2, open: 4, pctg: 33.33 })
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/metrics/mail_spec.rb:50:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/lib/metrics/key_metric_spec.rb:14:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/lib/metrics/smoke_tests_spec.rb:5:66: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    allow(SmokeTestRunner).to receive(:run_time).and_return(Time.now)
                                                                 ^^^
spec/lib/metrics/smoke_tests_spec.rb:7:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/metrics/smoke_tests_spec.rb:11:54: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    expect(subject.run_time).to be_within(1).of(Time.now)
                                                     ^^^
spec/lib/metrics/smoke_tests_spec.rb:13:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/lib/metrics/application_spec.rb:5:24: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
  let(:date)    { Date.today }
                       ^^^^^
spec/lib/metrics/application_spec.rb:8:17: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:info)    { 
                ^
spec/lib/metrics/application_spec.rb:8:18: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  let(:info)    { 
                 ^
spec/lib/metrics/application_spec.rb:9:4: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
    {
   ^
spec/lib/metrics/application_spec.rb:11:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      build_date:     date,
      ^^^^^^^^^^^^^^^^^^^^
spec/lib/metrics/application_spec.rb:12:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      build_tag:      tag,
      ^^^^^^^^^^^^^^^^^^^
spec/lib/metrics/application_spec.rb:13:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      commit_id:      id
      ^^^^^^^^^^^^^^^^^^
spec/lib/metrics/application_spec.rb:15:4: C: Layout/BlockAlignment: } at 15, 3 is not aligned with let(:info)    {  at 8, 2.
   }
   ^
spec/lib/metrics/application_spec.rb:27:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/lib/pq_state/state_machine_spec.rb:6:21: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:transitions) {
                    ^
spec/lib/pq_state/state_machine_spec.rb:9:6: C: Layout/FirstArrayElementLineBreak: Add a line break before the first element of a multi-line array.
    [PQState::Transition.new('a', 'b', pred),
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/state_machine_spec.rb:14:23: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:state_machine) {
                      ^
spec/lib/pq_state/state_machine_spec.rb:18:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#next_state" do
           ^^^^^^^^^^^^^
spec/lib/pq_state/state_machine_spec.rb:19:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when the supplied state does not exist" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/state_machine_spec.rb:20:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "raises an ArgumentError" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/state_machine_spec.rb:21:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/lib/pq_state/state_machine_spec.rb:27:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when the supplied state exists" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/state_machine_spec.rb:28:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns the next valid state" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/validator_spec.rb:8:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#check_consistent_state_graph!" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/validator_spec.rb:14:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when the transition graph has dead ends" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/validator_spec.rb:15:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "raises an InconsistentStateGraph error" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/validator_spec.rb:17:11: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
          t('a', 'b'),
          ^^^^^^^^^^^
spec/lib/pq_state/validator_spec.rb:18:24: C: Style/InlineComment: Avoid trailing inline comments.
          t('b', 'c'), # <= dead end!
                       ^^^^^^^^^^^^^^
spec/lib/pq_state/validator_spec.rb:20:22: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
          t('d', 'e'),
                     ^
spec/lib/pq_state/validator_spec.rb:21:9: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
        ], ['e'])
        ^
spec/lib/pq_state/validator_spec.rb:23:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/lib/pq_state/validator_spec.rb:29:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when the transition graph moves backward without dead ends" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/validator_spec.rb:36:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "raises no error" do
         ^^^^^^^^^^^^^^^^^
spec/lib/pq_state/validator_spec.rb:53:9: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
        x_transitions = [ ...
        ^^^^^^^^^^^^^^^^^
spec/lib/pq_state/validator_spec.rb:53:25: C: Style/WordArray: Use %w or %W for an array of words.
        x_transitions = [ ...
                        ^
spec/lib/pq_state/validator_spec.rb:55:25: C: Performance/ChainArrayAllocation: Use product...map! instead of product...map.
        ].product(['x']).map { |from, to| t(from, to) }
                        ^^^^
spec/lib/pq_state/validator_spec.rb:59:11: C: Style/WordArray: Use %w or %W for an array of words.
          ['m', 'x']
          ^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:3:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
describe "PQState#progress_changer" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:4:24: C: Layout/SpaceAroundEqualsInParameterDefault: Surrounding space missing in default value assignment.
  def stub_pq(overrides={})
                       ^
spec/lib/pq_state/progress_changer_spec.rb:6:7: C: Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
      { ...
      ^
spec/lib/pq_state/progress_changer_spec.rb:16:11: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  subject {
          ^
spec/lib/pq_state/progress_changer_spec.rb:20:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#validate_transition_graph!" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:21:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "should not raise errors" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:22:14: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/lib/pq_state/progress_changer_spec.rb:28:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#next_state" do
           ^^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:29:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when moving from the initial, to an intermediate state of the graph" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:30:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns the intermediate state" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:35:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "moving from an intermediate state to a possible final state" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:36:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns the final state" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:38:41: C: Style/DateTime: Prefer Time over DateTime.
                     transfer_out_date: DateTime.now)
                                        ^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:38:50: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
                     transfer_out_date: DateTime.now)
                                                 ^^^
spec/lib/pq_state/progress_changer_spec.rb:44:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "moving from the initialial to the final state" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:45:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns the final state" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:47:41: C: Style/DateTime: Prefer Time over DateTime.
                     transfer_out_date: DateTime.now,
                                        ^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:47:50: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
                     transfer_out_date: DateTime.now,
                                                 ^^^
spec/lib/pq_state/progress_changer_spec.rb:49:45: C: Style/DateTime: Prefer Time over DateTime.
                     draft_answer_received: DateTime.now,
                                            ^^^^^^^^^^^^
spec/lib/pq_state/progress_changer_spec.rb:49:54: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
                     draft_answer_received: DateTime.now,
                                                     ^^^
spec/lib/pq_state/progress_changer_spec.rb:55:55: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
                     sent_to_answering_minister: Date.today,
                                                      ^^^^^
spec/lib/pq_statistics/key_metric_spec.rb:8:9: C: Naming/AccessorMethodName: Do not prefix writer method names with set_.
    def set_on_time_percentage(n)
        ^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_statistics/key_metric_spec.rb:8:32: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def set_on_time_percentage(n)
                               ^
spec/lib/pq_statistics/key_metric_spec.rb:10:14: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using (n.round(1) * 10).to_i, use stricter Integer((n.round(1) * 10), 10).
      n    = (n.round(1) * 10).to_i
             ^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_statistics/key_metric_spec.rb:11:42: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      date = 2.business_days.before(Date.today)
                                         ^^^^^
spec/lib/pq_statistics/key_metric_spec.rb:12:30: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
      pqs  = (1..10).to_a.map{ create(:answered_pq) }
                             ^
spec/lib/pq_statistics/key_metric_spec.rb:14:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      pqs.first(n).each do |pq| 
                               ^
spec/lib/pq_statistics/key_metric_spec.rb:16:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          date_for_answer:  1.business_days.after(date), 
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_statistics/key_metric_spec.rb:16:57: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          date_for_answer:  1.business_days.after(date), 
                                                        ^
spec/lib/pq_statistics/key_metric_spec.rb:18:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          state:            PQState::ANSWERED
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_statistics/key_metric_spec.rb:22:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      pqs.last(10 - n).each do |pq| 
                                   ^
spec/lib/pq_statistics/key_metric_spec.rb:24:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          date_for_answer:  1.business_days.before(date), 
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_statistics/key_metric_spec.rb:24:58: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          date_for_answer:  1.business_days.before(date), 
                                                         ^
spec/lib/pq_statistics/key_metric_spec.rb:26:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          state:            PQState::ANSWERED
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pq_statistics/key_metric_spec.rb:48:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/lib/smoke_test_spec.rb:20:42: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    let(:test) { SmokeTest::Base.from_env}
                                         ^
spec/lib/smoke_test_spec.rb:40:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/lib/pqa/xml_decoder_spec.rb:4:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#decode_questions" do
           ^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:5:15: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    let(:xml) {
              ^
spec/lib/pqa/xml_decoder_spec.rb:6:19: C: Style/DateTime: Prefer Time over DateTime.
      date      = DateTime.parse('28/02/2014')
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:6:28: C: Rails/TimeZone: Do not use DateTime.parse without zone. Use one of Time.zone.parse, DateTime.current, DateTime.parse.in_time_zone, DateTime.parse.utc, DateTime.parse.getlocal, DateTime.parse.xmlschema, DateTime.parse.iso8601, DateTime.parse.jisx0301, DateTime.parse.rfc3339, DateTime.parse.httpdate, DateTime.parse.to_i, DateTime.parse.to_f instead.
      date      = DateTime.parse('28/02/2014')
                           ^^^^^
spec/lib/pqa/xml_decoder_spec.rb:7:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      questions = 3.times.map { |n| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:7:19: C: Performance/TimesMap: Use Array.new(3) with a block instead of .times.map.
      questions = 3.times.map { |n| ...
                  ^^^^^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:7:31: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      questions = 3.times.map { |n|
                              ^
spec/lib/pqa/xml_decoder_spec.rb:13:27: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    let(:xml_no_question) {
                          ^
spec/lib/pqa/xml_decoder_spec.rb:14:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "<questions/>"
      ^^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:17:21: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    let(:questions) {
                    ^
spec/lib/pqa/xml_decoder_spec.rb:21:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when the supplied XML contains no <question> element" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:22:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns an empty list" do
         ^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:27:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when the supplied XML contains some <question> elements" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:28:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "parses questions with the correct uin values" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:30:11: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
          'q-0','q-1','q-2'
          ^^^^^
spec/lib/pqa/xml_decoder_spec.rb:30:16: C: Layout/SpaceAfterComma: Space missing after comma.
          'q-0','q-1','q-2'
               ^
spec/lib/pqa/xml_decoder_spec.rb:30:22: C: Layout/SpaceAfterComma: Space missing after comma.
          'q-0','q-1','q-2'
                     ^
spec/lib/pqa/xml_decoder_spec.rb:31:9: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
        ])
        ^
spec/lib/pqa/xml_decoder_spec.rb:34:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "correctly parses dates" do
         ^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:41:11: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
          [28, 2, 2014],
          ^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:44:9: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
        ])
        ^
spec/lib/pqa/xml_decoder_spec.rb:48:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    describe "#decode_answer_response" do
             ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:49:17: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:xml) {
                ^
spec/lib/pqa/xml_decoder_spec.rb:55:1: C: Naming/HeredocDelimiterNaming: Use meaningful heredoc delimiters.
        EOS
^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:58:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      describe "#response" do
               ^^^^^^^^^^^
spec/lib/pqa/xml_decoder_spec.rb:59:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        it "parses xml and returns an AnswerResponse instance" do
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:23:27: C: Style/DateTime: Prefer Time over DateTime.
      q.updated_date    = DateTime.parse(tabled_date_s)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:23:36: C: Rails/TimeZone: Do not use DateTime.parse without zone. Use one of Time.zone.parse, DateTime.current, DateTime.parse.in_time_zone, DateTime.parse.utc, DateTime.parse.getlocal, DateTime.parse.xmlschema, DateTime.parse.iso8601, DateTime.parse.jisx0301, DateTime.parse.rfc3339, DateTime.parse.httpdate, DateTime.parse.to_i, DateTime.parse.to_f instead.
      q.updated_date    = DateTime.parse(tabled_date_s)
                                   ^^^^^
spec/lib/pqa/import_spec.rb:24:27: C: Style/DateTime: Prefer Time over DateTime.
      q.tabled_date     = DateTime.parse(tabled_date_s)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:24:36: C: Rails/TimeZone: Do not use DateTime.parse without zone. Use one of Time.zone.parse, DateTime.current, DateTime.parse.in_time_zone, DateTime.parse.utc, DateTime.parse.getlocal, DateTime.parse.xmlschema, DateTime.parse.iso8601, DateTime.parse.jisx0301, DateTime.parse.rfc3339, DateTime.parse.httpdate, DateTime.parse.to_i, DateTime.parse.to_f instead.
      q.tabled_date     = DateTime.parse(tabled_date_s)
                                   ^^^^^
spec/lib/pqa/import_spec.rb:25:27: C: Style/DateTime: Prefer Time over DateTime.
      q.date_for_answer = DateTime.parse(date_for_answer_s)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:25:36: C: Rails/TimeZone: Do not use DateTime.parse without zone. Use one of Time.zone.parse, DateTime.current, DateTime.parse.in_time_zone, DateTime.parse.utc, DateTime.parse.getlocal, DateTime.parse.xmlschema, DateTime.parse.iso8601, DateTime.parse.jisx0301, DateTime.parse.rfc3339, DateTime.parse.httpdate, DateTime.parse.to_i, DateTime.parse.to_f instead.
      q.date_for_answer = DateTime.parse(date_for_answer_s)
                                   ^^^^^
spec/lib/pqa/import_spec.rb:30:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  feature "importing PQA data into the app" do
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:35:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when no questions exist in the db" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:38:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-0' => ["2/2/2015", "3/2/2015"],
                      ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:38:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-0' => ["2/2/2015", "3/2/2015"],
                                  ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:39:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-1' => ["3/2/2015", "4/2/2015"],
                      ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:39:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-1' => ["3/2/2015", "4/2/2015"],
                                  ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:40:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-2' => ["3/2/2015", "4/2/2015"]
                      ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:40:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-2' => ["3/2/2015", "4/2/2015"]
                                  ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:45:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "reports that new records have been created" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:47:30: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        expect(report).to eq({ ...
                             ^
spec/lib/pqa/import_spec.rb:48:11: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
          total: 3,
          ^^^^^^^^
spec/lib/pqa/import_spec.rb:52:9: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
        })
        ^
spec/lib/pqa/import_spec.rb:58:11: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
          ['uin-0', PQState::UNASSIGNED],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:61:9: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
        ])
        ^
spec/lib/pqa/import_spec.rb:65:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when some questions already exist" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:68:31: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        loader.load(questions({ ...
                              ^
spec/lib/pqa/import_spec.rb:69:11: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
          'uin-0' => ["2/2/2015", "3/2/2015"],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:69:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-0' => ["2/2/2015", "3/2/2015"],
                      ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:69:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-0' => ["2/2/2015", "3/2/2015"],
                                  ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:70:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-1' => ["3/2/2015", "4/2/2015"]
                      ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:70:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-1' => ["3/2/2015", "4/2/2015"]
                                  ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:71:9: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
        }))
        ^
spec/lib/pqa/import_spec.rb:75:31: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        loader.load(questions({ ...
                              ^
spec/lib/pqa/import_spec.rb:76:11: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
          'uin-0' => ["1/2/2015","2/2/2015"],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:76:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-0' => ["1/2/2015","2/2/2015"],
                      ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:76:33: C: Layout/SpaceAfterComma: Space missing after comma.
          'uin-0' => ["1/2/2015","2/2/2015"],
                                ^
spec/lib/pqa/import_spec.rb:76:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-0' => ["1/2/2015","2/2/2015"],
                                 ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:77:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-1' => ["3/2/2015","4/2/2015"],
                      ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:77:33: C: Layout/SpaceAfterComma: Space missing after comma.
          'uin-1' => ["3/2/2015","4/2/2015"],
                                ^
spec/lib/pqa/import_spec.rb:77:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-1' => ["3/2/2015","4/2/2015"],
                                 ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:78:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-2' => ["4/2/2015","7/2/2015"]
                      ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:78:33: C: Layout/SpaceAfterComma: Space missing after comma.
          'uin-2' => ["4/2/2015","7/2/2015"]
                                ^
spec/lib/pqa/import_spec.rb:78:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-2' => ["4/2/2015","7/2/2015"]
                                 ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:79:9: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
        }))
        ^
spec/lib/pqa/import_spec.rb:82:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "reports created and updated records" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:84:30: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        expect(report).to eq({ ...
                             ^
spec/lib/pqa/import_spec.rb:85:11: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
          total: 3,
          ^^^^^^^^
spec/lib/pqa/import_spec.rb:89:9: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
        })
        ^
spec/lib/pqa/import_spec.rb:92:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "saves the new records, updating the existing ones, without changing the state" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:97:35: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect(Pq.order(:uin).map { |pq|
                                  ^
spec/lib/pqa/import_spec.rb:97:38: W: Lint/ShadowingOuterLocalVariable: Shadowing outer local variable - pq.
        expect(Pq.order(:uin).map { |pq|
                                     ^^
spec/lib/pqa/import_spec.rb:103:11: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
          ['uin-0', [1, 2, 2015], PQState::UNASSIGNED],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:106:9: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
        ])
        ^
spec/lib/pqa/import_spec.rb:111:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/pqa/import_spec.rb:114:31: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        loader.load(questions({ ...
                              ^
spec/lib/pqa/import_spec.rb:115:11: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
          'uin-0' => ["2/2/2015", "3/2/2015"],
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/pqa/import_spec.rb:115:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-0' => ["2/2/2015", "3/2/2015"],
                      ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:115:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-0' => ["2/2/2015", "3/2/2015"],
                                  ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:116:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-1' => ["3/2/2015", "4/2/2015"]
                      ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:116:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          'uin-1' => ["3/2/2015", "4/2/2015"]
                                  ^^^^^^^^^^
spec/lib/pqa/import_spec.rb:117:9: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
        }))
        ^
spec/lib/pqa/recent_questions_url_spec.rb:5:3: W: Lint/UselessAssignment: Useless assignment to variable - baseurl.
  baseurl = 'http://www.parliament.uk/business/publications/written-questions-answers-statements/written-questions-answers/?page=1&max=20&questiontype=QuestionsOnly&house=commons%2clords&use-dates=True&answered-from=2015-01-01&answered-to=2015-07-28'
  ^^^^^^^
spec/lib/pqa/recent_questions_url_spec.rb:9:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/lib/pqa/recent_questions_url_spec.rb:11:21: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    this_day = Date.today.beginning_of_week
                    ^^^^^
spec/lib/pqa/recent_questions_url_spec.rb:14:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(url).to include(this_day.strftime("%F"))
                                             ^^^^
spec/lib/pqa/recent_questions_url_spec.rb:15:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(url).to include(previous_day.strftime("%F"))
                                                 ^^^^
spec/lib/pqa/recent_questions_url_spec.rb:18:21: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    this_day = Date.today.beginning_of_week + 1
                    ^^^^^
spec/lib/pqa/recent_questions_url_spec.rb:21:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(url).to include(this_day.strftime("%F"))
                                             ^^^^
spec/lib/pqa/recent_questions_url_spec.rb:22:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(url).to include(previous_day.strftime("%F"))
                                                 ^^^^
spec/lib/pqa/recent_questions_url_spec.rb:24:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/lib/gecko_collection_spec.rb:5:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/gecko_collection_spec.rb:14:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end 
     ^
spec/lib/gecko_collection_spec.rb:18:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    subject.each do |status| 
                            ^
spec/lib/gecko_collection_spec.rb:26:35: C: Style/SymbolProc: Pass &:name as an argument to map instead of a block.
    component_names = subject.map { |status| status.name }
                                  ^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/gecko_collection_spec.rb:33:19: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
    components = [ component, component ]
                  ^
spec/lib/gecko_collection_spec.rb:33:40: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
    components = [ component, component ]
                                       ^
spec/lib/gecko_collection_spec.rb:35:29: W: Lint/ShadowingOuterLocalVariable: Shadowing outer local variable - component.
    all_components.each do |component| 
                            ^^^^^^^^^
spec/lib/gecko_collection_spec.rb:35:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    all_components.each do |component| 
                                      ^
spec/lib/gecko_collection_spec.rb:36:22: C: Style/Send: Prefer Object#__send__ or Object#public_send to send.
      expect(subject.send(component)).to receive(:update).with(components) 
                     ^^^^
spec/lib/gecko_collection_spec.rb:36:75: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      expect(subject.send(component)).to receive(:update).with(components) 
                                                                          ^
spec/lib/gecko_collection_spec.rb:42:1: C: Layout/TrailingBlankLines: 2 trailing blank lines detected.
spec/lib/rake_task_helpers/staging_sync_spec.rb:5:26: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    ENV['TEST_USER_PASS']='xxx'
                         ^
spec/lib/rake_task_helpers/staging_sync_spec.rb:12:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    msg = 
         ^
spec/lib/rake_task_helpers/staging_sync_spec.rb:13:71: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
      "[-] This task should only be run in the staging environment\n" + 
                                                                      ^
spec/lib/rake_task_helpers/staging_sync_spec.rb:13:72: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      "[-] This task should only be run in the staging environment\n" + 
                                                                       ^
spec/lib/rake_task_helpers/staging_sync_spec.rb:36:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/rake_task_helpers/staging_sync_spec.rb:38:36: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
    expect(email.subject).to match /Staging DB sanitization failed/
                                   ^
spec/lib/rake_task_helpers/staging_sync_spec.rb:39:33: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
    expect(email.body).to match /StandardError/
                                ^
spec/lib/rake_task_helpers/test_user_generator_spec.rb:5:78: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  let(:path) { "#{Rails.root}/spec/lib/rake_task_helpers/sample_config.yml" } 
                                                                             ^
spec/lib/rake_task_helpers/test_user_generator_spec.rb:40:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/lib/presenters/report_spec.rb:6:21: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def header_values(r)
                    ^
spec/lib/presenters/report_spec.rb:10:18: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
  def row_values(r)
                 ^
spec/lib/presenters/report_spec.rb:20:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#header_values" do
           ^^^^^^^^^^^^^^^^
spec/lib/presenters/report_spec.rb:21:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "minister report" do
            ^^^^^^^^^^^^^^^^^
spec/lib/presenters/report_spec.rb:22:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "produces the expected header values" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/report_spec.rb:28:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "press desk report" do
            ^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/report_spec.rb:29:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "produces the expected header values" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/report_spec.rb:36:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#rows" do
           ^^^^^^^
spec/lib/presenters/report_spec.rb:37:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when no data is supplied" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/report_spec.rb:38:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "produces the expected row values" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/report_spec.rb:40:9: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
        expected = PQState::IN_PROGRESS.map do |state| ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/report_spec.rb:50:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when some data is supplied" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/report_spec.rb:51:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:report_data) {{
                        ^
spec/lib/presenters/report_spec.rb:51:26: C: Layout/MultilineBlockLayout: Block body expression is on the same line as the block start.
      let(:report_data) {{ ...
                         ^
spec/lib/presenters/report_spec.rb:51:26: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
      let(:report_data) {{
                         ^
spec/lib/presenters/report_spec.rb:56:8: C: Layout/BlockEndNewline: Expression at 56, 8 should be on its own line.
      }}
       ^
spec/lib/presenters/report_spec.rb:58:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "produces the expected row values" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/report_spec.rb:61:66: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
        actual   = pd_report.rows.map { |r| row_values(r) }.find {|s, _| s == label }
                                                                 ^^
spec/lib/presenters/report_spec.rb:65:82: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
            [20, filter_all_path(press_desk_id: press_desks[1].id, state: state)],
                                                                                 ^
spec/lib/presenters/dashboard_filters_spec.rb:6:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#build" do
           ^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:7:18: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    let(:counts) {{
                 ^
spec/lib/presenters/dashboard_filters_spec.rb:7:19: C: Layout/MultilineBlockLayout: Block body expression is on the same line as the block start.
    let(:counts) {{ ...
                  ^
spec/lib/presenters/dashboard_filters_spec.rb:7:19: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    let(:counts) {{
                  ^
spec/lib/presenters/dashboard_filters_spec.rb:8:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'view_all'  => 50,
      ^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:8:19: C: Layout/SpaceAroundOperators: Operator => should be surrounded by a single space.
      'view_all'  => 50,
                  ^^
spec/lib/presenters/dashboard_filters_spec.rb:10:32: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
      PQState::NO_RESPONSE => 2,
                               ^
spec/lib/presenters/dashboard_filters_spec.rb:11:6: C: Layout/BlockEndNewline: Expression at 11, 6 should be on its own line.
    }}
     ^
spec/lib/presenters/dashboard_filters_spec.rb:13:18: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    let(:params) {{
                 ^
spec/lib/presenters/dashboard_filters_spec.rb:13:19: C: Layout/MultilineBlockLayout: Block body expression is on the same line as the block start.
    let(:params) {{ ...
                  ^
spec/lib/presenters/dashboard_filters_spec.rb:13:19: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    let(:params) {{
                  ^
spec/lib/presenters/dashboard_filters_spec.rb:14:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :controller => 'dashboard',
      ^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:15:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :action     => 'index'
      ^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:15:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :action     => 'index'
      ^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:16:6: C: Layout/BlockEndNewline: Expression at 16, 6 should be on its own line.
    }}
     ^
spec/lib/presenters/dashboard_filters_spec.rb:18:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "produces the expected filter values" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:27:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      filter_values = Presenters::DashboardFilters ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:28:25: C: Layout/MultilineMethodCallIndentation: Align .build with Presenters::DashboardFilters on line 27.
                        .build(counts, params)
                        ^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:29:25: C: Layout/MultilineMethodCallIndentation: Align .filters with Presenters::DashboardFilters on line 27.
                        .filters
                        ^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:30:25: C: Layout/MultilineMethodCallIndentation: Align .map with Presenters::DashboardFilters on line 27.
                        .map { |f| [f.label, f.count, f.path, f.active?] }
                        ^^^^
spec/lib/presenters/dashboard_filters_spec.rb:38:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#build_in_progress" do
           ^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:39:18: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    let(:counts) {{
                 ^
spec/lib/presenters/dashboard_filters_spec.rb:39:19: C: Layout/MultilineBlockLayout: Block body expression is on the same line as the block start.
    let(:counts) {{ ...
                  ^
spec/lib/presenters/dashboard_filters_spec.rb:39:19: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    let(:counts) {{
                  ^
spec/lib/presenters/dashboard_filters_spec.rb:40:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'view_all_in_progress'     => 12,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:41:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      PQState::DRAFT_PENDING     => 1,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:42:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      PQState::WITH_POD          => 2,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:43:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      PQState::POD_QUERY         => 3,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:44:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      PQState::MINISTER_CLEARED  => 4,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:45:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'iww'                      => 2,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:45:38: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
      'iww'                      => 2,
                                     ^
spec/lib/presenters/dashboard_filters_spec.rb:46:6: C: Layout/BlockEndNewline: Expression at 46, 6 should be on its own line.
    }}
     ^
spec/lib/presenters/dashboard_filters_spec.rb:48:18: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
    let(:params) {{
                 ^
spec/lib/presenters/dashboard_filters_spec.rb:48:19: C: Layout/MultilineBlockLayout: Block body expression is on the same line as the block start.
    let(:params) {{ ...
                  ^
spec/lib/presenters/dashboard_filters_spec.rb:48:19: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
    let(:params) {{
                  ^
spec/lib/presenters/dashboard_filters_spec.rb:49:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :controller => 'dashboard',
      ^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:50:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :action     => 'in_progress_by_status',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:50:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :action     => 'in_progress_by_status',
      ^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:51:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :qstatus    => PQState::POD_QUERY,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:51:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :qstatus    => PQState::POD_QUERY,
      ^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:51:40: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
      :qstatus    => PQState::POD_QUERY,
                                       ^
spec/lib/presenters/dashboard_filters_spec.rb:52:6: C: Layout/BlockEndNewline: Expression at 52, 6 should be on its own line.
    }}
     ^
spec/lib/presenters/dashboard_filters_spec.rb:54:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "initialises filters with the expected values" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:64:55: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
        ['I will write', 2, dashboard_iww_path, false],
                                                      ^
spec/lib/presenters/dashboard_filters_spec.rb:67:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      filter_values = Presenters::DashboardFilters ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:68:25: C: Layout/MultilineMethodCallIndentation: Align .build_in_progress with Presenters::DashboardFilters on line 67.
                        .build_in_progress(counts, params)
                        ^^^^^^^^^^^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:69:25: C: Layout/MultilineMethodCallIndentation: Align .filters with Presenters::DashboardFilters on line 67.
                        .filters
                        ^^^^^^^^
spec/lib/presenters/dashboard_filters_spec.rb:70:25: C: Layout/MultilineMethodCallIndentation: Align .map with Presenters::DashboardFilters on line 67.
                        .map { |f| [f.label, f.count, f.path, f.active?] }
                        ^^^^
spec/lib/presenters/status_filter_spec.rb:6:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:params) {{
               ^
spec/lib/presenters/status_filter_spec.rb:6:17: C: Layout/MultilineBlockLayout: Block body expression is on the same line as the block start.
  let(:params) {{ ...
                ^
spec/lib/presenters/status_filter_spec.rb:6:17: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:params) {{
                ^
spec/lib/presenters/status_filter_spec.rb:7:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :qstatus    => 'test_key',
    ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:7:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :qstatus    => 'test_key',
    ^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:8:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :controller => 'dashboard',
    ^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:9:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :action     => 'by_status'
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:9:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :action     => 'by_status'
    ^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:10:4: C: Layout/BlockEndNewline: Expression at 10, 4 should be on its own line.
  }}
   ^
spec/lib/presenters/status_filter_spec.rb:12:15: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:label) {
              ^
spec/lib/presenters/status_filter_spec.rb:16:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:filter) {
               ^
spec/lib/presenters/status_filter_spec.rb:20:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#link" do
           ^^^^^^^
spec/lib/presenters/status_filter_spec.rb:21:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns the correct path" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:26:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#active?" do
           ^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:27:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when key and active_key match" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:28:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns true" do
         ^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:33:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when key and active_key do not match" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:34:20: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:params) {{
                   ^
spec/lib/presenters/status_filter_spec.rb:34:21: C: Layout/MultilineBlockLayout: Block body expression is on the same line as the block start.
      let(:params) {{ ...
                    ^
spec/lib/presenters/status_filter_spec.rb:34:21: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
      let(:params) {{
                    ^
spec/lib/presenters/status_filter_spec.rb:35:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :qstatus    => 'other-key',
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:35:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :qstatus    => 'other-key',
        ^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:36:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :controller => 'dashboard',
        ^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:37:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :action     => 'by_status'
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:37:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :action     => 'by_status'
        ^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:38:8: C: Layout/BlockEndNewline: Expression at 38, 8 should be on its own line.
      }}
       ^
spec/lib/presenters/status_filter_spec.rb:40:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns false" do
         ^^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:46:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#label" do
           ^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:47:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when no label has been supplied" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:50:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns the key value" do
         ^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:55:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when a label is supplied" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/presenters/status_filter_spec.rb:56:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns the label value" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/metrics_dashboard_spec.rb:18:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/metrics_dashboard_spec.rb:25:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/lib/validators/date_input_spec.rb:6:48: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  let(:window)  { Validators::DateInput::WINDOW  + 1.days }
                                               ^
spec/lib/validators/date_input_spec.rb:6:50: C: Layout/SpaceAroundOperators: Operator + should be surrounded by a single space.
  let(:window)  { Validators::DateInput::WINDOW  + 1.days }
                                                 ^
spec/lib/validators/date_input_spec.rb:6:52: C: Rails/PluralizationGrammar: Prefer 1.day.
  let(:window)  { Validators::DateInput::WINDOW  + 1.days }
                                                   ^^^^^^
spec/lib/validators/date_input_spec.rb:10:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    buffer = "1" *  (max_len + 1)
             ^^^
spec/lib/validators/date_input_spec.rb:10:18: C: Layout/SpaceAroundOperators: Operator * should be surrounded by a single space.
    buffer = "1" *  (max_len + 1)
                 ^
spec/lib/validators/date_input_spec.rb:10:19: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    buffer = "1" *  (max_len + 1)
                  ^
spec/lib/validators/date_input_spec.rb:22:14: C: Style/DateTime: Prefer Time over DateTime.
    date_a = DateTime.now + window
             ^^^^^^^^^^^^
spec/lib/validators/date_input_spec.rb:22:23: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
    date_a = DateTime.now + window
                      ^^^
spec/lib/validators/date_input_spec.rb:23:14: C: Style/DateTime: Prefer Time over DateTime.
    date_b = DateTime.now - window
             ^^^^^^^^^^^^
spec/lib/validators/date_input_spec.rb:23:23: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
    date_b = DateTime.now - window
                      ^^^
spec/lib/validators/date_input_spec.rb:37:28: C: Style/DateTime: Prefer Time over DateTime.
      dt_with_gmt_adjust = DateTime.now.midnight
                           ^^^^^^^^^^^^
spec/lib/validators/date_input_spec.rb:37:37: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
      dt_with_gmt_adjust = DateTime.now.midnight
                                    ^^^
spec/lib/validators/date_input_spec.rb:38:12: C: Style/DateTime: Prefer Time over DateTime.
      dt = DateTime.parse(dt_with_gmt_adjust.strftime('%a, %d %b %Y %H:%M:%S'))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/validators/date_input_spec.rb:38:21: C: Rails/TimeZone: Do not use DateTime.parse without zone. Use one of Time.zone.parse, DateTime.current, DateTime.parse.in_time_zone, DateTime.parse.utc, DateTime.parse.getlocal, DateTime.parse.xmlschema, DateTime.parse.iso8601, DateTime.parse.jisx0301, DateTime.parse.rfc3339, DateTime.parse.httpdate, DateTime.parse.to_i, DateTime.parse.to_f instead.
      dt = DateTime.parse(dt_with_gmt_adjust.strftime('%a, %d %b %Y %H:%M:%S'))
                    ^^^^^
spec/lib/validators/date_input_spec.rb:45:16: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      d = Date.today
               ^^^^^
spec/lib/gecko_status_spec.rb:53:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/gecko_status_spec.rb:75:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/gecko_status_spec.rb:97:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/gecko_status_spec.rb:119:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/gecko_status_spec.rb:142:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/gecko_status_spec.rb:150:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/gecko_status_spec.rb:164:62: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
      allow(info).to receive(:last_run_time).and_return(Time.now)
                                                             ^^^
spec/lib/gecko_status_spec.rb:180:62: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
      allow(info).to receive(:last_run_time).and_return(Time.now)
                                                             ^^^
spec/lib/gecko_status_spec.rb:196:57: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
      allow(info).to receive(:run_time).and_return(Time.now)
                                                        ^^^
spec/lib/gecko_status_spec.rb:212:57: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
      allow(info).to receive(:run_time).and_return(Time.now)
                                                        ^^^
spec/lib/export/pq_pod_spec.rb:7:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:export) {
               ^
spec/lib/export/pq_pod_spec.rb:8:53: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    Export::PqPod.new(Date.yesterday - 2.days, Date.today)
                                                    ^^^^^
spec/lib/export/pq_pod_spec.rb:11:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  context "when no records are present" do
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_pod_spec.rb:12:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns a blank CSV" do
       ^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_pod_spec.rb:17:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  context "when some records are present" do
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_pod_spec.rb:20:40: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-1', tabled_date: Date.today + 5)
                                       ^^^^^
spec/lib/export/pq_pod_spec.rb:21:40: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-2', tabled_date: Date.today - 5)
                                       ^^^^^
spec/lib/export/pq_pod_spec.rb:22:45: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-3', answer_submitted: Date.today)
                                            ^^^^^
spec/lib/export/pq_pod_spec.rb:23:42: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-4', pod_clearance: Date.today)
                                         ^^^^^
spec/lib/export/pq_pod_spec.rb:26:67: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-z', answer_submitted: nil, date_for_answer: Date.today)
                                                                  ^^^^^
spec/lib/export/pq_pod_spec.rb:31:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns unanswered, and non transfered-out pqs, within the supplied date range ordered by date for answer" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_pod_spec.rb:32:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      exported_pqs = decode_csv(export.to_csv).map do |h| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_pod_spec.rb:37:38: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
          h['Date Due in Parliament'],
                                     ^
spec/lib/export/pq_pod_spec.rb:42:9: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
        ['uin-a', 'uin-a body text', date_s(Date.yesterday), date_s(Date.yesterday - 3)],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_pod_spec.rb:44:74: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
        ['uin-z', 'uin-z body text', date_s(Date.yesterday), date_s(Date.today)]
                                                                         ^^^^^
spec/lib/export/pq_pod_spec.rb:45:7: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
      ])
      ^
spec/lib/export/pq_selection_spec.rb:7:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:export) {
               ^
spec/lib/export/pq_selection_spec.rb:8:59: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    Export::PqSelection.new(Date.yesterday - 2.days, Date.today, 'uin-1,uin-3')
                                                          ^^^^^
spec/lib/export/pq_selection_spec.rb:11:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  context "when no records are present" do
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_selection_spec.rb:12:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns a blank CSV" do
       ^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_selection_spec.rb:17:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  context "when some records are present" do
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_selection_spec.rb:19:81: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      mk_pq('uin-1', answer_submitted: nil, date_for_answer: Date.yesterday - 3)   # Expected result
                                                                                ^^
spec/lib/export/pq_selection_spec.rb:19:84: C: Style/InlineComment: Avoid trailing inline comments.
      mk_pq('uin-1', answer_submitted: nil, date_for_answer: Date.yesterday - 3)   # Expected result
                                                                                   ^^^^^^^^^^^^^^^^^
spec/lib/export/pq_selection_spec.rb:20:40: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-2', tabled_date: Date.today - 5)
                                       ^^^^^
spec/lib/export/pq_selection_spec.rb:21:45: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-3', answer_submitted: Date.today, date_for_answer: Date.yesterday)   # Expected result
                                            ^^^^^
spec/lib/export/pq_selection_spec.rb:21:84: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      mk_pq('uin-3', answer_submitted: Date.today, date_for_answer: Date.yesterday)   # Expected result
                                                                                   ^^
spec/lib/export/pq_selection_spec.rb:21:87: C: Style/InlineComment: Avoid trailing inline comments.
      mk_pq('uin-3', answer_submitted: Date.today, date_for_answer: Date.yesterday)   # Expected result
                                                                                      ^^^^^^^^^^^^^^^^^
spec/lib/export/pq_selection_spec.rb:22:42: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-4', pod_clearance: Date.today)
                                         ^^^^^
spec/lib/export/pq_selection_spec.rb:23:67: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-z', answer_submitted: nil, date_for_answer: Date.today)
                                                                  ^^^^^
spec/lib/export/pq_selection_spec.rb:28:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns specified questions" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_selection_spec.rb:29:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      exported_pqs = decode_csv(export.to_csv).map do |h| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_selection_spec.rb:34:38: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
          h['Date Due in Parliament'],
                                     ^
spec/lib/export/pq_default_spec.rb:7:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:export) {
               ^
spec/lib/export/pq_default_spec.rb:8:48: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    Export::PqDefault.new(Date.yesterday, Date.today)
                                               ^^^^^
spec/lib/export/pq_default_spec.rb:11:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  context "For output to Excel" do
          ^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_default_spec.rb:12:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "Inserts a single quote to escape a formula in Excel" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_default_spec.rb:13:123: W: Lint/ParenthesesAsGroupedExpression: (...) interpreted as grouped expression.
      expect(export.escape_equals_for_excel('=HYPERLINK("http://www.somedodgysite.com/","Innocuous Looking Link")')).to eq ("'"+'=HYPERLINK("http://www.somedodgysite.com/","Innocuous Looking Link")')
                                                                                                                          ^
spec/lib/export/pq_default_spec.rb:13:128: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
      expect(export.escape_equals_for_excel('=HYPERLINK("http://www.somedodgysite.com/","Innocuous Looking Link")')).to eq ("'"+'=HYPERLINK("http://www.somedodgysite.com/","Innocuous Looking Link")')
                                                                                                                               ^
spec/lib/export/pq_default_spec.rb:16:122: W: Lint/ParenthesesAsGroupedExpression: (...) interpreted as grouped expression.
      expect(export.escape_equals_for_excel('HYPERLINK("http://www.somedodgysite.com/","Innocuous Looking Link")')).to eq ('HYPERLINK("http://www.somedodgysite.com/","Innocuous Looking Link")')
                                                                                                                         ^
spec/lib/export/pq_default_spec.rb:20:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  context "when no records are present" do
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_default_spec.rb:21:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns a blank CSV" do
       ^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_default_spec.rb:26:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  context "when some records are present" do
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_default_spec.rb:29:45: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-1', answer_submitted: Date.today - 5)
                                            ^^^^^
spec/lib/export/pq_default_spec.rb:30:40: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-2', tabled_date: Date.today + 1)
                                       ^^^^^
spec/lib/export/pq_default_spec.rb:31:70: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      mk_pq('uin-3', transfer_out_ogd_id: 1, transfer_out_date: Date.today)
                                                                     ^^^^^
spec/lib/export/pq_default_spec.rb:39:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "returns unanswered, and non transfered-out pqs, within the supplied date range ordered by UIN" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_default_spec.rb:40:34: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      today        = date_s(Date.today)
                                 ^^^^^
spec/lib/export/pq_default_spec.rb:42:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      exported_pqs = decode_csv(export.to_csv).map do |h| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_default_spec.rb:47:54: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
          h['Date response answered by Parly (dept)'],
                                                     ^
spec/lib/export/pq_default_spec.rb:52:9: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
        ['uin-a', 'uin-a body text', yesterday, today],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/lib/export/pq_default_spec.rb:55:7: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
      ])
      ^
spec/lib/smoke_test_runner_spec.rb:25:16: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    now = Time.now
               ^^^
spec/lib/smoke_test_runner_spec.rb:27:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/lib/smoke_test_runner_spec.rb:41:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/workers/import_worker_spec.rb:13:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      total:    18,
      ^^^^^^^^^^^^
spec/workers/import_worker_spec.rb:14:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      created:  15,
      ^^^^^^^^^^^^
spec/workers/import_worker_spec.rb:15:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      updated:  3,
      ^^^^^^^^^^^
spec/workers/import_worker_spec.rb:16:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      errors:   {}
      ^^^^^^^^^^^^
spec/workers/import_worker_spec.rb:61:38: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
      expect(email.subject).to match /API import succeeded/
                                     ^
spec/workers/import_worker_spec.rb:63:46: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "Information\r\n===========\r\n\r\n" + 
                                             ^
spec/workers/import_worker_spec.rb:63:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        "Information\r\n===========\r\n\r\n" + 
                                              ^
spec/workers/import_worker_spec.rb:64:95: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "The scheduled import from the API @ #{Settings.pq_rest_api.host} succeeded.\r\n\r\n" +
                                                                                              ^
spec/workers/import_worker_spec.rb:65:44: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "[+] Questions retrieved:  18\r\n" + 
                                           ^
spec/workers/import_worker_spec.rb:65:45: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        "[+] Questions retrieved:  18\r\n" + 
                                            ^
spec/workers/import_worker_spec.rb:66:44: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "[+] New questions saved:  15\r\n" +
                                           ^
spec/workers/import_worker_spec.rb:67:47: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "[+] Questions updated:    3\r\n\r\n" +
                                              ^
spec/workers/import_worker_spec.rb:68:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "No further action is required."
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/workers/import_worker_spec.rb:77:38: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
      expect(email.subject).to match /API import failed/
                                     ^
spec/workers/import_worker_spec.rb:79:34: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "Alert\r\n=====\r\n\r\n" +
                                 ^
spec/workers/import_worker_spec.rb:80:77: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "The scheduled import from the API @ #{Settings.pq_rest_api.host} " + 
                                                                            ^
spec/workers/import_worker_spec.rb:80:78: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        "The scheduled import from the API @ #{Settings.pq_rest_api.host} " + 
                                                                             ^
spec/workers/import_worker_spec.rb:81:54: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "failed with the following message:\r\n\r\n" + 
                                                     ^
spec/workers/import_worker_spec.rb:81:55: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        "failed with the following message:\r\n\r\n" + 
                                                      ^
spec/workers/import_worker_spec.rb:82:48: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "Connection refused - details\r\n\r\n" + 
                                               ^
spec/workers/import_worker_spec.rb:82:49: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        "Connection refused - details\r\n\r\n" + 
                                                ^
spec/workers/import_worker_spec.rb:83:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "Please check the logs to diagnose the issue."
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/workers/pid_file_spec.rb:1:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
require 'spec_helper' 
                     ^
spec/workers/pid_file_spec.rb:8:35: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
    File.delete(pid_path) if File.exists?(pid_path)
                                  ^^^^^^^
spec/workers/pid_file_spec.rb:37:50: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
    File.open(pid_path, 'w') { |f| f.write('123')}
                                                 ^
spec/workers/pid_file_spec.rb:57:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/workers/mail_worker_spec.rb:1:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
require 'spec_helper' 
                     ^
spec/workers/mail_worker_spec.rb:9:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  let!(:failed)  { create(:pq_email_failed)  } 
                                              ^
spec/workers/mail_worker_spec.rb:36:18: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      worker.run!      
                 ^^^^^^
spec/workers/mail_worker_spec.rb:44:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/workers/mail_worker_spec.rb:75:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/workers/mail_worker_spec.rb:80:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/controllers/watchlist_dashboard_controller_spec.rb:5:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/controllers/watchlist_dashboard_controller_spec.rb:18:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/controllers/health_check_controller_spec.rb:18:103: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      report = HealthCheckService::HealthCheckReport.new('500', ['Error message 1', 'Error message 2'] )
                                                                                                      ^
spec/controllers/health_check_controller_spec.rb:27:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/controllers/health_check_controller_spec.rb:29:1: C: Layout/TrailingBlankLines: 5 trailing blank lines detected.
spec/controllers/roles_filter_spec.rb:2:1: C: Layout/LeadingBlankLines: Unnecessary blank line at the beginning of the source.
require 'spec_helper'
^^^^^^^
spec/controllers/roles_filter_spec.rb:5:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/controllers/roles_filter_spec.rb:6:55: C: Layout/SpaceAfterColon: Space missing after colon.
  let!(:pq_user) { create(:user, name: 'pquser', email:'pq@admin.com', password: 'password123') }
                                                      ^
spec/controllers/roles_filter_spec.rb:7:61: C: Layout/SpaceAfterColon: Space missing after colon.
  let!(:finance_user) { create(:user, name: 'finance', email:'f@admin.com', password: 'password123', roles: User::ROLE_FINANCE) }
                                                            ^
spec/controllers/roles_filter_spec.rb:8:60: C: Layout/SpaceAfterColon: Space missing after colon.
  let!(:fake_role_user) { create(:user, name: 'fake', email:'m@admin.com', password: 'password123', roles: 'BAD') }
                                                           ^
spec/controllers/roles_filter_spec.rb:17:51: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_name.
    allow(controller).to receive(:current_user) { User.find_by_name('pquser') }
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/roles_filter_spec.rb:27:51: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_name.
    allow(controller).to receive(:current_user) { User.find_by_name('fake') }
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/roles_filter_spec.rb:37:51: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_name.
    allow(controller).to receive(:current_user) { User.find_by_name('finance') }
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/roles_filter_spec.rb:47:51: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_name.
    allow(controller).to receive(:current_user) { User.find_by_name('pquser') }
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/roles_filter_spec.rb:53:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/controllers/ao_token_filter_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/controllers/ao_token_filter_spec.rb:26:64: C: Style/DateTime: Prefer Time over DateTime.
      token      = @token_service.generate_token(path, entity, DateTime.now.at_end_of_day)
                                                               ^^^^^^^^^^^^
spec/controllers/ao_token_filter_spec.rb:26:73: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
      token      = @token_service.generate_token(path, entity, DateTime.now.at_end_of_day)
                                                                        ^^^
spec/controllers/ao_token_filter_spec.rb:35:1: C: Layout/EmptyLines: Extra blank line detected.
spec/controllers/ao_token_filter_spec.rb:55:63: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      allow(controller).to receive(:params) { { entity: 'test'} }
                                                              ^
spec/controllers/ao_token_filter_spec.rb:66:62: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      allow(controller).to receive(:params) { { token: 'test'} }
                                                             ^
spec/controllers/ao_token_filter_spec.rb:75:64: C: Style/DateTime: Prefer Time over DateTime.
      token      = @token_service.generate_token(path, entity, DateTime.now.at_end_of_day)
                                                               ^^^^^^^^^^^^
spec/controllers/ao_token_filter_spec.rb:75:73: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
      token      = @token_service.generate_token(path, entity, DateTime.now.at_end_of_day)
                                                                        ^^^
spec/controllers/dashboard_controller_spec.rb:5:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/controllers/dashboard_controller_spec.rb:7:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/controllers/dashboard_controller_spec.rb:51:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/controllers/dashboard_controller_spec.rb:58:10: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    Date.today,
         ^^^^^
spec/controllers/dashboard_controller_spec.rb:59:18: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
    Date.tomorrow,
                 ^
spec/controllers/dashboard_controller_spec.rb:66:26: W: Rails/ActiveRecordAliases: Use update instead of update_attributes.
  questions.each { |q| q.update_attributes( { i_will_write: true} ) }
                         ^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:66:44: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  questions.each { |q| q.update_attributes( { i_will_write: true} ) }
                                           ^
spec/controllers/dashboard_controller_spec.rb:66:45: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
  questions.each { |q| q.update_attributes( { i_will_write: true} ) }
                                            ^^^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:66:65: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  questions.each { |q| q.update_attributes( { i_will_write: true} ) }
                                                                ^
spec/controllers/dashboard_controller_spec.rb:66:66: C: Layout/SpaceInsideParens: Space inside parentheses detected.
  questions.each { |q| q.update_attributes( { i_will_write: true} ) }
                                                                 ^
spec/controllers/dashboard_controller_spec.rb:84:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') + ":no_response-11",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:84:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') + ":no_response-11",
          ^
spec/controllers/dashboard_controller_spec.rb:84:18: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    "UIN-"+ Date.today.strftime('%m%d') + ":no_response-11",
                 ^^^^^
spec/controllers/dashboard_controller_spec.rb:84:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') + ":no_response-11",
                                          ^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:85:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') + ":rejected-21",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:85:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') + ":rejected-21",
          ^
spec/controllers/dashboard_controller_spec.rb:85:18: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    "UIN-"+ Date.today.strftime('%m%d') + ":rejected-21",
                 ^^^^^
spec/controllers/dashboard_controller_spec.rb:85:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') + ":rejected-21",
                                          ^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:86:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') + ":unassigned-01",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:86:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') + ":unassigned-01",
          ^
spec/controllers/dashboard_controller_spec.rb:86:18: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    "UIN-"+ Date.today.strftime('%m%d') + ":unassigned-01",
                 ^^^^^
spec/controllers/dashboard_controller_spec.rb:86:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') + ":unassigned-01",
                                          ^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:87:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":no_response-12",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:87:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":no_response-12",
          ^
spec/controllers/dashboard_controller_spec.rb:87:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":no_response-12",
                                             ^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:88:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":rejected-22",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:88:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":rejected-22",
          ^
spec/controllers/dashboard_controller_spec.rb:88:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":rejected-22",
                                             ^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:89:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":unassigned-02",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:89:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":unassigned-02",
          ^
spec/controllers/dashboard_controller_spec.rb:89:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":unassigned-02",
                                             ^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:90:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":no_response-10",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:90:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":no_response-10",
          ^
spec/controllers/dashboard_controller_spec.rb:90:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":no_response-10",
                                              ^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:91:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":rejected-20",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:91:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":rejected-20",
          ^
spec/controllers/dashboard_controller_spec.rb:91:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":rejected-20",
                                              ^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:92:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":unassigned-00"
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:92:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":unassigned-00"
          ^
spec/controllers/dashboard_controller_spec.rb:92:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":unassigned-00"
                                              ^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:98:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":minister_cleared-90",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:98:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":minister_cleared-90",
          ^
spec/controllers/dashboard_controller_spec.rb:98:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":minister_cleared-90",
                                              ^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:99:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":pod_cleared-60",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:99:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":pod_cleared-60",
          ^
spec/controllers/dashboard_controller_spec.rb:99:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":pod_cleared-60",
                                              ^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:100:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":with_minister-70",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:100:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":with_minister-70",
          ^
spec/controllers/dashboard_controller_spec.rb:100:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":with_minister-70",
                                              ^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:101:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":ministerial_query-80",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:101:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":ministerial_query-80",
          ^
spec/controllers/dashboard_controller_spec.rb:101:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":ministerial_query-80",
                                              ^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:102:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":with_pod-40",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:102:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":with_pod-40",
          ^
spec/controllers/dashboard_controller_spec.rb:102:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":with_pod-40",
                                              ^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:103:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":pod_query-50",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:103:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":pod_query-50",
          ^
spec/controllers/dashboard_controller_spec.rb:103:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":pod_query-50",
                                              ^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:104:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":draft_pending-30",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:104:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":draft_pending-30",
          ^
spec/controllers/dashboard_controller_spec.rb:104:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":draft_pending-30",
                                              ^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:105:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":no_response-10",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:105:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":no_response-10",
          ^
spec/controllers/dashboard_controller_spec.rb:105:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":no_response-10",
                                              ^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:106:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":rejected-20",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:106:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":rejected-20",
          ^
spec/controllers/dashboard_controller_spec.rb:106:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":rejected-20",
                                              ^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:107:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":unassigned-00"
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:107:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":unassigned-00"
          ^
spec/controllers/dashboard_controller_spec.rb:107:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":unassigned-00"
                                              ^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:113:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":minister_cleared-91",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:113:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":minister_cleared-91",
          ^
spec/controllers/dashboard_controller_spec.rb:113:18: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    "UIN-"+ Date.today.strftime('%m%d') +":minister_cleared-91",
                 ^^^^^
spec/controllers/dashboard_controller_spec.rb:113:41: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":minister_cleared-91",
                                        ^
spec/controllers/dashboard_controller_spec.rb:113:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":minister_cleared-91",
                                         ^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:114:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":pod_cleared-61",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:114:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":pod_cleared-61",
          ^
spec/controllers/dashboard_controller_spec.rb:114:18: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    "UIN-"+ Date.today.strftime('%m%d') +":pod_cleared-61",
                 ^^^^^
spec/controllers/dashboard_controller_spec.rb:114:41: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":pod_cleared-61",
                                        ^
spec/controllers/dashboard_controller_spec.rb:114:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":pod_cleared-61",
                                         ^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:115:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":with_minister-71",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:115:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":with_minister-71",
          ^
spec/controllers/dashboard_controller_spec.rb:115:18: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    "UIN-"+ Date.today.strftime('%m%d') +":with_minister-71",
                 ^^^^^
spec/controllers/dashboard_controller_spec.rb:115:41: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":with_minister-71",
                                        ^
spec/controllers/dashboard_controller_spec.rb:115:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":with_minister-71",
                                         ^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:116:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":ministerial_query-81",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:116:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":ministerial_query-81",
          ^
spec/controllers/dashboard_controller_spec.rb:116:18: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    "UIN-"+ Date.today.strftime('%m%d') +":ministerial_query-81",
                 ^^^^^
spec/controllers/dashboard_controller_spec.rb:116:41: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":ministerial_query-81",
                                        ^
spec/controllers/dashboard_controller_spec.rb:116:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":ministerial_query-81",
                                         ^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:117:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":with_pod-41",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:117:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":with_pod-41",
          ^
spec/controllers/dashboard_controller_spec.rb:117:18: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    "UIN-"+ Date.today.strftime('%m%d') +":with_pod-41",
                 ^^^^^
spec/controllers/dashboard_controller_spec.rb:117:41: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":with_pod-41",
                                        ^
spec/controllers/dashboard_controller_spec.rb:117:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":with_pod-41",
                                         ^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:118:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":pod_query-51",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:118:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":pod_query-51",
          ^
spec/controllers/dashboard_controller_spec.rb:118:18: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    "UIN-"+ Date.today.strftime('%m%d') +":pod_query-51",
                 ^^^^^
spec/controllers/dashboard_controller_spec.rb:118:41: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":pod_query-51",
                                        ^
spec/controllers/dashboard_controller_spec.rb:118:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":pod_query-51",
                                         ^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:119:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":draft_pending-31",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:119:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":draft_pending-31",
          ^
spec/controllers/dashboard_controller_spec.rb:119:18: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    "UIN-"+ Date.today.strftime('%m%d') +":draft_pending-31",
                 ^^^^^
spec/controllers/dashboard_controller_spec.rb:119:41: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') +":draft_pending-31",
                                        ^
spec/controllers/dashboard_controller_spec.rb:119:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') +":draft_pending-31",
                                         ^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:120:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":minister_cleared-92",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:120:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":minister_cleared-92",
          ^
spec/controllers/dashboard_controller_spec.rb:120:44: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":minister_cleared-92",
                                           ^
spec/controllers/dashboard_controller_spec.rb:120:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":minister_cleared-92",
                                            ^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:121:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":pod_cleared-62",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:121:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":pod_cleared-62",
          ^
spec/controllers/dashboard_controller_spec.rb:121:44: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":pod_cleared-62",
                                           ^
spec/controllers/dashboard_controller_spec.rb:121:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":pod_cleared-62",
                                            ^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:122:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":with_minister-72",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:122:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":with_minister-72",
          ^
spec/controllers/dashboard_controller_spec.rb:122:44: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":with_minister-72",
                                           ^
spec/controllers/dashboard_controller_spec.rb:122:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":with_minister-72",
                                            ^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:123:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":ministerial_query-82",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:123:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":ministerial_query-82",
          ^
spec/controllers/dashboard_controller_spec.rb:123:44: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":ministerial_query-82",
                                           ^
spec/controllers/dashboard_controller_spec.rb:123:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":ministerial_query-82",
                                            ^^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:124:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":with_pod-42",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:124:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":with_pod-42",
          ^
spec/controllers/dashboard_controller_spec.rb:124:44: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":with_pod-42",
                                           ^
spec/controllers/dashboard_controller_spec.rb:124:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":with_pod-42",
                                            ^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:125:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":pod_query-52",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:125:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":pod_query-52",
          ^
spec/controllers/dashboard_controller_spec.rb:125:44: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":pod_query-52",
                                           ^
spec/controllers/dashboard_controller_spec.rb:125:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":pod_query-52",
                                            ^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:126:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":draft_pending-32"
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:126:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":draft_pending-32"
          ^
spec/controllers/dashboard_controller_spec.rb:126:44: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":draft_pending-32"
                                           ^
spec/controllers/dashboard_controller_spec.rb:126:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') +":draft_pending-32"
                                            ^^^^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:132:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') + ":unassigned-01",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:132:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.today.strftime('%m%d') + ":unassigned-01",
          ^
spec/controllers/dashboard_controller_spec.rb:132:18: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    "UIN-"+ Date.today.strftime('%m%d') + ":unassigned-01",
                 ^^^^^
spec/controllers/dashboard_controller_spec.rb:132:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.today.strftime('%m%d') + ":unassigned-01",
                                          ^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:133:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":unassigned-02",
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:133:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":unassigned-02",
          ^
spec/controllers/dashboard_controller_spec.rb:133:46: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.tomorrow.strftime('%m%d') + ":unassigned-02",
                                             ^^^^^^^^^^^^^^^^
spec/controllers/dashboard_controller_spec.rb:134:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":unassigned-00"
    ^^^^^^
spec/controllers/dashboard_controller_spec.rb:134:11: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":unassigned-00"
          ^
spec/controllers/dashboard_controller_spec.rb:134:47: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    "UIN-"+ Date.yesterday.strftime('%m%d') + ":unassigned-00"
                                              ^^^^^^^^^^^^^^^^
spec/routes/routes_spec.rb:3:20: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
describe 'routes', :type => :routing do
                   ^^^^^^^^
spec/routes/routes_spec.rb:5:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    expect(:get => "/dashboard").to route_to(:controller => "dashboard", action: 'index') 
           ^^^^^^^
spec/routes/routes_spec.rb:5:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(:get => "/dashboard").to route_to(:controller => "dashboard", action: 'index') 
                   ^^^^^^^^^^^^
spec/routes/routes_spec.rb:5:46: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    expect(:get => "/dashboard").to route_to(:controller => "dashboard", action: 'index') 
                                             ^^^^^^^^^^^^^^
spec/routes/routes_spec.rb:5:61: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(:get => "/dashboard").to route_to(:controller => "dashboard", action: 'index') 
                                                            ^^^^^^^^^^^
spec/routes/routes_spec.rb:5:90: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    expect(:get => "/dashboard").to route_to(:controller => "dashboard", action: 'index') 
                                                                                         ^
spec/routes/routes_spec.rb:6:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    expect(:get => "/dashboard/in_progress").to route_to(:controller => "dashboard", action: 'in_progress') 
           ^^^^^^^
spec/routes/routes_spec.rb:6:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(:get => "/dashboard/in_progress").to route_to(:controller => "dashboard", action: 'in_progress') 
                   ^^^^^^^^^^^^^^^^^^^^^^^^
spec/routes/routes_spec.rb:6:58: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    expect(:get => "/dashboard/in_progress").to route_to(:controller => "dashboard", action: 'in_progress') 
                                                         ^^^^^^^^^^^^^^
spec/routes/routes_spec.rb:6:73: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(:get => "/dashboard/in_progress").to route_to(:controller => "dashboard", action: 'in_progress') 
                                                                        ^^^^^^^^^^^
spec/routes/routes_spec.rb:6:108: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    expect(:get => "/dashboard/in_progress").to route_to(:controller => "dashboard", action: 'in_progress') 
                                                                                                           ^
spec/routes/routes_spec.rb:9:1: C: Layout/EmptyLines: Extra blank line detected.
spec/routes/routes_spec.rb:11:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    expect(:get => '/gobbledygook').to route_to(:controller => 'application', action: 'page_not_found', "path"=>"gobbledygook")
           ^^^^^^^
spec/routes/routes_spec.rb:11:105: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(:get => '/gobbledygook').to route_to(:controller => 'application', action: 'page_not_found', "path"=>"gobbledygook")
                                                                                                        ^^^^^^
spec/routes/routes_spec.rb:11:111: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
    expect(:get => '/gobbledygook').to route_to(:controller => 'application', action: 'page_not_found', "path"=>"gobbledygook")
                                                                                                              ^^
spec/routes/routes_spec.rb:11:113: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(:get => '/gobbledygook').to route_to(:controller => 'application', action: 'page_not_found', "path"=>"gobbledygook")
                                                                                                                ^^^^^^^^^^^^^^
spec/routes/routes_spec.rb:13:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/routes/routes_spec.rb:14:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/services/mail_service/pq_spec.rb:13:47: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
    expect(Email.first.attributes).to include({ ...
                                              ^
spec/services/mail_service/pq_spec.rb:14:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'mailer'            => 'PqMailer',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:14:7: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
      'mailer'            => 'PqMailer',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:15:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'method'            => 'commission_email',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:16:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'params'            => params,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:17:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'from'              => Settings.commission_mail_from,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:18:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'to'                => email_to,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:19:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'reply_to'          => Settings.mail_reply_to,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:19:52: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
      'reply_to'          => Settings.mail_reply_to,
                                                   ^
spec/services/mail_service/pq_spec.rb:20:5: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
spec/services/mail_service/pq_spec.rb:26:47: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
    expect(Email.first.attributes).to include({ ...
                                              ^
spec/services/mail_service/pq_spec.rb:27:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'mailer'            => 'PqMailer',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:27:7: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
      'mailer'            => 'PqMailer',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:28:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'method'            => 'notify_dd_email',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:29:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'params'            => params,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:30:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'from'              => Settings.mail_from,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:31:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'to'                => email_to,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:32:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'reply_to'          => Settings.mail_reply_to,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:32:52: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
      'reply_to'          => Settings.mail_reply_to,
                                                   ^
spec/services/mail_service/pq_spec.rb:33:5: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
spec/services/mail_service/pq_spec.rb:41:47: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
    expect(Email.first.attributes).to include({ ...
                                              ^
spec/services/mail_service/pq_spec.rb:42:7: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
      'method' => 'acceptance_email',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:44:5: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
spec/services/mail_service/pq_spec.rb:52:47: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
    expect(Email.first.attributes).to include({ ...
                                              ^
spec/services/mail_service/pq_spec.rb:53:7: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
      'method' => 'acceptance_reminder_email',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:55:5: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
spec/services/mail_service/pq_spec.rb:63:47: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
    expect(Email.first.attributes).to include({ ...
                                              ^
spec/services/mail_service/pq_spec.rb:64:7: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
      'method' => 'draft_reminder_email',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:66:5: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
spec/services/mail_service/pq_spec.rb:70:25: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    Timecop.freeze(Date.today) do
                        ^^^^^
spec/services/mail_service/pq_spec.rb:73:49: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
      expect(Email.first.attributes).to include({ ...
                                                ^
spec/services/mail_service/pq_spec.rb:74:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
        'method' => 'watchlist_email',
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:75:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        'cc'     => email_to,
        ^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:76:34: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
        'params' => params.merge({ date: Date.today.to_s(:date)})
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/pq_spec.rb:76:47: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
        'params' => params.merge({ date: Date.today.to_s(:date)})
                                              ^^^^^
spec/services/mail_service/pq_spec.rb:76:64: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        'params' => params.merge({ date: Date.today.to_s(:date)})
                                                               ^
spec/services/mail_service/pq_spec.rb:77:7: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
      })
      ^
spec/services/mail_service/import_spec.rb:4:16: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  let(:service)  { MailService::Import }
               ^
spec/services/mail_service/import_spec.rb:9:47: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
    expect(Email.first.attributes).to include({ ...
                                              ^
spec/services/mail_service/import_spec.rb:10:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'mailer'            => 'ImportMailer',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:10:7: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
      'mailer'            => 'ImportMailer',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:11:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'method'            => 'notify_fail',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:12:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'params'            => 'import error message',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:13:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'from'              => Settings.mail_from,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:14:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'to'                => 'pqsupport@digital.justice.gov.uk',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:15:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'cc'                => nil,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:16:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'reply_to'          => Settings.mail_reply_to,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:18:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'status'            => 'new',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:18:35: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
      'status'            => 'new',
                                  ^
spec/services/mail_service/import_spec.rb:19:5: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
spec/services/mail_service/import_spec.rb:23:13: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    report = 
            ^
spec/services/mail_service/import_spec.rb:24:5: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
    { ...
    ^
spec/services/mail_service/import_spec.rb:25:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      total:    18,
      ^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:26:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      created:  15,
      ^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:27:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      updated:  3,
      ^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:28:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      errors:   {}
      ^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:33:47: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
    expect(Email.first.attributes).to include({ ...
                                              ^
spec/services/mail_service/import_spec.rb:34:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'mailer'            => 'ImportMailer',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:34:7: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
      'mailer'            => 'ImportMailer',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:35:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'method'            => 'notify_success',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:36:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'params'            => report,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:37:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'from'              => Settings.mail_from,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:38:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'to'                => 'pqsupport@digital.justice.gov.uk',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:39:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'cc'                => nil,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:40:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'reply_to'          => Settings.mail_reply_to,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:42:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'status'            => 'new',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/import_spec.rb:42:35: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
      'status'            => 'new',
                                  ^
spec/services/mail_service/import_spec.rb:43:5: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
spec/services/mail_service/import_spec.rb:45:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/services/mail_service/db_sync_spec.rb:4:16: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  let(:service)  { MailService::DbSync  }
               ^
spec/services/mail_service/db_sync_spec.rb:9:47: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
    expect(Email.first.attributes).to include({ ...
                                              ^
spec/services/mail_service/db_sync_spec.rb:10:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'mailer'            => 'DbSyncMailer',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/db_sync_spec.rb:10:7: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
      'mailer'            => 'DbSyncMailer',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/db_sync_spec.rb:11:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'method'            => 'notify_fail',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/db_sync_spec.rb:12:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'params'            => 'sync error message',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/db_sync_spec.rb:13:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'from'              => Settings.mail_from,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/db_sync_spec.rb:14:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'to'                => 'pqsupport@digital.justice.gov.uk',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/db_sync_spec.rb:15:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'cc'                => nil,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/db_sync_spec.rb:16:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'reply_to'          => Settings.mail_reply_to,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/db_sync_spec.rb:18:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'status'            => 'new',
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/mail_service/db_sync_spec.rb:18:35: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
      'status'            => 'new',
                                  ^
spec/services/mail_service/db_sync_spec.rb:19:5: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
spec/services/mail_service/db_sync_spec.rb:20:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  end  
     ^^
spec/services/mail_service/db_sync_spec.rb:21:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/services/early_bird_report_service_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/services/early_bird_report_service_spec.rb:5:91: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  let!(:early_bird_one) { create(:early_bird_member, name: 'member 1', email: 'm1@ao.gov',  deleted: false) }
                                                                                          ^
spec/services/early_bird_report_service_spec.rb:8:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:testid) { "early_bird-" + DateTime.now.to_s }
                 ^^^^^^^^^^^^^
spec/services/early_bird_report_service_spec.rb:8:34: C: Style/DateTime: Prefer Time over DateTime.
  let(:testid) { "early_bird-" + DateTime.now.to_s }
                                 ^^^^^^^^^^^^
spec/services/early_bird_report_service_spec.rb:8:43: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
  let(:testid) { "early_bird-" + DateTime.now.to_s }
                                          ^^^
spec/services/early_bird_report_service_spec.rb:19:18: C: Style/DateTime: Prefer Time over DateTime.
    end_of_day = DateTime.current.end_of_day
                 ^^^^^^^^^^^^^^^^
spec/services/early_bird_report_service_spec.rb:27:17: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    pqtest_mail ='pqtest@digital.justice.gov.uk'
                ^
spec/services/early_bird_report_service_spec.rb:32:5: C: Naming/VariableName: Use snake_case for variable names.
    sentToken = result[pqtest_mail]
    ^^^^^^^^^
spec/services/early_bird_report_service_spec.rb:33:19: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    token_param = {token: sentToken}.to_query
                  ^
spec/services/early_bird_report_service_spec.rb:33:36: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    token_param = {token: sentToken}.to_query
                                   ^
spec/services/early_bird_report_service_spec.rb:34:14: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    entity = {entity: entity = testid }.to_query
             ^
spec/services/early_bird_report_service_spec.rb:34:23: W: Lint/UselessAssignment: Useless assignment to variable - entity.
    entity = {entity: entity = testid }.to_query
                      ^^^^^^
spec/services/early_bird_report_service_spec.rb:47:5: C: Naming/VariableName: Use snake_case for variable names.
    sentToken = result[early_bird_one.id]
    ^^^^^^^^^
spec/services/early_bird_report_service_spec.rb:48:5: W: Lint/UselessAssignment: Useless assignment to variable - token_param.
    token_param = {token: sentToken}.to_query
    ^^^^^^^^^^^
spec/services/early_bird_report_service_spec.rb:48:19: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    token_param = {token: sentToken}.to_query
                  ^
spec/services/early_bird_report_service_spec.rb:48:36: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    token_param = {token: sentToken}.to_query
                                   ^
spec/services/early_bird_report_service_spec.rb:49:5: W: Lint/UselessAssignment: Useless assignment to variable - entity.
    entity = {entity: entity = testid }.to_query
    ^^^^^^
spec/services/early_bird_report_service_spec.rb:49:14: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    entity = {entity: entity = testid }.to_query
             ^
spec/services/early_bird_report_service_spec.rb:49:23: W: Lint/UselessAssignment: Useless assignment to variable - entity.
    entity = {entity: entity = testid }.to_query
                      ^^^^^^
spec/services/early_bird_report_service_spec.rb:50:5: W: Lint/UselessAssignment: Useless assignment to variable - url.
    url = '/early_bird/dashboard'
    ^^^
spec/services/commissioning_service_spec.rb:4:12: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:pq) {
           ^
spec/services/commissioning_service_spec.rb:8:18: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:minister) {
                 ^
spec/services/commissioning_service_spec.rb:11:25: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:policy_minister) {
                        ^
spec/services/commissioning_service_spec.rb:15:13: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:ao1) {
            ^
spec/services/commissioning_service_spec.rb:19:13: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:ao2) {
            ^
spec/services/commissioning_service_spec.rb:23:21: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:form_params) {{
                    ^
spec/services/commissioning_service_spec.rb:23:22: C: Layout/MultilineBlockLayout: Block body expression is on the same line as the block start.
  let(:form_params) {{ ...
                     ^
spec/services/commissioning_service_spec.rb:23:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:form_params) {{
                     ^
spec/services/commissioning_service_spec.rb:29:29: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    internal_deadline: Date.today.midnight
                            ^^^^^
spec/services/commissioning_service_spec.rb:30:4: C: Layout/BlockEndNewline: Expression at 30, 4 should be on its own line.
  }}
   ^
spec/services/commissioning_service_spec.rb:32:29: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_form_params) {
                            ^
spec/services/commissioning_service_spec.rb:36:14: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:form) {
             ^
spec/services/commissioning_service_spec.rb:40:22: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_form) {
                     ^
spec/services/commissioning_service_spec.rb:44:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "#commission" do
           ^^^^^^^^^^^^^
spec/services/commissioning_service_spec.rb:45:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when the supplied form data is not valid" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/commissioning_service_spec.rb:46:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "raises an error" do
         ^^^^^^^^^^^^^^^^^
spec/services/commissioning_service_spec.rb:47:16: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/services/commissioning_service_spec.rb:54:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "when the supplied data is valid" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/commissioning_service_spec.rb:60:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "returns an updated PQ" do
         ^^^^^^^^^^^^^^^^^^^^^^^
spec/services/commissioning_service_spec.rb:70:11: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
          ao1,
          ^^^
spec/services/commissioning_service_spec.rb:72:9: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
        ])
        ^
spec/services/commissioning_service_spec.rb:75:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "notifies the action officers" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/commissioning_service_spec.rb:77:18: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        ao1_mail,  ao2_mail = ActionMailer::Base.deliveries
                 ^
spec/services/watchlist_report_service_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/services/watchlist_report_service_spec.rb:5:89: C: Layout/ExtraSpacing: Unnecessary spacing detected.
  let!(:watchlist_one) { create(:watchlist_member, name: 'member 1', email: 'm1@ao.gov',  deleted: false) }
                                                                                        ^
spec/services/watchlist_report_service_spec.rb:8:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  let(:testid) { "watchlist-" + DateTime.now.to_s }
                 ^^^^^^^^^^^^
spec/services/watchlist_report_service_spec.rb:8:33: C: Style/DateTime: Prefer Time over DateTime.
  let(:testid) { "watchlist-" + DateTime.now.to_s }
                                ^^^^^^^^^^^^
spec/services/watchlist_report_service_spec.rb:8:42: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
  let(:testid) { "watchlist-" + DateTime.now.to_s }
                                         ^^^
spec/services/watchlist_report_service_spec.rb:21:18: C: Style/DateTime: Prefer Time over DateTime.
    end_of_day = DateTime.current.end_of_day
                 ^^^^^^^^^^^^^^^^
spec/services/watchlist_report_service_spec.rb:31:17: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
    pqtest_mail ='pqtest@digital.justice.gov.uk'
                ^
spec/services/watchlist_report_service_spec.rb:39:5: C: Naming/VariableName: Use snake_case for variable names.
    sentToken   = result[pqtest_mail]
    ^^^^^^^^^
spec/services/watchlist_report_service_spec.rb:40:19: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    token_param = {token: sentToken}.to_query
                  ^
spec/services/watchlist_report_service_spec.rb:40:36: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    token_param = {token: sentToken}.to_query
                                   ^
spec/services/watchlist_report_service_spec.rb:41:19: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    entity      = {entity: entity = testid }.to_query
                  ^
spec/services/watchlist_report_service_spec.rb:41:28: W: Lint/UselessAssignment: Useless assignment to variable - entity.
    entity      = {entity: entity = testid }.to_query
                           ^^^^^^
spec/services/watchlist_report_service_spec.rb:48:1: C: Layout/EmptyLines: Extra blank line detected.
spec/services/watchlist_report_service_spec.rb:54:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/services/watchlist_report_service_spec.rb:64:5: C: Naming/VariableName: Use snake_case for variable names.
    sentToken   = result[watchlist_one.id]
    ^^^^^^^^^
spec/services/watchlist_report_service_spec.rb:65:5: W: Lint/UselessAssignment: Useless assignment to variable - token_param.
    token_param = {token: sentToken}.to_query
    ^^^^^^^^^^^
spec/services/watchlist_report_service_spec.rb:65:19: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    token_param = {token: sentToken}.to_query
                  ^
spec/services/watchlist_report_service_spec.rb:65:36: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    token_param = {token: sentToken}.to_query
                                   ^
spec/services/watchlist_report_service_spec.rb:66:5: W: Lint/UselessAssignment: Useless assignment to variable - entity.
    entity      = {entity: entity = testid }.to_query
    ^^^^^^
spec/services/watchlist_report_service_spec.rb:66:19: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    entity      = {entity: entity = testid }.to_query
                  ^
spec/services/watchlist_report_service_spec.rb:66:28: W: Lint/UselessAssignment: Useless assignment to variable - entity.
    entity      = {entity: entity = testid }.to_query
                           ^^^^^^
spec/services/watchlist_report_service_spec.rb:67:5: W: Lint/UselessAssignment: Useless assignment to variable - url.
    url         = '/watchlist/dashboard'
    ^^^
spec/services/token_service_spec.rb:4:28: C: Style/DateTime: Prefer Time over DateTime.
  let(:expire_in_future) { DateTime.new(2100, 01, 20, 10, 0, 0) }
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/token_service_spec.rb:4:37: C: Rails/TimeZone: Do not use DateTime.new without zone. Use one of Time.zone.local, DateTime.current, DateTime.new.in_time_zone, DateTime.new.utc, DateTime.new.getlocal, DateTime.new.xmlschema, DateTime.new.iso8601, DateTime.new.jisx0301, DateTime.new.rfc3339, DateTime.new.httpdate, DateTime.new.to_i, DateTime.new.to_f instead.
  let(:expire_in_future) { DateTime.new(2100, 01, 20, 10, 0, 0) }
                                    ^^^
spec/services/token_service_spec.rb:4:47: C: Style/NumericLiteralPrefix: Use 0o for octal literals.
  let(:expire_in_future) { DateTime.new(2100, 01, 20, 10, 0, 0) }
                                              ^^
spec/services/token_service_spec.rb:5:26: C: Style/DateTime: Prefer Time over DateTime.
  let(:expire_in_past) { DateTime.new(2013, 01, 20, 10, 0, 0) }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/token_service_spec.rb:5:35: C: Rails/TimeZone: Do not use DateTime.new without zone. Use one of Time.zone.local, DateTime.current, DateTime.new.in_time_zone, DateTime.new.utc, DateTime.new.getlocal, DateTime.new.xmlschema, DateTime.new.iso8601, DateTime.new.jisx0301, DateTime.new.rfc3339, DateTime.new.httpdate, DateTime.new.to_i, DateTime.new.to_f instead.
  let(:expire_in_past) { DateTime.new(2013, 01, 20, 10, 0, 0) }
                                  ^^^
spec/services/token_service_spec.rb:5:45: C: Style/NumericLiteralPrefix: Use 0o for octal literals.
  let(:expire_in_past) { DateTime.new(2013, 01, 20, 10, 0, 0) }
                                            ^^
spec/services/token_service_spec.rb:24:46: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      tokens = Token.where(path: '/path/one',  entity: 'entity_one')
                                             ^
spec/services/token_service_spec.rb:28:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/services/token_service_spec.rb:63:1: C: Layout/EmptyLines: Extra blank line detected.
spec/services/token_service_spec.rb:72:1: C: Layout/EmptyLines: Extra blank line detected.
spec/services/token_service_spec.rb:99:1: C: Layout/EmptyLines: Extra blank line detected.
spec/services/token_service_spec.rb:100:1: C: Layout/EmptyLines: Extra blank line detected.
spec/services/token_service_spec.rb:108:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      tokens = Token.where("entity like ?", 'assignment:%')
                           ^^^^^^^^^^^^^^^
spec/services/token_service_spec.rb:112:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      tokens = Token.where("entity like ?", 'assignment:%')
                           ^^^^^^^^^^^^^^^
spec/services/health_check_service_spec.rb:58:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "DB message 1", "DB Message 2",
        ^^^^^^^^^^^^^^
spec/services/health_check_service_spec.rb:58:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "DB message 1", "DB Message 2",
                        ^^^^^^^^^^^^^^
spec/services/health_check_service_spec.rb:59:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "SG message 1", "SG Message 2",
        ^^^^^^^^^^^^^^
spec/services/health_check_service_spec.rb:59:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "SG message 1", "SG Message 2",
                        ^^^^^^^^^^^^^^
spec/services/health_check_service_spec.rb:60:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "MW message 1", "MW Message 2",
        ^^^^^^^^^^^^^^
spec/services/health_check_service_spec.rb:60:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "MW message 1", "MW Message 2",
                        ^^^^^^^^^^^^^^
spec/services/health_check_service_spec.rb:61:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "API message 1", "API Message 2"
        ^^^^^^^^^^^^^^^
spec/services/health_check_service_spec.rb:61:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "API message 1", "API Message 2"
                         ^^^^^^^^^^^^^^^
spec/services/assignment_service_spec.rb:6:14: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:form) {
             ^
spec/services/assignment_service_spec.rb:7:24: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
    CommissionForm.new({ ...
                       ^
spec/services/assignment_service_spec.rb:8:7: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
      pq_id: pq.id,
      ^^^^^^^^^^^^
spec/services/assignment_service_spec.rb:12:31: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      internal_deadline: Date.today
                              ^^^^^
spec/services/assignment_service_spec.rb:13:5: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
spec/services/assignment_service_spec.rb:16:22: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:directorate) {create(:directorate, name: 'This Directorate', id: 1+rand(10))}
                     ^
spec/services/assignment_service_spec.rb:16:73: C: Style/RandomWithOffset: Prefer ranges when generating random numbers instead of integers with offsets.
  let(:directorate) {create(:directorate, name: 'This Directorate', id: 1+rand(10))}
                                                                        ^^^^^^^^^^
spec/services/assignment_service_spec.rb:16:74: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
  let(:directorate) {create(:directorate, name: 'This Directorate', id: 1+rand(10))}
                                                                         ^
spec/services/assignment_service_spec.rb:16:84: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:directorate) {create(:directorate, name: 'This Directorate', id: 1+rand(10))}
                                                                                   ^
spec/services/assignment_service_spec.rb:17:19: C: Layout/SpaceInsideBlockBraces: Space missing inside {.
  let(:division) {create(:division,name: 'Division', directorate_id: directorate.id, id: 1+rand(10))}
                  ^
spec/services/assignment_service_spec.rb:17:35: C: Layout/SpaceAfterComma: Space missing after comma.
  let(:division) {create(:division,name: 'Division', directorate_id: directorate.id, id: 1+rand(10))}
                                  ^
spec/services/assignment_service_spec.rb:17:90: C: Style/RandomWithOffset: Prefer ranges when generating random numbers instead of integers with offsets.
  let(:division) {create(:division,name: 'Division', directorate_id: directorate.id, id: 1+rand(10))}
                                                                                         ^^^^^^^^^^
spec/services/assignment_service_spec.rb:17:91: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
  let(:division) {create(:division,name: 'Division', directorate_id: directorate.id, id: 1+rand(10))}
                                                                                          ^
spec/services/assignment_service_spec.rb:17:101: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:division) {create(:division,name: 'Division', directorate_id: directorate.id, id: 1+rand(10))}
                                                                                                    ^
spec/services/assignment_service_spec.rb:18:99: C: Style/RandomWithOffset: Prefer ranges when generating random numbers instead of integers with offsets.
  let(:deputy_director) { create(:deputy_director, name: 'dd name', division_id: division.id, id: 1+rand(10))}
                                                                                                  ^^^^^^^^^^
spec/services/assignment_service_spec.rb:18:100: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
  let(:deputy_director) { create(:deputy_director, name: 'dd name', division_id: division.id, id: 1+rand(10))}
                                                                                                   ^
spec/services/assignment_service_spec.rb:18:110: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  let(:deputy_director) { create(:deputy_director, name: 'dd name', division_id: division.id, id: 1+rand(10))}
                                                                                                             ^
spec/services/assignment_service_spec.rb:22:66: C: Layout/SpaceAfterComma: Space missing after comma.
  let(:pq) { create(:pq, uin: 'HL789', question: 'test question?',minister:minister, house_name:'commons') }
                                                                 ^
spec/services/assignment_service_spec.rb:22:75: C: Layout/SpaceAfterColon: Space missing after colon.
  let(:pq) { create(:pq, uin: 'HL789', question: 'test question?',minister:minister, house_name:'commons') }
                                                                          ^
spec/services/assignment_service_spec.rb:22:96: C: Layout/SpaceAfterColon: Space missing after colon.
  let(:pq) { create(:pq, uin: 'HL789', question: 'test question?',minister:minister, house_name:'commons') }
                                                                                               ^
spec/services/assignment_service_spec.rb:48:7: W: Lint/UselessAssignment: Useless assignment to variable - assignment. Did you mean assignment_id?
      assignment = ActionOfficersPq.find(assignment_id)
      ^^^^^^^^^^
spec/services/assignment_service_spec.rb:86:66: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      new_dir = create(:directorate, name: 'New Directorate', id:  Directorate.maximum(:id).next)
                                                                 ^
spec/services/assignment_service_spec.rb:87:33: C: Layout/SpaceAfterComma: Space missing after comma.
      new_div = create(:division,name: 'New Division', directorate_id: new_dir.id, id:  Division.maximum(:id).next)
                                ^
spec/services/assignment_service_spec.rb:88:91: C: Layout/SpaceAroundOperators: Surrounding space missing for operator +.
      new_dd = create(:deputy_director, name: 'dd name', division_id: new_div.id, id:   10+DeputyDirector.maximum(:id).next)
                                                                                          ^
spec/services/assignment_service_spec.rb:89:29: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      action_officer.update(:deputy_director_id => new_dd.id)
                            ^^^^^^^^^^^^^^^^^^^^^^
spec/services/assignment_service_spec.rb:108:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/services/mail_service_spec.rb:7:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  let!(:failed)  { create(:pq_email_failed)  }  
                                              ^^
spec/services/mail_service_spec.rb:25:1: C: Layout/EmptyLines: Extra blank line detected.
spec/services/mail_service_spec.rb:31:45: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    expect(default.send_attempted_at - Time.now).to be < 1
                                            ^^^
spec/services/mail_service_spec.rb:38:35: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
    expect(default.sent_at - Time.now).to be < 1
                                  ^^^
spec/services/mail_service_spec.rb:54:16: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    mail_data = 
               ^
spec/services/mail_service_spec.rb:56:20: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        default.to, 
                   ^
spec/services/mail_service_spec.rb:57:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        default.from, 
                     ^
spec/services/mail_service_spec.rb:68:1: C: Layout/TrailingBlankLines: 1 trailing blank lines detected.
spec/services/quick_actions_service_spec.rb:4:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/services/quick_actions_service_spec.rb:9:54: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
  let!(:pq_with_minister) { create(:with_minister_pq)}
                                                     ^
spec/services/quick_actions_service_spec.rb:13:27: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    @quick_actions_service               = QuickActionsService.new
                          ^^^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:13:42: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    @quick_actions_service               = QuickActionsService.new
                                         ^
spec/services/quick_actions_service_spec.rb:14:18: C: Style/EmptyLiteral: Use array literal [] instead of Array.new.
    @pqs_array = Array.new
                 ^^^^^^^^^
spec/services/quick_actions_service_spec.rb:22:6: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "Validates a single PQ" do
     ^^^^^^^^^^^^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:42:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "Does validate a list of valid PQs with all valid dates" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:43:21: C: Style/EmptyLiteral: Use array literal [] instead of Array.new.
      @pqs_array2 = Array.new
                    ^^^^^^^^^
spec/services/quick_actions_service_spec.rb:49:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "updates internal_deadline date for a list of valid pqs." do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:53:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(result_pq.internal_deadline).to eq("21/01/2016")
                                                ^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:56:7: C: Layout/CommentIndentation: Incorrect indentation detected (column 6 instead of 4).
      #Internal deadline does not change question state - the following dates do...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:56:7: C: Layout/LeadingCommentSpace: Missing space after #.
      #Internal deadline does not change question state - the following dates do...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:58:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "updates draft_answer_received date and therefore state for a list of valid pqs." do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:60:84: C: Layout/SpaceBeforeComma: Space found before comma.
      @quick_actions_service.update_pq_list(pq_list, '21/01/2016', '22/01/2016', '' ,'', '')
                                                                                   ^
spec/services/quick_actions_service_spec.rb:60:85: C: Layout/SpaceAfterComma: Space missing after comma.
      @quick_actions_service.update_pq_list(pq_list, '21/01/2016', '22/01/2016', '' ,'', '')
                                                                                    ^
spec/services/quick_actions_service_spec.rb:62:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(result_pq.draft_answer_received).to eq("22/01/2016")
                                                    ^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:65:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "updates pod_clearance date and therefore state for a list of valid pqs." do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:67:94: C: Layout/SpaceBeforeComma: Space found before comma.
      @quick_actions_service.update_pq_list(pq_list, '21/01/2016', '22/01/2016', '23/01/2016' ,'', '')
                                                                                             ^
spec/services/quick_actions_service_spec.rb:67:95: C: Layout/SpaceAfterComma: Space missing after comma.
      @quick_actions_service.update_pq_list(pq_list, '21/01/2016', '22/01/2016', '23/01/2016' ,'', '')
                                                                                              ^
spec/services/quick_actions_service_spec.rb:69:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(result_pq.pod_clearance).to eq("23/01/2016")
                                            ^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:72:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "updates cleared_by_answering_minister date and therefore state for a list of valid pqs." do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:75:94: C: Layout/SpaceBeforeComma: Space found before comma.
      @quick_actions_service.update_pq_list(pq_list, '21/01/2016', '22/01/2016', '23/01/2016' ,'24/01/2016', '')
                                                                                             ^
spec/services/quick_actions_service_spec.rb:75:95: C: Layout/SpaceAfterComma: Space missing after comma.
      @quick_actions_service.update_pq_list(pq_list, '21/01/2016', '22/01/2016', '23/01/2016' ,'24/01/2016', '')
                                                                                              ^
spec/services/quick_actions_service_spec.rb:77:61: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(result_pq.cleared_by_answering_minister).to eq("24/01/2016")
                                                            ^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:80:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "updates answer_submitted date and therefore state for a list of valid pqs." do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:83:94: C: Layout/SpaceBeforeComma: Space found before comma.
      @quick_actions_service.update_pq_list(pq_list, '21/01/2016', '22/01/2016', '23/01/2016' ,'24/01/2016', '25/01/2016')
                                                                                             ^
spec/services/quick_actions_service_spec.rb:83:95: C: Layout/SpaceAfterComma: Space missing after comma.
      @quick_actions_service.update_pq_list(pq_list, '21/01/2016', '22/01/2016', '23/01/2016' ,'24/01/2016', '25/01/2016')
                                                                                              ^
spec/services/quick_actions_service_spec.rb:85:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(result_pq.answer_submitted).to eq("25/01/2016")
                                               ^^^^^^^^^^^^
spec/services/quick_actions_service_spec.rb:90:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/services/quick_actions_service_spec.rb:91:1: C: Layout/EmptyLines: Extra blank line detected.
spec/services/quick_actions_service_spec.rb:99:21: C: Style/EmptyLiteral: Use array literal [] instead of Array.new.
      @pqs_array2 = Array.new
                    ^^^^^^^^^
spec/services/quick_actions_service_spec.rb:104:21: C: Style/EmptyLiteral: Use array literal [] instead of Array.new.
      @pqs_array2 = Array.new
                    ^^^^^^^^^
spec/services/quick_actions_service_spec.rb:111:21: C: Style/EmptyLiteral: Use array literal [] instead of Array.new.
      @pqs_array2 = Array.new
                    ^^^^^^^^^
spec/services/quick_actions_service_spec.rb:117:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/services/quick_actions_service_spec.rb:119:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/health_check/database_spec.rb:19:7: W: Lint/AmbiguousBlockAssociation: Parenthesize the param be { :accessible? } to make sure that the block will be associated with the be method call.
      expect(db).to be { :accessible? }
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/health_check/database_spec.rb:35:9: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
        'Database Error: could not connect to parliamentary-questions_test ' + ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/health_check/database_spec.rb:35:78: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        'Database Error: could not connect to parliamentary-questions_test ' +
                                                                             ^
spec/health_check/database_spec.rb:37:7: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
      ])
      ^
spec/health_check/database_spec.rb:44:48: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
      expect(db.error_messages.first).to match /Error: StandardError\nDetails/
                                               ^
spec/health_check/pqa_api_spec.rb:6:1: C: Layout/EmptyLines: Extra blank line detected.
spec/health_check/pqa_api_spec.rb:71:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/health_check/pqa_api_spec.rb:72:49: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
      expect(pqa.error_messages.first).to match /Error: StandardError\nDetails/
                                                ^
spec/health_check/pqa_api_spec.rb:76:1: C: Layout/EmptyLines: Extra blank line detected.
spec/health_check/pqa_api_spec.rb:84:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/health_check/pqa_api_spec.rb:87:46: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
        pqa.instance_variable_set(:@errors, [ 'First error message', 'Second error message' ] )
                                             ^
spec/health_check/pqa_api_spec.rb:87:92: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
        pqa.instance_variable_set(:@errors, [ 'First error message', 'Second error message' ] )
                                                                                           ^
spec/health_check/pqa_api_spec.rb:87:94: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        pqa.instance_variable_set(:@errors, [ 'First error message', 'Second error message' ] )
                                                                                             ^
spec/health_check/pqa_api_spec.rb:95:1: C: Layout/EmptyLines: Extra blank line detected.
spec/health_check/pqa_api_spec.rb:97:55: C: Style/SymbolProc: Pass &:gets as an argument to open instead of a block.
  File.open(HealthCheck::PqaApi::TIMESTAMP_FILE, 'r') do |fp| ...
                                                      ^^^^^^^
spec/health_check/pqa_api_spec.rb:102:1: C: Layout/EmptyLines: Extra blank line detected.
spec/health_check/pqa_api_spec.rb:103:1: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
def delete_timestamp_file
^^^
spec/health_check/pqa_api_spec.rb:104:3: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
  if File.exist?(HealthCheck::PqaApi::TIMESTAMP_FILE)
  ^^
spec/health_check/pqa_api_spec.rb:104:3: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
  if File.exist?(HealthCheck::PqaApi::TIMESTAMP_FILE)
  ^^
spec/health_check/send_grid_spec.rb:28:17: C: Layout/SpaceAfterComma: Space missing after comma.
        .with('','', :login)
                ^
spec/health_check/send_grid_spec.rb:36:17: C: Layout/SpaceAfterComma: Space missing after comma.
        .with('','', :login)
                ^
spec/health_check/send_grid_spec.rb:58:55: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
      expect(send_grid.error_messages.first).to match /Error: StandardError\nDetails/
                                                      ^
spec/health_check/mail_worker_spec.rb:41:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
spec/health_check/mail_worker_spec.rb:69:52: W: Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the / if it should be a division.
      expect(worker.error_messages.first).to match /Error: StandardError\nDetails/
                                                   ^
spec/health_check/mail_worker_spec.rb:72:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
spec/feature_helper.rb:1:5: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= 'test'
    ^^^^^^^^^^^
spec/feature_helper.rb:3:14: C: Style/ExpandPathArguments: Use expand_path('../config/environment', __dir__) instead of expand_path('../../config/environment', __FILE__).
require File.expand_path("../../config/environment", __FILE__)
             ^^^^^^^^^^^
spec/feature_helper.rb:3:26: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require File.expand_path("../../config/environment", __FILE__)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature_helper.rb:15:42: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
  Capybara::Poltergeist::Driver.new(app, { ...
                                         ^
spec/feature_helper.rb:16:5: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
    phantomjs_logger: File.new('/dev/null', 'a'),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature_helper.rb:18:3: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
  })
  ^
lib/metrics/component.rb:6:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      # 
       ^
lib/metrics/component.rb:12:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/metrics/application.rb:16:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/metrics/key_metric.rb:4:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/metrics/key_metric.rb:13:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/metrics/health.rb:3:28: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    attr_reader :db_status, 
                           ^
lib/metrics/health.rb:4:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                :sendgrid_status, 
                                 ^
lib/metrics/health.rb:5:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                :pqa_api_status, 
                                ^
lib/metrics/health.rb:16:9: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
    def get_db_status
        ^^^^^^^^^^^^^
lib/metrics/health.rb:22:9: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
    def get_sendgrid_status
        ^^^^^^^^^^^^^^^^^^^
lib/metrics/health.rb:28:9: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
    def get_pqa_api_status
        ^^^^^^^^^^^^^^^^^^
lib/metrics/health.rb:54:14: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
        File.exists?(DEFAULT_PATH) ? new(DEFAULT_PATH) : nil
             ^^^^^^^
lib/metrics/health.rb:67:7: C: Layout/ClassStructure: initializer is supposed to appear before public_methods.
      def initialize(path) ...
      ^^^^^^^^^^^^^^^^^^^^
lib/metrics/health.rb:68:28: C: Style/TrailingUnderscoreVariable: Do not use trailing _s in parallel assignment. Prefer timestamp, status, = File.read(path).split('::').
        timestamp, status, _ = File.read(path).split('::')
                           ^^
lib/metrics/health.rb:69:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/metrics/health.rb:70:34: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using timestamp.to_i, use stricter Integer(timestamp, 10).
        @last_run_time = Time.at(timestamp.to_i).utc
                                 ^^^^^^^^^^^^^^
lib/metrics/health.rb:75:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/metrics/pqa_import.rb:6:11: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      @pqs  = NumPqsImported.new
          ^
lib/metrics/pqa_import.rb:6:13: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      @pqs  = NumPqsImported.new
            ^
lib/metrics/pqa_import.rb:21:5: C: Layout/ClassStructure: constants is supposed to appear before public_methods.
    NumPqsImported =  ...
    ^^^^^^^^^^^^^^^^^
lib/metrics/pqa_import.rb:21:21: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    NumPqsImported = 
                    ^
lib/metrics/pqa_import.rb:22:53: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      Struct.new(:today, :this_week, :this_month) do 
                                                    ^
lib/metrics/pqa_import.rb:24:15: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          new( 
              ^
lib/metrics/pqa_import.rb:38:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        start_time:     Time.at(0),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/metrics/pqa_import.rb:38:30: C: Rails/TimeZone: Do not use Time.at without zone. Use one of Time.zone.at, Time.current, Time.at.in_time_zone, Time.at.utc, Time.at.getlocal, Time.at.xmlschema, Time.at.iso8601, Time.at.jisx0301, Time.at.rfc3339, Time.at.httpdate, Time.at.to_i, Time.at.to_f instead.
        start_time:     Time.at(0),
                             ^^
lib/metrics/pqa_import.rb:39:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        end_time:       Time.at(0),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/metrics/pqa_import.rb:39:30: C: Rails/TimeZone: Do not use Time.at without zone. Use one of Time.zone.at, Time.current, Time.at.in_time_zone, Time.at.utc, Time.at.getlocal, Time.at.xmlschema, Time.at.iso8601, Time.at.jisx0301, Time.at.rfc3339, Time.at.httpdate, Time.at.to_i, Time.at.to_f instead.
        end_time:       Time.at(0),
                             ^^
lib/metrics/pqa_import.rb:40:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        status:         'FAIL',
        ^^^^^^^^^^^^^^^^^^^^^^
lib/metrics/pqa_import.rb:41:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        num_created:    0,
        ^^^^^^^^^^^^^^^^^
lib/metrics/pqa_import.rb:42:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        num_updated:    0,
        ^^^^^^^^^^^^^^^^^
lib/metrics/pqa_import.rb:47:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/metrics/smoke_tests.rb:6:16: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      @run_time     = Time.use_zone('London') { SmokeTestRunner.run_time.in_time_zone } 
               ^^^^
lib/metrics/smoke_tests.rb:6:21: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      @run_time     = Time.use_zone('London') { SmokeTestRunner.run_time.in_time_zone } 
                    ^
lib/metrics/smoke_tests.rb:6:88: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @run_time     = Time.use_zone('London') { SmokeTestRunner.run_time.in_time_zone } 
                                                                                       ^
lib/metrics/smoke_tests.rb:14:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/metrics/mail.rb:3:30: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    attr_reader :num_waiting, 
                             ^
lib/metrics/mail.rb:4:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
                :num_abandoned, 
                               ^
lib/metrics/mail.rb:16:73: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      num_waiting >= Settings.gecko_warning_levels.num_emails_waiting || 
                                                                        ^
lib/metrics/mail.rb:24:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/pq_state/progress_changer.rb:2:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for progress_changer is too high. [11/6]
  def self.progress_changer ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pq_state/progress_changer.rb:2:3: C: Metrics/MethodLength: Method has too many lines. [44/30]
  def self.progress_changer ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pq_state/progress_changer.rb:5:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:10:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:12:41: C: Style/SymbolProc: Pass &:rejected? as an argument to Transition instead of a block.
      Transition(NO_RESPONSE, REJECTED) do |pq| ...
                                        ^^^^^^^
lib/pq_state/progress_changer.rb:15:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:16:41: C: Style/SymbolProc: Pass &:no_response? as an argument to Transition instead of a block.
      Transition(REJECTED, NO_RESPONSE) do |pq| ...
                                        ^^^^^^^
lib/pq_state/progress_changer.rb:19:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:24:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:27:9: C: Style/DoubleNegation: Avoid the use of double negation (!!).
        !!pq.draft_answer_received
        ^
lib/pq_state/progress_changer.rb:29:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:32:9: C: Style/DoubleNegation: Avoid the use of double negation (!!).
        !!pq.pod_query_flag
        ^
lib/pq_state/progress_changer.rb:34:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:39:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:43:11: C: Style/DoubleNegation: Avoid the use of double negation (!!).
          !!pq.sent_to_answering_minister
          ^
lib/pq_state/progress_changer.rb:45:11: C: Style/DoubleNegation: Avoid the use of double negation (!!).
          !!(pq.sent_to_answering_minister && pq.sent_to_policy_minister)
          ^
lib/pq_state/progress_changer.rb:48:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:53:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:59:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:64:1: C: Layout/EmptyLinesAroundArguments: Empty line detected around arguments.
lib/pq_state/progress_changer.rb:72:12: C: Naming/MethodName: Use snake_case for method names.
  def self.Transition(from, to, &block)
           ^^^^^^^^^^
lib/pq_state/progress_changer.rb:76:1: C: Layout/TrailingBlankLines: 1 trailing blank lines detected.
lib/pq_state/state_machine.rb:33:27: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def next_state(state, pq)
                          ^^
lib/pq_state/state_machine.rb:36:9: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
        break unless transition_onwards
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pq_state/state_machine.rb:45:37: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def available_transition(state, pq)
                                    ^^
lib/pq_state/state_machine.rb:51:7: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      unless states.include?(from_state)
      ^^^^^^
lib/pq_state/state_machine.rb:53:7: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      end
      ^^^
lib/pq_state/state_machine.rb:58:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      @states ||= @transitions.reduce(Set.new) do |acc, t| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pq_state/transition.rb:11:16: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def valid?(pq)
               ^^
lib/pq_state/transition.rb:24:37: C: Performance/ChainArrayAllocation: Use product...map! instead of product...map.
      state_froms.product(state_tos).map do | from, to|
                                    ^^^^
lib/pq_state/transition.rb:24:46: C: Layout/SpaceAroundBlockParameters: Space before first block parameter detected.
      state_froms.product(state_tos).map do | from, to|
                                             ^
lib/pq_state/validator.rb:12:20: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def initialize(ts, final_states)
                   ^^
lib/pq_state/validator.rb:19:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      dead_ends = remove_cyclic_transitions(@transitions).select do |t| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pq_state/validator.rb:27:9: C: Naming/PredicateName: Rename has_dead_end? to dead_end?.
    def has_dead_end?(state_from, visited = [])
        ^^^^^^^^^^^^^
lib/pq_state/validator.rb:28:32: W: Lint/UnderscorePrefixedVariableName: Do not use prefix _ for a variable that is used.
      t = @transitions.find { |_t| _t.state_from == state_from }
                               ^^
lib/pq_state/validator.rb:30:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if t && is_cyclic_link?(visited, t)
      ^^
lib/pq_state/validator.rb:31:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        t = next_transition(t) 
                              ^
lib/pq_state/validator.rb:34:7: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      unless t
      ^^^^^^
lib/pq_state/validator.rb:36:7: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      end
      ^^^
lib/pq_state/validator.rb:47:25: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def next_transition(t)
                        ^
lib/pq_state/validator.rb:48:29: W: Lint/UnderscorePrefixedVariableName: Do not use prefix _ for a variable that is used.
      @transitions.find do |_t|
                            ^^
lib/pq_state/validator.rb:65:35: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def remove_cyclic_transitions(ts)
                                  ^^
lib/pq_state/validator.rb:75:9: C: Naming/PredicateName: Rename is_cyclic_link? to cyclic_link?.
    def is_cyclic_link?(ts, t2)
        ^^^^^^^^^^^^^^^
lib/pq_state/validator.rb:75:25: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def is_cyclic_link?(ts, t2)
                        ^^
lib/pq_state/validator.rb:75:29: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def is_cyclic_link?(ts, t2)
                            ^^
lib/pq_state/validator.rb:76:52: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      ts.any? { |t| t.to_pair.reverse == t2.to_pair  }
                                                   ^
lib/smoke_test/base.rb:12:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/smoke_test/base.rb:14:7: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      unless ENV['TEST_USER_PASS'] && ENV['TEST_USER']
      ^^^^^^
lib/smoke_test/base.rb:15:9: C: Style/ImplicitRuntimeError: Use raise with an explicit exception class and message, rather than just a message.
        raise 'TEST_USER & TEST_USER_PASS env variables must be set to run smoke tests' 
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/smoke_test/base.rb:15:88: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        raise 'TEST_USER & TEST_USER_PASS env variables must be set to run smoke tests' 
                                                                                       ^
lib/smoke_test/base.rb:27:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/smoke_test/base.rb:41:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/smoke_test/base.rb:49:5: C: Layout/ClassStructure: initializer is supposed to appear before protected_methods.
    def initialize(app_url, user, pass) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/smoke_test/base.rb:61:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          m.agent.http.verify_mode = OpenSSL::SSL::VERIFY_PEER  
                                                              ^^
lib/smoke_test/base.rb:77:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/smoke_test/report.rb:4:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/smoke_test/report.rb:8:35: C: Style/DoubleNegation: Avoid the use of double negation (!!).
      agent.page.code == '200' && !!(agent.page.body =~ /Press desk report/)
                                  ^
lib/smoke_test/report.rb:11:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/smoke_test/statistics.rb:4:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/smoke_test/statistics.rb:8:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      agent.page.code == '200' && 
                                 ^
lib/smoke_test/statistics.rb:9:9: C: Style/DoubleNegation: Avoid the use of double negation (!!).
        !!(agent.page.body =~ /Question duration in phases/)
        ^
lib/smoke_test/statistics.rb:12:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/smoke_test/dashboard.rb:4:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/smoke_test/dashboard.rb:6:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      agent.page.code == '200' && 
                                 ^
lib/smoke_test/dashboard.rb:8:11: C: Layout/MultilineOperationIndentation: Use 2 (not 4) spaces for indenting an expression spanning multiple lines.
          !!(agent.page.body =~ /Filter/)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/smoke_test/dashboard.rb:8:11: C: Style/DoubleNegation: Avoid the use of double negation (!!).
          !!(agent.page.body =~ /Filter/)
          ^
lib/tasks/email.rake:3:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :process_queue => :environment do
       ^^^^^^^^^^^^^^^^^
lib/tasks/email.rake:6:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/tasks/smoke_test.rake:3:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :run => :environment do
       ^^^^^^^
lib/tasks/smoke_test.rake:11:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/tasks/brakeman.rake:2:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
lib/tasks/brakeman.rake:3:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "Run Brakeman"
       ^^^^^^^^^^^^^^
lib/tasks/brakeman.rake:4:32: W: Lint/UnusedBlockArgument: Unused block argument - t. If it's necessary, use _ or _t as an argument name to indicate that it won't be used.
  task :run, :output_files do |t, args|
                               ^
lib/tasks/brakeman.rake:8:18: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    Brakeman.run :app_path => ".", :output_files => files, :print_report => true
                 ^^^^^^^^^^^^
lib/tasks/brakeman.rake:8:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    Brakeman.run :app_path => ".", :output_files => files, :print_report => true
                              ^^^
lib/tasks/brakeman.rake:8:36: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    Brakeman.run :app_path => ".", :output_files => files, :print_report => true
                                   ^^^^^^^^^^^^^^^^
lib/tasks/brakeman.rake:8:60: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    Brakeman.run :app_path => ".", :output_files => files, :print_report => true
                                                           ^^^^^^^^^^^^^^^^
lib/tasks/user.rake:2:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
lib/tasks/user.rake:4:64: W: Lint/UnusedBlockArgument: Unused block argument - t. If it's necessary, use _ or _t as an argument name to indicate that it won't be used.
  task :create, [:email, :password, :name] => :environment do |t, args|
                                                               ^
lib/tasks/user.rake:5:5: C: Style/ImplicitRuntimeError: Use raise with an explicit exception class and message, rather than just a message.
    raise 'This task should NOT be run in a production environment' if HostEnv.is_live?
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/user.rake:8:5: C: Style/ParallelAssignment: Do not use parallel assignment.
    email, password, name = args[:email], args[:password],  args[:name]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/user.rake:8:59: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    email, password, name = args[:email], args[:password],  args[:name]
                                                          ^
lib/tasks/staging_sync.rake:4:10: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    task :sync => :environment do
         ^^^^^^^^
lib/tasks/bugfix.rake:3:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :check_aos => :environment do
       ^^^^^^^^^^^^^
lib/tasks/bugfix.rake:5:7: C: Style/Next: Use next to skip iteration.
      unless pq.valid?
      ^^^^^^^^^^^^^^^^
lib/tasks/bugfix.rake:14:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/bugfix.rake:16:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :ao_fix => :environment do
       ^^^^^^^^^^
lib/tasks/bugfix.rake:26:9: C: Style/Next: Use next to skip iteration.
        unless ao.name == ao_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/bugfix.rake:27:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          aopq = ActionOfficersPq.where("pq_id = ? AND action_officer_id = ?", pq.id, ao.id).first
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/bugfix.rake:37:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :delete_25231_IWW => :environment do
       ^^^^^^^^^^^^^^^^^^^^
lib/tasks/bugfix.rake:38:10: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_uin.
    pq = Pq.find_by_uin("25231-IWW")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/bugfix.rake:38:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    pq = Pq.find_by_uin("25231-IWW")
                        ^^^^^^^^^^^
lib/tasks/bugfix.rake:39:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ActionOfficersPq.where("pq_id = ?", pq.id).map(&:destroy)
                           ^^^^^^^^^^^
lib/tasks/bugfix.rake:40:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    puts "Deleted AO Link(s)"
         ^^^^^^^^^^^^^^^^^^^^
lib/tasks/bugfix.rake:43:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    puts "Deleted UIN"
         ^^^^^^^^^^^^^
lib/tasks/bugfix.rake:45:19: C: Rails/DynamicFindBy: Use find_by instead of dynamic find_by_uin.
    pq_original = Pq.find_by_uin("25231")
                  ^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/bugfix.rake:45:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    pq_original = Pq.find_by_uin("25231")
                                 ^^^^^^^
lib/tasks/bugfix.rake:48:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    puts "Saved Original UIN as non IWW"
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/bugfix.rake:52:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :prefix_uins => :environment do
       ^^^^^^^^^^^^^^^
lib/tasks/bugfix.rake:54:56: C: Rails/SkipsModelValidations: Avoid using update_all because it skips validations.
    Pq.where.not(("uin SIMILAR TO '(#|[ESCAPE *])%'")).update_all("uin='$'||uin")
                                                       ^^^^^^^^^^
lib/tasks/bugfix.rake:55:52: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
    puts "Number of uins with $ prefix #{(Pq.where("uin like ?","$%").count)} "
                                                   ^^^^^^^^^^^^
lib/tasks/bugfix.rake:55:64: C: Layout/SpaceAfterComma: Space missing after comma.
    puts "Number of uins with $ prefix #{(Pq.where("uin like ?","$%").count)} "
                                                               ^
lib/tasks/bugfix.rake:55:65: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
    puts "Number of uins with $ prefix #{(Pq.where("uin like ?","$%").count)} "
                                                                ^^^^
lib/tasks/bugfix.rake:59:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/bugfix.rake:59:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
lib/tasks/bugfix.rake:61:1: C: Layout/TrailingBlankLines: 1 trailing blank lines detected.
lib/tasks/brake.rake:2:15: C: Layout/TrailingWhitespace: Trailing whitespace detected.
task :brake do 
              ^
lib/tasks/brake.rake:7:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  SUCCESS_MESSAGE = "Brakeman detected no warnings"
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/brake.rake:8:157: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
  ERROR_MESSAGE   = "WARNING!!! Brakeman detected errors:  If these can be SAFELY ignored, run in interactive mode (-I) to add to config/brakeman.ignore\n" +
                                                                                                                                                            ^
lib/tasks/brake.rake:9:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                    "View file brakeman_out.txt for details of errors."
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/brake.rake:18:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/tasks/import.rake:2:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "Perform nightly import"
       ^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/import.rake:25:24: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    args.with_defaults(:uin_prefix => "uin", :n_records => 1)
                       ^^^^^^^^^^^^^^
lib/tasks/import.rake:25:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    args.with_defaults(:uin_prefix => "uin", :n_records => 1)
                                      ^^^^^
lib/tasks/import.rake:25:46: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    args.with_defaults(:uin_prefix => "uin", :n_records => 1)
                                             ^^^^^^^^^^^^^
lib/tasks/import.rake:29:5: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
    questions = (1..n_records.to_i).map do |n| ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/import.rake:29:21: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using n_records.to_i, use stricter Integer(n_records, 10).
    questions = (1..n_records.to_i).map do |n|
                    ^^^^^^^^^^^^^^
lib/tasks/import.rake:36:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "Import questions from XML file"
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/import.rake:40:5: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
    raise ArgumentError, "Cannot find file #{fpath}" unless File.exists?(fpath)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/import.rake:40:66: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
    raise ArgumentError, "Cannot find file #{fpath}" unless File.exists?(fpath)
                                                                 ^^^^^^^
lib/tasks/import.rake:51:19: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using n_records.to_i, use stricter Integer(n_records, 10).
      n_records = n_records.to_i if n_records.is_a?(String)
                  ^^^^^^^^^^^^^^
lib/tasks/import.rake:62:10: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    task :api_stop => :environment do
         ^^^^^^^^^^^^
lib/tasks/import.rake:63:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      pid_filepath = "/tmp/mock_api_server.pid"
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/import.rake:64:15: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
      if File.exists?(pid_filepath)
              ^^^^^^^
lib/tasks/import.rake:65:14: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
        pid  = File.read(pid_filepath)
             ^
lib/tasks/import.rake:67:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        result = Process.kill("INT", pid.to_i)
                              ^^^^^
lib/tasks/import.rake:67:38: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using pid.to_i, use stricter Integer(pid, 10).
        result = Process.kill("INT", pid.to_i)
                                     ^^^^^^^^
lib/tasks/import.rake:70:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          puts "Process killed"
               ^^^^^^^^^^^^^^^^
lib/tasks/import.rake:72:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          puts "Unable to kill process - try manually"
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/import.rake:75:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        puts "No pid file found for mock-api server - nothing to kill."
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/import.rake:78:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
lib/tasks/early_bird.rake:2:8: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "Queue Early Bird Emails"
       ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/early_bird.rake:4:3: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
  begin
  
lib/tasks/early_bird.rake:5:5: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
    if PqaImportRun.ready_for_early_bird
    
lib/tasks/early_bird.rake:6:16: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      if (Date.today < Date.new(2018, 7, 31)) or (Date.today > Date.new(2019, 1, 6))
               ^^^^^
lib/tasks/early_bird.rake:6:47: C: Style/AndOr: Use || instead of or.
      if (Date.today < Date.new(2018, 7, 31)) or (Date.today > Date.new(2019, 1, 6))
                                              ^^
lib/tasks/early_bird.rake:6:56: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
      if (Date.today < Date.new(2018, 7, 31)) or (Date.today > Date.new(2019, 1, 6))
                                                       ^^^^^
lib/tasks/early_bird.rake:7:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        LogStuff.info { "Early Bird: Preparing to queue early bird mails" }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/early_bird.rake:10:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        LogStuff.info { "Early Bird: mails queued" }
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/early_bird.rake:11:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        puts "Early Bird: mails queued"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/early_bird.rake:13:25: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        LogStuff.info { "Early Bird: Should not run - We are in a recess"}
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/early_bird.rake:13:74: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
        LogStuff.info { "Early Bird: Should not run - We are in a recess"}
                                                                         ^
lib/tasks/early_bird.rake:14:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        puts "Early Bird: Should not run - We are in a recess"
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/early_bird.rake:17:23: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      LogStuff.info { "Early Bird: Did not run - PqaImportRun.ready_for_early_bird returned false"}
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/early_bird.rake:17:99: C: Layout/SpaceInsideBlockBraces: Space missing inside }.
      LogStuff.info { "Early Bird: Did not run - PqaImportRun.ready_for_early_bird returned false"}
                                                                                                  ^
lib/tasks/early_bird.rake:18:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "Early Bird: Did not run - PqaImportRun.ready_for_early_bird returned false"
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/early_bird.rake:21:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      LogStuff.error { "Early Bird: " + err.message }
  ^^^^
lib/tasks/early_bird.rake:21:24: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      LogStuff.error { "Early Bird: " + err.message }
                       ^^^^^^^^^^^^^^
lib/tasks/early_bird.rake:22:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      puts "Early Bird:" + err.message
           ^^^^^^^^^^^^^
lib/tasks/demo.rake:2:1: C: Layout/LeadingBlankLines: Unnecessary blank line at the beginning of the source.
namespace :demo do
^^^^^^^^^
lib/tasks/demo.rake:3:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
lib/tasks/demo.rake:5:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :setup => :environment do
       ^^^^^^^^^
lib/tasks/demo.rake:13:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/demo.rake:15:8: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  task :training_setup => :environment do
       ^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:16:5: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
    if HostEnv.is_staging? || HostEnv.is_dev? || Rails.env.development?
    ^^
lib/tasks/demo.rake:21:7: C: Style/ImplicitRuntimeError: Use raise with an explicit exception class and message, rather than just a message.
      raise "DANGER!  This task updates the database. May only be run in staging or dev environments"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:21:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      raise "DANGER!  This task updates the database. May only be run in staging or dev environments"
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:28:8: C: Rails/SkipsModelValidations: Avoid using update_attribute because it skips validations.
  user.update_attribute(:email, 'rahul.meta@justice.gsi.gov.uk')
       ^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:38:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ao = ActionOfficer.where("name = ?", name).first
                             ^^^^^^^^^^
lib/tasks/demo.rake:39:8: C: Rails/SkipsModelValidations: Avoid using update_attribute because it skips validations.
    ao.update_attribute(:email, email)
       ^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:44:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/demo.rake:45:1: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
def allocate_division_to_ao(ao, division_id)
^^^
lib/tasks/demo.rake:45:29: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
def allocate_division_to_ao(ao, division_id)
                            ^^
lib/tasks/demo.rake:47:6: C: Rails/SkipsModelValidations: Avoid using update_attribute because it skips validations.
  ao.update_attribute(:deputy_director_id, division.deputy_directors.active.first.id)
     ^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:50:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/demo.rake:51:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/demo.rake:52:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/demo.rake:53:1: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
def setup_training_questions
^^^
lib/tasks/demo.rake:71:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/demo.rake:72:1: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
def duplicate_question(old_pq, new_uin)
^^^
lib/tasks/demo.rake:73:1: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
question = Pq.create!(

lib/tasks/demo.rake:73:1: W: Lint/UselessAssignment: Useless assignment to variable - question.
question = Pq.create!(
^^^^^^^^
lib/tasks/demo.rake:74:14: C: Layout/FirstParameterIndentation: Indent the first parameter one step more than the start of the previous line.
             :house_id => old_pq.house_id, ...
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:74:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
             :house_id => old_pq.house_id,
             ^^^^^^^^^^^^
lib/tasks/demo.rake:75:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :raising_member_id => old_pq.raising_member_id,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:75:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :raising_member_id => old_pq.raising_member_id,
    ^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:76:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          :tabled_date => 1.days.ago,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:76:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :tabled_date => 1.days.ago,
          ^^^^^^^^^^^^^^^
lib/tasks/demo.rake:76:27: C: Rails/PluralizationGrammar: Prefer 1.day.
          :tabled_date => 1.days.ago,
                          ^^^^^^
lib/tasks/demo.rake:77:14: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
             :question => old_pq.question,
             ^^^^^^^^^^^^
lib/tasks/demo.rake:78:19: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                  :uin => new_uin,
                  ^^^^^^^^^^^^^^^
lib/tasks/demo.rake:78:19: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                  :uin => new_uin,
                  ^^^^^^^
lib/tasks/demo.rake:79:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          :member_name => old_pq.member_name,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:79:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :member_name => old_pq.member_name,
          ^^^^^^^^^^^^^^^
lib/tasks/demo.rake:80:3: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
  :member_constituency => old_pq.member_constituency,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:80:3: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  :member_constituency => old_pq.member_constituency,
  ^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:81:12: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
           :house_name => old_pq.house_name,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:81:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
           :house_name => old_pq.house_name,
           ^^^^^^^^^^^^^^
lib/tasks/demo.rake:82:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :date_for_answer => 2.days.from_now,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:82:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :date_for_answer => 2.days.from_now,
      ^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:83:3: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
  :registered_interest => old_pq.registered_interest,
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:83:3: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  :registered_interest => old_pq.registered_interest,
  ^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:84:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        :question_type => old_pq.question_type,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:84:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :question_type => old_pq.question_type,
        ^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:85:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          :transferred => old_pq.transferred,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:85:11: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
          :transferred => old_pq.transferred,
          ^^^^^^^^^^^^^^^
lib/tasks/demo.rake:86:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      :question_status => "Tabled",
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:86:7: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      :question_status => "Tabled",
      ^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:86:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      :question_status => "Tabled",
                          ^^^^^^^^
lib/tasks/demo.rake:87:17: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                :state => "unassigned",
                ^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:87:17: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                :state => "unassigned",
                ^^^^^^^^^
lib/tasks/demo.rake:87:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                :state => "unassigned",
                          ^^^^^^^^^^^^
lib/tasks/demo.rake:88:10: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
         :state_weight => 0
         ^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:88:10: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
         :state_weight => 0
         ^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:89:3: C: Layout/ClosingParenthesisIndentation: Indent ) to column 11 (not 2)
  )
  ^
lib/tasks/demo.rake:92:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/demo.rake:93:1: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
def delete_existing_demo_questions
^^^
lib/tasks/demo.rake:98:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/demo.rake:99:1: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
def populate_seeds
^^^
lib/tasks/demo.rake:100:24: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
  seed_question_uins = %w{ 201828 208682 209418 209416 210144 }
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:100:27: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  seed_question_uins = %w{ 201828 208682 209418 209416 210144 }
                          ^
lib/tasks/demo.rake:100:62: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  seed_question_uins = %w{ 201828 208682 209418 209416 210144 }
                                                             ^
lib/tasks/demo.rake:106:1: C: Layout/EmptyLines: Extra blank line detected.
lib/tasks/demo.rake:107:1: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
def create_question(i, seed_question)
^^^
lib/tasks/demo.rake:107:21: W: Lint/UnusedMethodArgument: Unused method argument - i. If it's necessary, use _ or _i as an argument name to indicate that it won't be used.
def create_question(i, seed_question)
                    ^
lib/tasks/demo.rake:107:21: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
def create_question(i, seed_question)
                    ^
lib/tasks/demo.rake:108:10: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using seed_question.uin.to_i, use stricter Integer(seed_question.uin, 10).
  uin = (seed_question.uin.to_i + 600000).to_s
         ^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:108:35: C: Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
  uin = (seed_question.uin.to_i + 600000).to_s
                                  ^^^^^^
lib/tasks/demo.rake:110:3: W: Lint/UselessAssignment: Useless assignment to variable - question.
  question = Pq.create!(
  ^^^^^^^^
lib/tasks/demo.rake:111:42: C: Layout/FirstParameterIndentation: Indent the first parameter one step more than the start of the previous line.
                                         :house_id => nil, ...
                                         ^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:111:42: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                         :house_id => nil,
                                         ^^^^^^^^^^^^
lib/tasks/demo.rake:112:33: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                :raising_member_id => 2479,
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:112:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                :raising_member_id => 2479,
                                ^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:113:39: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                      :tabled_date => 1.days.ago,
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:113:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                      :tabled_date => 1.days.ago,
                                      ^^^^^^^^^^^^^^^
lib/tasks/demo.rake:113:55: C: Rails/PluralizationGrammar: Prefer 1.day.
                                      :tabled_date => 1.days.ago,
                                                      ^^^^^^
lib/tasks/demo.rake:114:42: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                         :question => seed_question.question,
                                         ^^^^^^^^^^^^
lib/tasks/demo.rake:115:34: C: Layout/CommentIndentation: Incorrect indentation detected (column 33 instead of 46).
                                 # :seen_by_finance => true,
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:116:47: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                              :uin => uin,
                                              ^^^^^^^^^^^
lib/tasks/demo.rake:116:47: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                              :uin => uin,
                                              ^^^^^^^
lib/tasks/demo.rake:117:39: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                      :member_name => seed_question.member_name,
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:117:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                      :member_name => seed_question.member_name,
                                      ^^^^^^^^^^^^^^^
lib/tasks/demo.rake:118:31: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                              :member_constituency => seed_question.member_constituency,
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:118:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                              :member_constituency => seed_question.member_constituency,
                              ^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:119:40: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                       :house_name => "House of Commons",
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:119:40: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                       :house_name => "House of Commons",
                                       ^^^^^^^^^^^^^^
lib/tasks/demo.rake:119:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                       :house_name => "House of Commons",
                                                      ^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:120:35: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                  :date_for_answer => 2.days.from_now,
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:120:35: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                  :date_for_answer => 2.days.from_now,
                                  ^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:121:31: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                              :registered_interest => false,
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:121:31: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                              :registered_interest => false,
                              ^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:122:37: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                    :question_type => seed_question.question_type,
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:122:37: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                    :question_type => seed_question.question_type,
                                    ^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:123:39: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                      :transferred => false,
                                      ^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:123:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                      :transferred => false,
                                      ^^^^^^^^^^^^^^^
lib/tasks/demo.rake:124:35: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                  :question_status => "Tabled",
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:124:35: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                  :question_status => "Tabled",
                                  ^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:124:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                  :question_status => "Tabled",
                                                      ^^^^^^^^
lib/tasks/demo.rake:125:45: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                            :state => "unassigned",
                                            ^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:125:45: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                            :state => "unassigned",
                                            ^^^^^^^^^
lib/tasks/demo.rake:125:55: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
                                            :state => "unassigned",
                                                      ^^^^^^^^^^^^
lib/tasks/demo.rake:126:38: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
                                     :state_weight => 0
                                     ^^^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:126:38: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
                                     :state_weight => 0
                                     ^^^^^^^^^^^^^^^^
lib/tasks/demo.rake:127:3: C: Layout/ClosingParenthesisIndentation: Indent ) to column 39 (not 2)
  )
  ^
lib/pq_statistics/percent_on_time.rb:7:6: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    # 
     ^
lib/pq_statistics/percent_on_time.rb:19:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def calculate_from(date)
    ^^^
lib/pq_statistics/percent_on_time.rb:26:20: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      submissions = 
                   ^
lib/pq_statistics/percent_on_time.rb:28:53: C: Style/DateTime: Do not use #to_datetime.
          PqSubmission.new(submitted, (submitted <= deadline.to_datetime.end_of_day))
                                                    ^^^^^^^^^^^^^^^^^^^^
lib/pq_statistics/percent_on_time.rb:41:48: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    PqSubmission = Struct.new(:date, :on_time?)   
                                               ^^^
lib/log_stuff.rb:1:1: W: Lint/UnneededRequireStatement: Remove unnecessary require statement.
require 'thread'
^^^^^^^^^^^^^^^^
lib/log_stuff.rb:12:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
        :current_fields => {},
        ^^^^^^^^^^^^^^^^^^^^^
lib/log_stuff.rb:12:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :current_fields => {},
        ^^^^^^^^^^^^^^^^^^
lib/log_stuff.rb:13:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :current_tags => Set.new
        ^^^^^^^^^^^^^^^^
lib/log_stuff.rb:20:9: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the start of the line where the left curly brace is.
        :current_fields => {},
        ^^^^^^^^^^^^^^^^^^^^^
lib/log_stuff.rb:20:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :current_fields => {},
        ^^^^^^^^^^^^^^^^^^
lib/log_stuff.rb:21:9: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        :current_tags => Set.new
        ^^^^^^^^^^^^^^^^
lib/log_stuff.rb:26:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for log is too high. [9/6]
  def self.log(severity = 'info', *args, &block) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/log_stuff.rb:29:8: C: Style/RedundantSelf: Redundant self detected.
    if self.use_logstasher?
       ^^^^^^^^^^^^^^^^^^^^
lib/log_stuff.rb:30:39: C: Style/Send: Prefer Object#__send__ or Object#public_send to send.
      return unless LogStasher.logger.send("#{severity}?")
                                      ^^^^
lib/log_stuff.rb:32:34: C: Style/Send: Prefer Object#__send__ or Object#public_send to send.
      return unless Rails.logger.send("#{severity}?")
                                 ^^^^
lib/log_stuff.rb:39:9: C: Layout/CaseIndentation: Indent when as deep as case.
        when Hash
        ^^^^
lib/log_stuff.rb:41:9: C: Layout/CaseIndentation: Indent when as deep as case.
        when Symbol
        ^^^^
lib/log_stuff.rb:43:9: C: Layout/CaseIndentation: Indent when as deep as case.
        when Array
        ^^^^
lib/log_stuff.rb:48:8: C: Style/RedundantSelf: Redundant self detected.
    if self.use_logstasher?
       ^^^^^^^^^^^^^^^^^^^^
lib/log_stuff.rb:56:35: C: Layout/ClosingParenthesisIndentation: Align ) with (.
                                  )
                                  ^
lib/log_stuff.rb:59:20: C: Style/Send: Prefer Object#__send__ or Object#public_send to send.
      Rails.logger.send(severity, &block)
                   ^^^^
lib/log_stuff.rb:63:3: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
  %w( fatal error warn info debug ).each do |severity|
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/log_stuff.rb:63:6: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  %w( fatal error warn info debug ).each do |severity|
     ^
lib/log_stuff.rb:63:34: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  %w( fatal error warn info debug ).each do |severity|
                                 ^
lib/log_stuff.rb:64:5: C: Security/Eval: The use of eval is a serious security risk.
    eval <<-EOM, nil, __FILE__, __LINE__ + 1
    ^^^^
lib/log_stuff.rb:68:1: C: Naming/HeredocDelimiterNaming: Use meaningful heredoc delimiters.
    EOM
^^^^^^^
lib/log_stuff.rb:71:24: W: Lint/UnusedMethodArgument: Unused method argument - block. If it's necessary, use _ or _block as an argument name to indicate that it won't be used.
  def self.tag(*tags, &block)
                       ^^^^^
lib/log_stuff.rb:79:30: W: Lint/UnusedMethodArgument: Unused method argument - block. If it's necessary, use _ or _block as an argument name to indicate that it won't be used.
  def self.metadata(*pairs, &block)
                             ^^^^^
lib/log_stuff.rb:83:22: C: Layout/SpaceAfterComma: Space missing after comma.
      pair.each do |k,v|
                     ^
lib/pq_statistics.rb:30:43: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      dates.map { |date| new(date, 0, 0) } 
                                          ^
lib/pq_statistics.rb:34:7: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using total.to_f, use stricter Float(total).
      total.to_f / (count.nonzero? || 1)
      ^^^^^^^^^^
lib/pq_statistics.rb:37:5: C: Style/Alias: Use alias instead of alias_method in a class body.
    alias_method :mean, :percentage
    ^^^^^^^^^^^^
lib/pq_statistics.rb:41:5: C: Layout/ClassStructure: initializer is supposed to appear before public_methods.
    def initialize(start_date, count, total) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pq_statistics.rb:48:15: C: Naming/VariableNumber: Use normalcase for variable numbers.
  def delta_t(time_1, time_2)
              ^^^^^^
lib/pq_statistics.rb:48:23: C: Naming/VariableNumber: Use normalcase for variable numbers.
  def delta_t(time_1, time_2)
                      ^^^^^^
lib/pq_statistics.rb:49:5: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using Time
      .first_business_day(time_1)
      .business_time_until(time_2).to_f, use stricter Float(Time
      .first_business_day(time_1)
      .business_time_until(time_2)).
    Time ...
    ^^^^
lib/pq_statistics.rb:56:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    @bucket_dates ||= 
                     ^
lib/pq_statistics.rb:58:9: C: Layout/MultilineMethodCallIndentation: Align .step with (BUS_DAY_INTERVAL..WINDOW) on line 57.
        .step(BUS_DAY_INTERVAL)
        ^^^^^
lib/pq_statistics.rb:59:9: C: Layout/MultilineMethodCallIndentation: Align .map with (BUS_DAY_INTERVAL..WINDOW) on line 57.
        .map{ |i| i.business_days.before(bucket_date_0) }
        ^^^^
lib/pq_statistics.rb:59:13: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
        .map{ |i| i.business_days.before(bucket_date_0) }
            ^
lib/pq_statistics.rb:63:5: C: Naming/VariableNumber: Use normalcase for variable numbers.
    @bucket_date_0 ||= Date.today
    ^^^^^^^^^^^^^^
lib/pq_statistics.rb:63:29: C: Rails/Date: Do not use Date.today without zone. Use Time.zone.today instead.
    @bucket_date_0 ||= Date.today
                            ^^^^^
lib/pq_statistics.rb:67:12: C: Style/EachWithObject: Use each_with_object instead of reduce.
    events.reduce(buckets) do |result, event|
           ^^^^^^
lib/pq_statistics.rb:68:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
lib/pq_statistics.rb:76:40: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        upper_bound = bucket.start_date 
                                       ^
lib/pq_statistics.rb:78:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/pq_statistics.rb:83:1: C: Layout/TrailingBlankLines: 1 trailing blank lines detected.
lib/pqa/xml_decoder.rb:15:5: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
       parse_doc(xml).xpath('//Question').map do |el|
    ^^^
lib/pqa/xml_decoder.rb:17:7: C: Layout/BlockAlignment: end at 17, 6 is not aligned with parse_doc(xml).xpath('//Question').map do |el| at 15, 7.
      end
      ^^^
lib/pqa/mock_api_server.rb:25:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "ok"
      ^^^^
lib/pqa/mock_api_server.rb:35:7: C: Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.
      unless errors.empty? ...
      ^^^^^^^^^^^^^^^^^^^^
lib/pqa/mock_api_server.rb:38:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          ["Invalid XML message"] + 
           ^^^^^^^^^^^^^^^^^^^^^
lib/pqa/mock_api_server.rb:38:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          ["Invalid XML message"] + 
                                   ^
lib/pqa/mock_api_server.rb:56:22: C: Style/DateTime: Prefer Time over DateTime.
      date_from    = DateTime.parse(params[:dateFrom] || DateTime.commercial(1000).to_s)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/mock_api_server.rb:56:31: C: Rails/TimeZone: Do not use DateTime.parse without zone. Use one of Time.zone.parse, DateTime.current, DateTime.parse.in_time_zone, DateTime.parse.utc, DateTime.parse.getlocal, DateTime.parse.xmlschema, DateTime.parse.iso8601, DateTime.parse.jisx0301, DateTime.parse.rfc3339, DateTime.parse.httpdate, DateTime.parse.to_i, DateTime.parse.to_f instead.
      date_from    = DateTime.parse(params[:dateFrom] || DateTime.commercial(1000).to_s)
                              ^^^^^
lib/pqa/mock_api_server.rb:56:58: C: Style/DateTime: Prefer Time over DateTime.
      date_from    = DateTime.parse(params[:dateFrom] || DateTime.commercial(1000).to_s)
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/mock_api_server.rb:57:22: C: Style/DateTime: Prefer Time over DateTime.
      date_to      = DateTime.parse(params[:dateTo]   || DateTime.commercial(3000).to_s)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/mock_api_server.rb:57:31: C: Rails/TimeZone: Do not use DateTime.parse without zone. Use one of Time.zone.parse, DateTime.current, DateTime.parse.in_time_zone, DateTime.parse.utc, DateTime.parse.getlocal, DateTime.parse.xmlschema, DateTime.parse.iso8601, DateTime.parse.jisx0301, DateTime.parse.rfc3339, DateTime.parse.httpdate, DateTime.parse.to_i, DateTime.parse.to_f instead.
      date_to      = DateTime.parse(params[:dateTo]   || DateTime.commercial(3000).to_s)
                              ^^^^^
lib/pqa/mock_api_server.rb:57:58: C: Style/DateTime: Prefer Time over DateTime.
      date_to      = DateTime.parse(params[:dateTo]   || DateTime.commercial(3000).to_s)
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/mock_api_server.rb:59:43: W: Lint/UnusedBlockArgument: Unused block argument - uin. If it's necessary, use _ or _uin as an argument name to indicate that it won't be used.
      questions    = QUESTIONS.select do |uin, q|
                                          ^^^
lib/pqa/mock_api_server.rb:66:38: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    get '/api/qais/questions/:uin' do 
                                     ^
lib/pqa/mock_api_server.rb:69:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "Not found"
        ^^^^^^^^^^^
lib/pqa/mock_api_server.rb:71:37: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        XMLEncoder.encode_questions( [my_uin] )
                                    ^
lib/pqa/mock_api_server.rb:71:46: C: Layout/SpaceInsideParens: Space inside parentheses detected.
        XMLEncoder.encode_questions( [my_uin] )
                                             ^
lib/pqa/api_client.rb:28:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        'dateTo'   => date_to && date_to.xmlschema,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/api_client.rb:28:23: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
        'dateTo'   => date_to && date_to.xmlschema,
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/api_client.rb:29:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        'status'   => status
        ^^^^^^^^^^^^^^^^^^^^
lib/pqa/api_client.rb:48:1: C: Layout/EmptyLines: Extra blank line detected.
lib/pqa/api_client.rb:57:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def save_question(uin, xml)
    ^^^
lib/pqa/mock_api_server_runner.rb:14:15: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
      if File.exists?(PID_FILEPATH)
              ^^^^^^^
lib/pqa/mock_api_server_runner.rb:15:12: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        pid  = File.read(PID_FILEPATH)
           ^
lib/pqa/mock_api_server_runner.rb:15:14: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
        pid  = File.read(PID_FILEPATH)
             ^
lib/pqa/mock_api_server_runner.rb:16:52: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        error = "Found pid file #{PID_FILEPATH}. " +
                                                   ^
lib/pqa/mock_api_server_runner.rb:20:28: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
        Process.spawn(cmd, :chdir => CWD)
                           ^^^^^^^^^
lib/pqa/mock_api_server_runner.rb:26:15: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
      if File.exists?(PID_FILEPATH)
              ^^^^^^^
lib/pqa/mock_api_server_runner.rb:27:31: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using File.read(PID_FILEPATH).to_i, use stricter Integer(File.read(PID_FILEPATH), 10).
        Process.kill(:SIGINT, File.read(PID_FILEPATH).to_i)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/mock_api_server_runner.rb:36:7: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      raise "Mock PQA API timed out! Please try starting it manually" if attempts_left < 1
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/mock_api_server_runner.rb:36:7: C: Style/ImplicitRuntimeError: Use raise with an explicit exception class and message, rather than just a message.
      raise "Mock PQA API timed out! Please try starting it manually" if attempts_left < 1
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/mock_api_server_runner.rb:36:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      raise "Mock PQA API timed out! Please try starting it manually" if attempts_left < 1
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/mock_api_server_runner.rb:41:9: W: Lint/HandleExceptions: Do not suppress exceptions.
        rescue Errno::ECONNREFUSED
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/question_builder.rb:16:37: C: Style/DateTime: Prefer Time over DateTime.
      q.updated_date              = DateTime.now.midnight
                                    ^^^^^^^^^^^^
lib/pqa/question_builder.rb:16:46: C: Rails/TimeZone: Do not use DateTime.now without zone. Use one of Time.zone.now, DateTime.current, DateTime.now.in_time_zone, DateTime.now.utc, DateTime.now.getlocal, DateTime.now.xmlschema, DateTime.now.iso8601, DateTime.now.jisx0301, DateTime.now.rfc3339, DateTime.now.httpdate, DateTime.now.to_i, DateTime.now.to_f instead.
      q.updated_date              = DateTime.now.midnight
                                             ^^^
lib/pqa/question_builder.rb:21:37: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      q.answering_body_name       = "Department of Environment, Food and Rural Affairs"
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/xml_encoder.rb:3:11: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    XML_NS    = {
          ^^^
lib/pqa/xml_encoder.rb:3:15: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    XML_NS    = {
              ^
lib/pqa/xml_encoder.rb:5:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      'xmlns'     => 'http://data.parliament.uk/QnA/2013/02'
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/xml_encoder.rb:7:5: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after module_function.
    module_function
    ^^^^^^^^^^^^^^^
lib/pqa/xml_encoder.rb:10:34: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      Nokogiri::XML::Builder.new { |x|
                                 ^
lib/pqa/xml_encoder.rb:11:70: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        x.Answer('xmlns' => 'http://data.parliament.uk/QnA/2013/02') {
                                                                     ^
lib/pqa/xml_encoder.rb:20:34: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      Nokogiri::XML::Builder.new { |x|
                                 ^
lib/pqa/xml_encoder.rb:21:34: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        x.AnswerResponse(XML_NS) {
                                 ^
lib/pqa/xml_encoder.rb:27:5: C: Metrics/MethodLength: Method has too many lines. [35/30]
    def encode_questions(questions) ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/question.rb:10:23: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def self.from_xml(el)
                      ^^
lib/pqa/question.rb:16:52: C: Layout/SpaceAfterComma: Space missing after comma.
      q.date_for_answer           = xml.datetime(el,'DateForAnswer')
                                                   ^
lib/pqa/question.rb:17:52: C: Layout/SpaceAfterComma: Space missing after comma.
      q.tabled_date               = xml.datetime(el,'TabledDate')
                                                   ^
lib/pqa/question.rb:19:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.answering_body_id         = xml.text(el,'AnsweringBody/AnsweringBodyId')
                                               ^
lib/pqa/question.rb:20:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.answering_body_name       = xml.text(el,'AnsweringBody/AnsweringBodyName')
                                               ^
lib/pqa/question.rb:21:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.answering_body_short_name = xml.text(el,'AnsweringBody/AnsweringBodyShortName')
                                               ^
lib/pqa/question.rb:22:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.house_id                  = xml.text(el,'House/HouseId')
                                               ^
lib/pqa/question.rb:23:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.house_name                = xml.text(el,'House/HouseName')
                                               ^
lib/pqa/question.rb:24:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.member_id                 = xml.text(el,'TablingMember/MemberId')
                                               ^
lib/pqa/question.rb:25:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.member_name               = xml.text(el,'TablingMember/MemberName')
                                               ^
lib/pqa/question.rb:26:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.member_constituency       = xml.text(el,'TablingMember/Constituency')
                                               ^
lib/pqa/question.rb:27:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.question_status           = xml.text(el,'QuestionStatus')
                                               ^
lib/pqa/question.rb:28:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.question_type             = xml.text(el,'QuestionType')
                                               ^
lib/pqa/question.rb:30:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.registered_interest       = xml.bool(el,'RegisteredInterest')
                                               ^
lib/pqa/question.rb:32:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.session                   = xml.text(el,'Session')
                                               ^
lib/pqa/question.rb:33:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.target                    = xml.text(el,'Target')
                                               ^
lib/pqa/question.rb:34:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.text                      = xml.text(el,'Text')
                                               ^
lib/pqa/question.rb:35:48: C: Layout/SpaceAfterComma: Space missing after comma.
      q.url                       = xml.text(el,'Url')
                                               ^
lib/pqa/question.rb:37:47: C: Layout/SpaceAfterComma: Space missing after comma.
      q.version_number            = xml.int(el,'VersionNumber')
                                              ^
lib/pqa/question.rb:38:47: C: Layout/SpaceAfterComma: Space missing after comma.
      q.parliament_number         = xml.int(el,'ParliamentNumber')
                                              ^
lib/pqa/question.rb:39:47: C: Layout/SpaceAfterComma: Space missing after comma.
      q.session_number            = xml.int(el,'SessionNumber')
                                              ^
lib/pqa/answer_response.rb:4:23: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def self.from_xml(el)
                      ^^
lib/pqa/question_loader.rb:8:25: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def load_and_import(n = 1, skip_import = false)
                        ^
lib/pqa/question_loader.rb:10:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      questions = (1..n).map do |i| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/question_loader.rb:14:7: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
      unless skip_import
      ^^^^^^
lib/pqa/recent_questions_url.rb:2:1: C: Layout/LeadingCommentSpace: Missing space after #.
#Used by earlybird - Please leave this comment to enable find (As PQA is the right module for parliament interface, but mau not be immediately obvious for dev looking at early bird)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/recent_questions_url.rb:7:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      str_this_day = this_day.strftime("%F")
                                       ^^^^
lib/pqa/recent_questions_url.rb:8:48: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      str_previous_day = previous_day.strftime("%F")
                                               ^^^^
lib/pqa/recent_questions_url.rb:9:7: W: Lint/UselessAssignment: Useless assignment to variable - url.
      url = "http://www.parliament.uk/business/publications/written-questions-answers-statements/written-questions-answers/?page=1&max=20&questiontype=QuestionsOnly&house=commons%2clords&use-dates=True&answered-from=#{str_previous_day}&answered-to=#{str_this_day}"
      ^^^
lib/pqa/import.rb:11:9: W: Lint/UselessAssignment: Useless assignment to variable - questions.
        questions = @pqa_service.questions(date_from, date_to)
        ^^^^^^^^^
lib/pqa/import.rb:17:9: W: Lint/UselessAssignment: Useless assignment to variable - questions.
        questions = @pqa_service.question(uin)
        ^^^^^^^^^
lib/pqa/import.rb:21:1: C: Layout/EmptyLines: Extra blank line detected.
lib/pqa/import.rb:26:19: C: Performance/RedundantBlockCall: Use yield instead of block.call.
      questions = block.call
                  ^^^^^^^^^^
lib/pqa/import.rb:28:47: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      questions.each { |q| insert_or_update(q)  }
                                              ^
lib/pqa/import.rb:48:5: C: Metrics/MethodLength: Method has too many lines. [32/30]
    def insert_or_update(q) ...
    ^^^^^^^^^^^^^^^^^^^^^^^
lib/pqa/import.rb:48:26: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def insert_or_update(q)
                         ^
lib/pqa/import.rb:81:1: C: Layout/EmptyLines: Extra blank line detected.
lib/pqa/import.rb:82:1: C: Layout/EmptyLines: Extra blank line detected.
lib/health_check.rb:5:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/pq_state.rb:48:20: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
    TRANSFERRED_OUT,
                   ^
lib/pq_state.rb:53:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for state_weight is too high. [9/6]
  def self.state_weight(state) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pq_state.rb:76:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for state_label is too high. [13/6]
  def self.state_label(state) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/pq_state.rb:93:1: C: Layout/TrailingBlankLines: 1 trailing blank lines detected.
lib/smoke_test_runner.rb:12:10: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
    File.exists?(out_file) ? File.ctime(out_file) : Time.at(0)
         ^^^^^^^
lib/smoke_test_runner.rb:12:58: C: Rails/TimeZone: Do not use Time.at without zone. Use one of Time.zone.at, Time.current, Time.at.in_time_zone, Time.at.utc, Time.at.getlocal, Time.at.xmlschema, Time.at.iso8601, Time.at.jisx0301, Time.at.rfc3339, Time.at.httpdate, Time.at.to_i, Time.at.to_f instead.
    File.exists?(out_file) ? File.ctime(out_file) : Time.at(0)
                                                         ^^
lib/smoke_test_runner.rb:16:10: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
    File.exists?(out_file) && File.read(out_file).to_i == 0
         ^^^^^^^
lib/smoke_test_runner.rb:16:31: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using File.read(out_file).to_i, use stricter Integer(File.read(out_file), 10).
    File.exists?(out_file) && File.read(out_file).to_i == 0
                              ^^^^^^^^^^^^^^^^^^^^^^^^
lib/smoke_test_runner.rb:16:31: C: Style/NumericPredicate: Use File.read(out_file).to_i.zero? instead of File.read(out_file).to_i == 0.
    File.exists?(out_file) && File.read(out_file).to_i == 0
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/settings.rb:12:7: C: Style/ImplicitRuntimeError: Use raise with an explicit exception class and message, rather than just a message.
      raise "Cannot find environment variable PQ_REST_API_HOST. Please set it first" unless host
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/settings.rb:12:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      raise "Cannot find environment variable PQ_REST_API_HOST. Please set it first" unless host
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/settings.rb:15:9: C: Style/ImplicitRuntimeError: Use raise with an explicit exception class and message, rather than just a message.
        raise "Cannot find environment variable PQ_REST_API_USERNAME. Please set it first" unless username
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/settings.rb:15:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        raise "Cannot find environment variable PQ_REST_API_USERNAME. Please set it first" unless username
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/settings.rb:16:9: C: Style/ImplicitRuntimeError: Use raise with an explicit exception class and message, rather than just a message.
        raise "Cannot find environment variable PQ_REST_API_PASSWORD. Please set it first" unless password
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/settings.rb:16:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        raise "Cannot find environment variable PQ_REST_API_PASSWORD. Please set it first" unless password
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/settings.rb:29:3: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after module_function.
  module_function
  ^^^^^^^^^^^^^^^
lib/settings.rb:31:26: C: Style/ColonMethodCall: Do not use :: for method calls.
  @h               = YAML::load_file(filepath)
                         ^^
lib/settings.rb:32:34: C: Style/SymbolProc: Pass &:to_sym as an argument to map instead of a block.
  @config_keys     = @h.keys.map { |k| k.to_sym }
                                 ^^^^^^^^^^^^^^^^
lib/settings.rb:76:16: C: Performance/OpenStruct: Consider using Struct over OpenStruct to optimize the performance.
    OpenStruct.new(@h['mail_worker'])
               ^^^
lib/settings.rb:80:16: C: Performance/OpenStruct: Consider using Struct over OpenStruct to optimize the performance.
    OpenStruct.new(@h['gecko_warning_levels'])
               ^^^
lib/settings.rb:84:16: C: Performance/OpenStruct: Consider using Struct over OpenStruct to optimize the performance.
    OpenStruct.new(@h['smoke_test_runner'])
               ^^^
lib/presenters.rb:2:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/rake_task_helpers/db_sanitizer.rb:3:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
lib/rake_task_helpers/db_sanitizer.rb:5:5: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
    [ ...
    ^
lib/rake_task_helpers/tester.rb:6:32: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      testers_h.map do |tester| 
                               ^
lib/rake_task_helpers/tester.rb:26:8: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      u  =  
       ^
lib/rake_task_helpers/tester.rb:26:10: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      u  =  
         ^
lib/rake_task_helpers/tester.rb:26:11: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      u  =  
          ^^
lib/rake_task_helpers/tester.rb:28:33: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          email: email_for('u'), 
                                ^
lib/rake_task_helpers/tester.rb:29:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          name:  display_name, 
          ^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:29:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          name:  display_name, 
                              ^
lib/rake_task_helpers/tester.rb:33:7: C: Style/MultilineIfModifier: Favor a normal if-statement over a modifier clause in a multiline statement.
      u.update( ...
      ^^^^^^^^^
lib/rake_task_helpers/tester.rb:34:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        password:              pass, 
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:34:37: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        password:              pass, 
                                    ^
lib/rake_task_helpers/tester.rb:46:5: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
       "#{email}+#{abbreviation}@#{domain}"
    ^^^
lib/rake_task_helpers/tester.rb:53:19: W: Lint/UnusedMethodArgument: Unused method argument - abbreviation. If it's necessary, use _ or _abbreviation as an argument name to indicate that it won't be used. You can also write as email_for(*) if you want the method to accept any arguments but don't care about them.
    def email_for(abbreviation)
                  ^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:54:5: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
       "#{email}@#{domain}"
    ^^^
lib/rake_task_helpers/tester.rb:63:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        name:  display_name, 
        ^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:63:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        name:  display_name, 
                            ^
lib/rake_task_helpers/tester.rb:67:8: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      p  = PressDesk.find_or_create_by(name: prefix)
       ^
lib/rake_task_helpers/tester.rb:67:10: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      p  = PressDesk.find_or_create_by(name: prefix)
         ^
lib/rake_task_helpers/tester.rb:70:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        name:       display_name, 
        ^^^^^^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:70:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        name:       display_name, 
                                 ^
lib/rake_task_helpers/tester.rb:71:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        email:      email_for('po'), 
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:71:37: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        email:      email_for('po'), 
                                    ^
lib/rake_task_helpers/tester.rb:72:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        press_desk: p 
                     ^
lib/rake_task_helpers/tester.rb:78:15: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
              name:        prefix, 
              ^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:78:15: C: Layout/FirstParameterIndentation: Indent the first parameter one step more than the start of the previous line.
              name:        prefix,  ...
              ^^^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:78:35: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              name:        prefix, 
                                  ^
lib/rake_task_helpers/tester.rb:82:46: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      dd  = DeputyDirector.find_or_create_by( 
                                             ^
lib/rake_task_helpers/tester.rb:83:15: C: Layout/FirstParameterIndentation: Indent the first parameter one step more than the start of the previous line.
              division: div,  ...
              ^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:83:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              division: div, 
                            ^
lib/rake_task_helpers/tester.rb:84:15: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
              email:    email_for('dd'), 
              ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:84:41: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              email:    email_for('dd'), 
                                        ^
lib/rake_task_helpers/tester.rb:85:15: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
              name:     display_name
              ^^^^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:86:14: C: Layout/TrailingWhitespace: Trailing whitespace detected.
            ) 
             ^
lib/rake_task_helpers/tester.rb:89:29: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        deputy_director: dd, 
                            ^
lib/rake_task_helpers/tester.rb:90:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        name:            display_name, 
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:90:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        name:            display_name, 
                                      ^
lib/rake_task_helpers/tester.rb:91:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        email:           email_for('ao'),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:92:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        press_desk:      p 
        ^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/tester.rb:92:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        press_desk:      p 
                          ^
lib/rake_task_helpers/tester.rb:96:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/rake_task_helpers/test_user_generator.rb:12:7: C: Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      unless ENV['TEST_USER_PASS']
      ^^^^^^
lib/rake_task_helpers/test_user_generator.rb:13:9: C: Style/ImplicitRuntimeError: Use raise with an explicit exception class and message, rather than just a message.
        raise 'TEST_USER_PASS environment variable not set - please set it first' 
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/test_user_generator.rb:13:82: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        raise 'TEST_USER_PASS environment variable not set - please set it first' 
                                                                                 ^
lib/rake_task_helpers/test_user_generator.rb:16:27: C: Security/YAMLLoad: Prefer using YAML.safe_load over YAML.load.
      config       = YAML.load(File.read(path))
                          ^^^^
lib/rake_task_helpers/test_user_generator.rb:19:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/rake_task_helpers/test_user_generator.rb:22:34: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          config['full_testers'], 
                                 ^
lib/rake_task_helpers/test_user_generator.rb:25:12: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        ) + 
           ^
lib/rake_task_helpers/test_user_generator.rb:27:40: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          config['restricted_testers'], 
                                       ^
lib/rake_task_helpers/test_user_generator.rb:30:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        ) 
         ^
lib/rake_task_helpers/test_user_generator.rb:35:20: C: Style/SymbolProc: Pass &:create_fixtures! as an argument to each instead of a block.
      testers.each { |tester| tester.create_fixtures! }
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/test_user_generator.rb:38:12: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    private 
           ^
lib/rake_task_helpers/test_user_generator.rb:40:5: C: Layout/ClassStructure: initializer is supposed to appear before public_methods.
    def initialize(testers) ...
    ^^^^^^^^^^^^^^^^^^^^^^^
lib/rake_task_helpers/test_user_generator.rb:44:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/xml_extractor.rb:2:3: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line after module_function.
  module_function
  ^^^^^^^^^^^^^^^
lib/xml_extractor.rb:5:10: C: Style/DateTime: Prefer Time over DateTime.
    v && DateTime.parse(v)
         ^^^^^^^^^^^^^^^^^
lib/xml_extractor.rb:5:19: C: Rails/TimeZone: Do not use DateTime.parse without zone. Use one of Time.zone.parse, DateTime.current, DateTime.parse.in_time_zone, DateTime.parse.utc, DateTime.parse.getlocal, DateTime.parse.xmlschema, DateTime.parse.iso8601, DateTime.parse.jisx0301, DateTime.parse.rfc3339, DateTime.parse.httpdate, DateTime.parse.to_i, DateTime.parse.to_f instead.
    v && DateTime.parse(v)
                  ^^^^^
lib/xml_extractor.rb:10:5: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    v && v.to_i
    ^^^^^^^^^^^
lib/xml_extractor.rb:10:10: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using v.to_i, use stricter Integer(v, 10).
    v && v.to_i
         ^^^^^^
lib/xml_extractor.rb:15:5: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
    el && el.text
    ^^^^^^^^^^^^^
lib/presenters/report.rb:20:5: W: Lint/UselessAccessModifier: Useless private_class_method access modifier.
    private_class_method
    ^^^^^^^^^^^^^^^^^^^^
lib/presenters/report.rb:24:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      rows         = states.map do |state| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/report.rb:26:9: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
        cells  = records.map do |r| ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/report.rb:36:27: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def self.present_cell(r)
                          ^
lib/presenters/report.rb:43:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        raise ArgumentError, "record should be a Minister or a PressDesk"
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/report.rb:47:40: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def self.present_count_cell(count, r, state)
                                       ^
lib/presenters/report.rb:54:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        raise ArgumentError, "record should be a Minister or a PressDesk"
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/status_filter.rb:8:11: C: Layout/MultilineOperationIndentation: Use 2 (not 4) spaces for indenting an expression spanning multiple lines.
          @params[:qstatus] == @key
          ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/statistics.rb:4:1: C: Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body beginning.
lib/presenters/statistics.rb:36:7: C: Layout/ClassStructure: constants is supposed to appear before initializer.
      DataPoint = Struct.new(:start_date, :data, :arrow)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/statistics.rb:38:7: W: Lint/IneffectiveAccessModifier: protected (on line 28) does not make singleton methods protected. Use protected inside a class << self block instead.
      def self.format(data)
      ^^^
lib/presenters/statistics.rb:46:7: W: Lint/IneffectiveAccessModifier: protected (on line 28) does not make singleton methods protected. Use protected inside a class << self block instead.
      def self.format_item(item, data, i)
      ^^^
lib/presenters/statistics.rb:46:40: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
      def self.format_item(item, data, i)
                                       ^
lib/presenters/statistics.rb:49:11: C: Style/FormatString: Favor format over sprintf.
          sprintf('%.1f', item.mean / (60 * 60)),
          ^^^^^^^
lib/presenters/statistics.rb:54:7: W: Lint/IneffectiveAccessModifier: protected (on line 28) does not make singleton methods protected. Use protected inside a class << self block instead.
      def self.arrow_for(n)
      ^^^
lib/presenters/statistics.rb:54:26: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
      def self.arrow_for(n)
                         ^
lib/presenters/statistics.rb:74:7: W: Lint/UselessAccessModifier: Useless private access modifier.
      private
      ^^^^^^^
lib/presenters/statistics.rb:76:7: W: Lint/IneffectiveAccessModifier: private (on line 74) does not make singleton methods private. Use private_class_method or private inside a class << self block instead.
      def self.format_item(item, data, i)
      ^^^
lib/presenters/statistics.rb:76:40: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
      def self.format_item(item, data, i)
                                       ^
lib/presenters/statistics.rb:79:11: C: Style/FormatString: Favor format over sprintf.
          sprintf('%.2f%%', item.percentage * 100),
          ^^^^^^^
lib/presenters/statistics.rb:114:7: W: Lint/UselessAccessModifier: Useless private access modifier.
      private
      ^^^^^^^
lib/presenters/statistics.rb:116:7: W: Lint/IneffectiveAccessModifier: private (on line 114) does not make singleton methods private. Use private_class_method or private inside a class << self block instead.
      def self.format_item(item, data, i)
      ^^^
lib/presenters/statistics.rb:116:40: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
      def self.format_item(item, data, i)
                                       ^
lib/presenters/statistics.rb:119:11: C: Style/FormatString: Favor format over sprintf.
          sprintf('%.2f', item.mean),
          ^^^^^^^
lib/presenters/statistics.rb:151:19: C: Style/FormatString: Favor format over sprintf.
          @time = sprintf('%.1f', stage.average_time / (60 * 60))
                  ^^^^^^^
lib/presenters/statistics.rb:157:1: C: Layout/TrailingBlankLines: 2 trailing blank lines detected.
lib/presenters/email.rb:5:22: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def default_hash(pq, ao)
                     ^^
lib/presenters/email.rb:5:26: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def default_hash(pq, ao)
                         ^^
lib/presenters/email.rb:7:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        ao_name:              ao.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:8:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        email:                ao.email,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:9:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        cc:                   ao.group_email,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:10:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        uin:                  pq.uin,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:11:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        question:             pq.question,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:12:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        answer_by:            pq.minister && pq.minister.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:12:31: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
        answer_by:            pq.minister && pq.minister.name,
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:13:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        policy_mpname:        pq.policy_minister && pq.policy_minister.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:13:31: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
        policy_mpname:        pq.policy_minister && pq.policy_minister.name,
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:14:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        policy_mpemail:       policy_mpemails(pq).join(';'),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:15:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        press_email:          press_emails(ao).join(';'),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:16:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        mpemail:              mp_emails(pq).join(';'),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:17:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        member_name:          pq.member_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:18:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        member_constituency:  pq.member_constituency,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:19:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        house_name:           pq.house_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:20:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        internal_deadline:    format_internal_deadline(pq),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:21:9: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
        date_to_parliament:   pq.date_for_answer.try(:to_s, :date),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:22:65: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
        finance_users_emails: finance_users_emails(pq).join(';'),
                                                                ^
lib/presenters/email.rb:26:22: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def cc_list_hash(pq, ao)
                     ^^
lib/presenters/email.rb:26:26: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def cc_list_hash(pq, ao)
                         ^^
lib/presenters/email.rb:31:5: W: Lint/UselessAccessModifier: Useless private_class_method access modifier.
    private_class_method
    ^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:33:17: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def cc_list(pq, ao)
                ^^
lib/presenters/email.rb:33:21: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def cc_list(pq, ao)
                    ^^
lib/presenters/email.rb:34:31: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
      deputy_director_email = ao.deputy_director && ao.deputy_director.email
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:49:19: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def mp_emails(pq)
                  ^^
lib/presenters/email.rb:53:25: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def policy_mpemails(pq)
                        ^^
lib/presenters/email.rb:57:22: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def press_emails(ao)
                     ^^
lib/presenters/email.rb:61:1: C: Layout/EmptyLines: Extra blank line detected.
lib/presenters/email.rb:62:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def action_list_emails
    ^^^
lib/presenters/email.rb:66:30: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def finance_users_emails(pq)
                             ^^
lib/presenters/email.rb:74:34: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def format_internal_deadline(pq)
                                 ^^
lib/presenters/email.rb:75:33: C: Layout/SpaceInsideStringInterpolation: Space inside string interpolation detected.
      pq.internal_deadline ? "#{pq.internal_deadline.to_s(:date) } - #{pq.internal_deadline.strftime("%I").to_i}#{pq.internal_deadline.strftime("%p").downcase} " : ''
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:75:72: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using pq.internal_deadline.strftime("%I").to_i, use stricter Integer(pq.internal_deadline.strftime("%I"), 10).
      pq.internal_deadline ? "#{pq.internal_deadline.to_s(:date) } - #{pq.internal_deadline.strftime("%I").to_i}#{pq.internal_deadline.strftime("%p").downcase} " : ''
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/email.rb:75:102: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
      pq.internal_deadline ? "#{pq.internal_deadline.to_s(:date) } - #{pq.internal_deadline.strftime("%I").to_i}#{pq.internal_deadline.strftime("%p").downcase} " : ''
                                                                                                     ^^^^
lib/presenters/email.rb:75:145: C: Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
      pq.internal_deadline ? "#{pq.internal_deadline.to_s(:date) } - #{pq.internal_deadline.strftime("%I").to_i}#{pq.internal_deadline.strftime("%p").downcase} " : ''
                                                                                                                                                ^^^^
lib/presenters/dashboard_filters.rb:15:42: C: Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
                                         'view_all',
                                         ^^^^^^^^^^
lib/presenters/dashboard_filters.rb:16:42: C: Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
                                         'View all',
                                         ^^^^^^^^^^
lib/presenters/dashboard_filters.rb:17:42: C: Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
                                         params)
                                         ^^^^^^
lib/presenters/dashboard_filters.rb:34:35: C: Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
                                  'iww',
                                  ^^^^^
lib/presenters/dashboard_filters.rb:35:35: C: Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
                                  'I will write',
                                  ^^^^^^^^^^^^^^
lib/presenters/dashboard_filters.rb:36:35: C: Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
                                  params)
                                  ^^^^^^
lib/presenters/dashboard_filters.rb:55:5: W: Lint/UselessAccessModifier: Useless private_class_method access modifier.
    private_class_method
    ^^^^^^^^^^^^^^^^^^^^
lib/presenters/transfered_in_filter.rb:13:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/presenters/dashboard_filter.rb:19:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      raise NotImplementedError, "The #active? method should be implemented by subclasses"
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/dashboard_filter.rb:23:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      raise NotImplementedError, "the #path method should be implemented by subclassess"
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/dashboard_filter.rb:26:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/presenters/in_progress_status_filter.rb:13:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/presenters/report/row.rb:16:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/presenters/report/count_cell.rb:24:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/presenters/report/clickable_cell.rb:26:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/presenters/dashboard_gecko.rb:9:5: W: Lint/UselessAccessModifier: Useless private_class_method access modifier.
    private_class_method
    ^^^^^^^^^^^^^^^^^^^^
lib/presenters/dashboard_gecko.rb:13:10: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        { 
         ^
lib/presenters/dashboard_gecko.rb:14:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          "title"       => { "text" => fields.name },
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/dashboard_gecko.rb:14:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "title"       => { "text" => fields.name },
          ^^^^^^^
lib/presenters/dashboard_gecko.rb:14:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "title"       => { "text" => fields.name },
                             ^^^^^^
lib/presenters/dashboard_gecko.rb:15:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          "label"       => { "name" => fields.label, "color" => fields.color },
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/presenters/dashboard_gecko.rb:15:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "label"       => { "name" => fields.label, "color" => fields.color },
          ^^^^^^^
lib/presenters/dashboard_gecko.rb:15:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "label"       => { "name" => fields.label, "color" => fields.color },
                             ^^^^^^
lib/presenters/dashboard_gecko.rb:15:54: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "label"       => { "name" => fields.label, "color" => fields.color },
                                                     ^^^^^^^
lib/presenters/dashboard_gecko.rb:16:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
          "description" => fields.message,
          ^^^^^^^^^^^^^
lib/presenters/dashboard_gecko.rb:16:42: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
          "description" => fields.message,
                                         ^
lib/presenters/view_all_in_progress_filter.rb:6:45: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @params[:controller] == 'dashboard' && 
                                            ^
lib/presenters/view_all_in_progress_filter.rb:8:11: C: Layout/MultilineOperationIndentation: Use 2 (not 4) spaces for indenting an expression spanning multiple lines.
          @params[:qstatus].blank?
          ^^^^^^^^^^^^^^^^^^^^^^^^
lib/metrics_dashboard.rb:18:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def collect_metrics!  
                      ^^
lib/metrics_dashboard.rb:19:42: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    @metrics.to_h.values.each(&:collect!)    
                                         ^^^^
lib/metrics_dashboard.rb:23:16: C: Performance/OpenStruct: Consider using Struct over OpenStruct to optimize the performance.
    OpenStruct.new({
               ^^^
lib/metrics_dashboard.rb:23:20: C: Style/BracesAroundHashParameters: Redundant curly braces around a hash parameter.
    OpenStruct.new({ ...
                   ^
lib/metrics_dashboard.rb:24:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      key_metric:  Metrics::KeyMetric.new,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/metrics_dashboard.rb:24:7: C: Layout/IndentHash: Use 2 spaces for indentation in a hash, relative to the first position after the preceding left parenthesis.
      key_metric:  Metrics::KeyMetric.new,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/metrics_dashboard.rb:25:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      health:      Metrics::Health.new,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/metrics_dashboard.rb:28:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      mail:        Metrics::Mail.new,
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/metrics_dashboard.rb:29:7: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
      pqa_import:  Metrics::PqaImport.new
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/metrics_dashboard.rb:30:5: C: Layout/IndentHash: Indent the right brace the same as the first position after the preceding left parenthesis.
    })
    ^
lib/rake_task_helpers.rb:2:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/gecko_status.rb:7:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    @label   = "n/a"
               ^^^^^
lib/gecko_status.rb:24:20: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  def ok(message = "")
                   ^^
lib/gecko_status.rb:30:14: W: Lint/UnusedMethodArgument: Unused method argument - metrics. If it's necessary, use _ or _metrics as an argument name to indicate that it won't be used. You can also write as update(*) if you want the method to accept any arguments but don't care about them.
  def update(metrics)
             ^^^^^^^
lib/gecko_status.rb:45:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def update(metrics) 
                     ^
lib/gecko_status.rb:56:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def update(metrics) 
                     ^
lib/gecko_status.rb:67:22: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  def update(metrics) 
                     ^
lib/gecko_status.rb:68:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    metrics.health.sendgrid_status ? ok : error("Unable to contact sendgrid")
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/gecko_status.rb:92:58: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "Mails Waiting: #{metrics.mail.num_waiting} :: " + 
                                                         ^
lib/gecko_status.rb:92:59: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        "Mails Waiting: #{metrics.mail.num_waiting} :: " + 
                                                          ^
lib/gecko_status.rb:97:71: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "Unanswered Tokens: #{metrics.mail.num_unanswered_tokens} ::" +
                                                                      ^
lib/gecko_status.rb:110:23: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    super('PQ Import') 
                      ^
lib/gecko_status.rb:137:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      error("Smoke Test Run Failure")
            ^^^^^^^^^^^^^^^^^^^^^^^^
lib/validators/whitespace.rb:9:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/validators/date_input.rb:19:7: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      raise DateTimeInputError unless date_s.size < MAX_LEN
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/validators/date_input.rb:21:7: C: Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
      raise DateTimeInputError unless d.between?(min_date, max_date)
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/validators/date_input.rb:23:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
lib/validators/date_input.rb:30:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        super("The date provided was out of the expected range for the application")
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/validators/trim.rb:15:5: W: Lint/UselessAccessModifier: Useless private_class_method access modifier.
    private_class_method
    ^^^^^^^^^^^^^^^^^^^^
lib/validators/trim.rb:19:9: C: Style/DoubleNegation: Avoid the use of double negation (!!).
        !!line[SIGNATURE]
        ^
lib/http_client.rb:18:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/http_client.rb:29:78: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
      super("PQ rest API responded with non success code: #{response.code}," +
                                                                             ^
lib/http_client.rb:30:13: C: Layout/MultilineOperationIndentation: Use 2 (not 6) spaces for indenting an expression spanning multiple lines.
            " response: #{response.body} (request: #{request.inspect})")
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/http_client.rb:52:5: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
    req = case method ...
    ^^^^^^^^^^^^^^^^^
lib/export/base.rb:11:16: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    DATE_FORMAT  = '%Y-%m-%d %H:%M'
               ^
lib/export/base.rb:11:18: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    DATE_FORMAT  = '%Y-%m-%d %H:%M'
                 ^
lib/export/base.rb:53:18: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        pqs.each { |pq|
                 ^
lib/export/base.rb:54:61: C: Layout/BlockEndNewline: Expression at 54, 61 should be on its own line.
          csv << csv_fields(pq, pq.action_officer_accepted) }
                                                            ^
lib/export/base.rb:67:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if item.nil?
      ^^
lib/export/base.rb:71:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      if item.to_s.start_with?("=")
                               ^^^
lib/export/base.rb:72:9: W: Lint/UselessAssignment: Useless assignment to variable - item.
        item = "'" + item
        ^^^^
lib/export/base.rb:81:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      raise NotImplementedError, "Subclasses should implement pqs method"
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:84:5: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for csv_fields is too high. [8/6]
    def csv_fields(pq, ao) ...
    ^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:84:5: C: Metrics/MethodLength: Method has too many lines. [34/30]
    def csv_fields(pq, ao) ...
    ^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:84:20: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def csv_fields(pq, ao)
                   ^^
lib/export/base.rb:84:24: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def csv_fields(pq, ao)
                       ^^
lib/export/base.rb:86:49: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        escape_equals_for_excel(pq.member_name),                                                 # 'MP',
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:86:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.member_name),                                                 # 'MP',
                                                                                                 ^^^^^^^
lib/export/base.rb:87:13: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        nil,                                                            # 'Record Number',
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:87:73: C: Style/InlineComment: Avoid trailing inline comments.
        nil,                                                            # 'Record Number',
                                                                        ^^^^^^^^^^^^^^^^^^
lib/export/base.rb:88:47: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        escape_equals_for_excel(ao && ao.name)                                                   # 'Action Officer',
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:88:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(ao && ao.name)                                                   # 'Action Officer',
                                                                                                 ^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:90:7: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
      [ ...
      ^
lib/export/base.rb:91:73: C: Style/InlineComment: Avoid trailing inline comments.
        pq.answer_submitted,                                            # 'Date response answered by Parly (dept)',
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:92:73: C: Style/InlineComment: Avoid trailing inline comments.
        pq.internal_deadline,                                           # 'Draft due to Parly Branch',
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:93:73: C: Style/InlineComment: Avoid trailing inline comments.
        pq.tabled_date,                                                 # 'Date First Appeared in Parliament',
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:94:73: C: Style/InlineComment: Avoid trailing inline comments.
        pq.date_for_answer,                                             # 'Date Due in Parliament',
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:95:73: C: Style/InlineComment: Avoid trailing inline comments.
        pq.resubmitted_to_answering_minister,                           # 'Date resubmitted to Minister (if appliable)',
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:96:73: C: Style/InlineComment: Avoid trailing inline comments.
        pq.answering_minister_returned_by_action_officer,               # 'Date returned by AO (if applicable)',
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:97:73: C: Style/InlineComment: Avoid trailing inline comments.
        pq.draft_answer_received,                                       # 'Date Draft Returned to PB',
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:98:73: C: Style/InlineComment: Avoid trailing inline comments.
        pq.answering_minister_to_action_officer,                        # 'Date sent back to AO (if applicable)',
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:99:73: C: Style/InlineComment: Avoid trailing inline comments.
        pq.sent_to_answering_minister,                                  # 'Date delivered to Minister',
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:100:41: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        pq.cleared_by_answering_minister                               # 'Returned signed from Minister',
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:100:72: C: Style/InlineComment: Avoid trailing inline comments.
        pq.cleared_by_answering_minister                               # 'Returned signed from Minister',
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:101:58: C: Layout/ExtraSpacing: Unnecessary spacing detected.
      ].map { |date| date && date.strftime(DATE_FORMAT) }  +
                                                         ^
lib/export/base.rb:101:60: C: Layout/SpaceAroundOperators: Operator + should be surrounded by a single space.
      ].map { |date| date && date.strftime(DATE_FORMAT) }  +
                                                           ^
lib/export/base.rb:102:7: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
      [ ...
      ^
lib/export/base.rb:103:72: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        escape_equals_for_excel(pq.directorate && pq.directorate.name),                          # 'Directorate',
                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:103:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.directorate && pq.directorate.name),                          # 'Directorate',
                                                                                                 ^^^^^^^^^^^^^^^^
lib/export/base.rb:104:84: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        escape_equals_for_excel(pq.original_division && pq.original_division.name),                                # 'Division',
                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:104:116: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.original_division && pq.original_division.name),                                # 'Division',
                                                                                                                   ^^^^^^^^^^^^^
lib/export/base.rb:105:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.answer),                                                      # 'Final Response',
                                                                                                 ^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:106:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.question),                                                    # 'Full_PQ_subject',
                                                                                                 ^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:107:13: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        nil,                                                            # 'Delay Reason',
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:107:73: C: Style/InlineComment: Avoid trailing inline comments.
        nil,                                                            # 'Delay Reason',
                                                                        ^^^^^^^^^^^^^^^^^
lib/export/base.rb:108:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.minister && pq.minister.name),                                # 'Minister',
                                                                                                 ^^^^^^^^^^^^^
lib/export/base.rb:109:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.answering_minister_query),                                    # 'Ministerial Query? (if applicable)',
                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:110:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.uin),                                                         # 'PIN',
                                                                                                 ^^^^^^^^
lib/export/base.rb:111:68: C: Layout/ExtraSpacing: Unnecessary spacing detected.
        pq.pod_clearance && pq.pod_clearance.strftime(DATE_FORMAT),     # '"Date/time of POD clearance"',
                                                                   ^^^^
lib/export/base.rb:111:73: C: Style/InlineComment: Avoid trailing inline comments.
        pq.pod_clearance && pq.pod_clearance.strftime(DATE_FORMAT),     # '"Date/time of POD clearance"',
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:112:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.pod_query_flag),                                              # 'PODquery',
                                                                                                 ^^^^^^^^^^^^^
lib/export/base.rb:113:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.finance_interest),                                            # 'Requested by finance',
                                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:114:73: C: Style/InlineComment: Avoid trailing inline comments.
        nil,                                                            # 'Requested by HR',
                                                                        ^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:115:73: C: Style/InlineComment: Avoid trailing inline comments.
        nil,                                                            # 'Requested by Press',
                                                                        ^^^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:116:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.question_type),                                               # 'Type of Question',
                                                                                                 ^^^^^^^^^^^^^^^^^^^^^
lib/export/base.rb:117:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(ao && ao.email)                                                  # 'AO Email'
                                                                                                 ^^^^^^^^^^^^
lib/export/base.rb:122:22: C: Rails/PluralizationGrammar: Prefer 1.minute.
      date + 1.day - 1.minutes
                     ^^^^^^^^^
lib/export/base.rb:124:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
lib/export/pq_default.rb:3:5: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line after private.
    private
    ^^^^^^^
lib/export/pq_default.rb:6:70: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        'transfer_out_ogd_id is null AND (answer_submitted >= ? OR ' + 
                                                                     ^
lib/export/pq_default.rb:6:71: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        'transfer_out_ogd_id is null AND (answer_submitted >= ? OR ' + 
                                                                      ^
lib/export/pq_selection.rb:3:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
lib/export/pq_selection.rb:4:16: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    DATE_FORMAT  = '%Y-%m-%d %H:%M'
               ^
lib/export/pq_selection.rb:4:18: C: Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
    DATE_FORMAT  = '%Y-%m-%d %H:%M'
                 ^
lib/export/pq_selection.rb:8:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'MP',
    ^^^^
lib/export/pq_selection.rb:9:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Draft due to Parly Branch',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:10:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Date Due in Parliament',
    ^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:11:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Full_PQ_subject',
    ^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:12:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Minister',
    ^^^^^^^^^^
lib/export/pq_selection.rb:13:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Status',
    ^^^^^^^^
lib/export/pq_selection.rb:14:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Action Officer',
    ^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:15:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Division',
    ^^^^^^^^^^
lib/export/pq_selection.rb:16:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Type of Question',
    ^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:17:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Date First Appeared in Parliament',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:18:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Date Draft Returned to PB',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:19:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Date delivered to Minister',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:20:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Returned signed from Minister',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:21:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    'Date response answered by Parly (dept)'
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:24:20: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def csv_fields(pq, ao)
                   ^^
lib/export/pq_selection.rb:24:24: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def csv_fields(pq, ao)
                       ^^
lib/export/pq_selection.rb:25:8: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      [ escape_equals_for_excel(pq.uin),                                                         # 'PIN',
       ^
lib/export/pq_selection.rb:25:9: C: Layout/FirstArrayElementLineBreak: Add a line break before the first element of a multi-line array.
      [ escape_equals_for_excel(pq.uin),                                                         # 'PIN',
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:25:98: C: Style/InlineComment: Avoid trailing inline comments.
      [ escape_equals_for_excel(pq.uin),                                                         # 'PIN',
                                                                                                 ^^^^^^^^
lib/export/pq_selection.rb:26:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.member_name),                                                 # 'MP',
                                                                                                 ^^^^^^^
lib/export/pq_selection.rb:27:66: C: Style/InlineComment: Avoid trailing inline comments.
        empty_or_date(pq.internal_deadline),                     # 'Draft due to Parly Branch',
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:28:66: C: Style/InlineComment: Avoid trailing inline comments.
        empty_or_date(pq.date_for_answer),                       # 'Date Due in Parliament',
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:29:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.question),                                                    # 'Full_PQ_subject',
                                                                                                 ^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:30:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.minister && pq.minister.name),                                # 'Minister',
                                                                                                 ^^^^^^^^^^^^^
lib/export/pq_selection.rb:32:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(ao && ao.name),                                                  # 'Action Officer',
                                                                                                 ^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:33:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.original_division && pq.original_division.name),              # 'Division',
                                                                                                 ^^^^^^^^^^^^^
lib/export/pq_selection.rb:34:98: C: Style/InlineComment: Avoid trailing inline comments.
        escape_equals_for_excel(pq.question_type),                                               # 'Type of Question',
                                                                                                 ^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:35:66: C: Style/InlineComment: Avoid trailing inline comments.
        empty_or_date(pq.tabled_date),                           # 'Date First Appeared in Parliament',
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:36:66: C: Style/InlineComment: Avoid trailing inline comments.
        empty_or_date(pq.draft_answer_received),                 # 'Date Draft Returned to PB',
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:37:66: C: Style/InlineComment: Avoid trailing inline comments.
        empty_or_date(pq.sent_to_answering_minister),            # 'Date delivered to Minister',
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:38:66: C: Style/InlineComment: Avoid trailing inline comments.
        empty_or_date(pq.cleared_by_answering_minister),         # 'Returned signed from Minister',
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:39:66: C: Style/InlineComment: Avoid trailing inline comments.
        empty_or_date(pq.answer_submitted)                       # 'Date response answered by Parly (dept)',
                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:40:7: C: Layout/MultilineArrayBraceLayout: The closing array brace must be on the same line as the last array element when the opening brace is on the same line as the first array element.
      ]
      ^
lib/export/pq_selection.rb:43:1: C: Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
lib/export/pq_selection.rb:43:1: C: Style/InlineComment: Avoid trailing inline comments.
=begin ...
^^^^^^
lib/export/pq_selection.rb:60:5: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
    private
    ^^^^^^^
lib/export/pq_selection.rb:62:5: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        pqs_array = Array.new
    ^^^^
lib/export/pq_selection.rb:62:21: C: Style/EmptyLiteral: Use array literal [] instead of Array.new.
        pqs_array = Array.new
                    ^^^^^^^^^
lib/export/pq_selection.rb:63:9: C: Style/MultilineIfModifier: Favor a normal unless-statement over a modifier clause in a multiline statement.
        @pqs_list.split(',').map { |p| ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:63:9: C: Style/SafeNavigation: Use safe navigation (&.) instead of checking if an object exists before calling the method.
        @pqs_list.split(',').map { |p| ...
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/export/pq_selection.rb:63:34: C: Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        @pqs_list.split(',').map { |p|
                                 ^
lib/export/pq_selection.rb:64:11: C: Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
          if Pq.find_by(uin: p).nil?
          ^^
lib/export/pq_selection.rb:72:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
lib/export/pq_pod.rb:6:83: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
      Pq.where('tabled_date >= ? AND tabled_date <= ? AND draft_answer_received ' +
                                                                                  ^
lib/export/pq_pod.rb:7:85: C: Layout/TrailingWhitespace: Trailing whitespace detected.
               'IS NOT null AND pod_clearance IS null AND answer_submitted IS null', 
                                                                                    ^
lib/gecko_report.rb:25:1: C: Layout/EmptyLines: Extra blank line detected.
lib/gecko_report.rb:47:1: C: Layout/EmptyLines: Extra blank line detected.
lib/gecko_report.rb:58:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
lib/gecko_report.rb:62:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
   item = {:name => name, :value => value}
  ^
lib/gecko_report.rb:62:11: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
   item = {:name => name, :value => value}
          ^
lib/gecko_report.rb:62:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
   item = {:name => name, :value => value}
           ^^^^^^^^
lib/gecko_report.rb:62:27: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
   item = {:name => name, :value => value}
                          ^^^^^^^^^
lib/gecko_report.rb:62:42: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
   item = {:name => name, :value => value}
                                         ^
lib/gecko_report.rb:68:62: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    directorate_return << Pq.joins(:original_division).group("name").draft_response_on_time_since.count
                                                             ^^^^^^
lib/gecko_report.rb:69:48: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    @by_directorate = directorate_return[0].map{|key,value| {:name => 'draft on time-' + key, :value => value} }
                                               ^
lib/gecko_report.rb:69:48: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @by_directorate = directorate_return[0].map{|key,value| {:name => 'draft on time-' + key, :value => value} }
                                               ^^
lib/gecko_report.rb:69:53: C: Layout/SpaceAfterComma: Space missing after comma.
    @by_directorate = directorate_return[0].map{|key,value| {:name => 'draft on time-' + key, :value => value} }
                                                    ^
lib/gecko_report.rb:69:61: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    @by_directorate = directorate_return[0].map{|key,value| {:name => 'draft on time-' + key, :value => value} }
                                                            ^
lib/gecko_report.rb:69:62: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @by_directorate = directorate_return[0].map{|key,value| {:name => 'draft on time-' + key, :value => value} }
                                                             ^^^^^^^^
lib/gecko_report.rb:69:95: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @by_directorate = directorate_return[0].map{|key,value| {:name => 'draft on time-' + key, :value => value} }
                                                                                              ^^^^^^^^^
lib/gecko_report.rb:69:110: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    @by_directorate = directorate_return[0].map{|key,value| {:name => 'draft on time-' + key, :value => value} }
                                                                                                             ^
lib/gecko_report.rb:71:65: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    directorate_questions << Pq.joins(:original_division).group("name").draft_response_due_since.count
                                                                ^^^^^^
lib/gecko_report.rb:72:5: C: Style/SelfAssignment: Use self-assignment shorthand +=.
    @by_directorate = @by_directorate + directorate_questions[0].map{|key,value| {:name => 'draft due since-' + key, :value => value} }
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/gecko_report.rb:72:69: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    @by_directorate = @by_directorate + directorate_questions[0].map{|key,value| {:name => 'draft due since-' + key, :value => value} }
                                                                    ^
lib/gecko_report.rb:72:69: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @by_directorate = @by_directorate + directorate_questions[0].map{|key,value| {:name => 'draft due since-' + key, :value => value} }
                                                                    ^^
lib/gecko_report.rb:72:74: C: Layout/SpaceAfterComma: Space missing after comma.
    @by_directorate = @by_directorate + directorate_questions[0].map{|key,value| {:name => 'draft due since-' + key, :value => value} }
                                                                         ^
lib/gecko_report.rb:72:82: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    @by_directorate = @by_directorate + directorate_questions[0].map{|key,value| {:name => 'draft due since-' + key, :value => value} }
                                                                                 ^
lib/gecko_report.rb:72:83: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @by_directorate = @by_directorate + directorate_questions[0].map{|key,value| {:name => 'draft due since-' + key, :value => value} }
                                                                                  ^^^^^^^^
lib/gecko_report.rb:72:118: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @by_directorate = @by_directorate + directorate_questions[0].map{|key,value| {:name => 'draft due since-' + key, :value => value} }
                                                                                                                     ^^^^^^^^^
lib/gecko_report.rb:72:133: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    @by_directorate = @by_directorate + directorate_questions[0].map{|key,value| {:name => 'draft due since-' + key, :value => value} }
                                                                                                                                    ^
lib/gecko_report.rb:73:1: C: Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 4).
#draft_response_due_since
^^^^^^^^^^^^^^^^^^^^^^^^^
lib/gecko_report.rb:73:1: C: Layout/LeadingCommentSpace: Missing space after #.
#draft_response_due_since
^^^^^^^^^^^^^^^^^^^^^^^^^
lib/gecko_report.rb:75:1: C: Layout/EmptyLines: Extra blank line detected.
lib/gecko_report.rb:75:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
lib/gecko_report.rb:80:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ministerial_return << Pq.joins(:minister).group("name").answered_by_deadline_since.count
                                                    ^^^^^^
lib/gecko_report.rb:81:45: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    @ministerial = ministerial_return[0].map{|key,value| {:name => 'answered by deadline-' + key, :value => value} }
                                            ^
lib/gecko_report.rb:81:45: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @ministerial = ministerial_return[0].map{|key,value| {:name => 'answered by deadline-' + key, :value => value} }
                                            ^^
lib/gecko_report.rb:81:50: C: Layout/SpaceAfterComma: Space missing after comma.
    @ministerial = ministerial_return[0].map{|key,value| {:name => 'answered by deadline-' + key, :value => value} }
                                                 ^
lib/gecko_report.rb:81:58: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    @ministerial = ministerial_return[0].map{|key,value| {:name => 'answered by deadline-' + key, :value => value} }
                                                         ^
lib/gecko_report.rb:81:59: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @ministerial = ministerial_return[0].map{|key,value| {:name => 'answered by deadline-' + key, :value => value} }
                                                          ^^^^^^^^
lib/gecko_report.rb:81:99: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @ministerial = ministerial_return[0].map{|key,value| {:name => 'answered by deadline-' + key, :value => value} }
                                                                                                  ^^^^^^^^^
lib/gecko_report.rb:81:114: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    @ministerial = ministerial_return[0].map{|key,value| {:name => 'answered by deadline-' + key, :value => value} }
                                                                                                                 ^
lib/gecko_report.rb:83:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ministerial_questions << Pq.joins(:minister).group("name").answer_due_since.count
                                                       ^^^^^^
lib/gecko_report.rb:84:5: C: Style/SelfAssignment: Use self-assignment shorthand +=.
    @ministerial = @ministerial + ministerial_questions[0].map{|key,value| {:name => 'due since-' + key, :value => value} }
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/gecko_report.rb:84:63: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
    @ministerial = @ministerial + ministerial_questions[0].map{|key,value| {:name => 'due since-' + key, :value => value} }
                                                              ^
lib/gecko_report.rb:84:63: C: Layout/SpaceInsideBlockBraces: Space between { and | missing.
    @ministerial = @ministerial + ministerial_questions[0].map{|key,value| {:name => 'due since-' + key, :value => value} }
                                                              ^^
lib/gecko_report.rb:84:68: C: Layout/SpaceAfterComma: Space missing after comma.
    @ministerial = @ministerial + ministerial_questions[0].map{|key,value| {:name => 'due since-' + key, :value => value} }
                                                                   ^
lib/gecko_report.rb:84:76: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    @ministerial = @ministerial + ministerial_questions[0].map{|key,value| {:name => 'due since-' + key, :value => value} }
                                                                           ^
lib/gecko_report.rb:84:77: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @ministerial = @ministerial + ministerial_questions[0].map{|key,value| {:name => 'due since-' + key, :value => value} }
                                                                            ^^^^^^^^
lib/gecko_report.rb:84:106: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    @ministerial = @ministerial + ministerial_questions[0].map{|key,value| {:name => 'due since-' + key, :value => value} }
                                                                                                         ^^^^^^^^^
lib/gecko_report.rb:84:121: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    @ministerial = @ministerial + ministerial_questions[0].map{|key,value| {:name => 'due since-' + key, :value => value} }
                                                                                                                        ^
lib/smoke_test.rb:5:3: C: Style/ModuleFunction: Use module_function instead of extend self.
  extend self
  ^^^^^^^^^^^
lib/smoke_test.rb:7:8: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  ALL = 
       ^
lib/smoke_test.rb:8:3: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
  [  ...
  ^^
lib/smoke_test.rb:8:4: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  [ 
   ^
lib/smoke_test.rb:8:4: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  [ 
   ^
lib/smoke_test.rb:17:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/health_check/pqa_api.rb:3:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
lib/health_check/pqa_api.rb:6:20: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    ERRS_TO_CATCH = 
                   ^
lib/health_check/pqa_api.rb:7:5: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
    [ ...
    ^
lib/health_check/pqa_api.rb:8:24: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      Net::ReadTimeout, 
                       ^
lib/health_check/pqa_api.rb:9:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      Errno::ECONNREFUSED, 
                          ^
lib/health_check/pqa_api.rb:12:6: C: Layout/IndentArray: Indent the right bracket the same as the start of the line where the left bracket is.
     ]
     ^
lib/health_check/pqa_api.rb:17:7: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using Time.now.to_i, use stricter Integer(Time.now, 10).
      Time.now.to_i > interval + time_last_run
      ^^^^^^^^^^^^^
lib/health_check/pqa_api.rb:20:1: C: Layout/EmptyLines: Extra blank line detected.
lib/health_check/pqa_api.rb:21:5: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
    def initialize
    ^^^
lib/health_check/pqa_api.rb:24:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/health_check/pqa_api.rb:30:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      status = @errors.any? ? "FAIL" : "OK"
                              ^^^^^^
lib/health_check/pqa_api.rb:30:40: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      status = @errors.any? ? "FAIL" : "OK"
                                       ^^^^
lib/health_check/pqa_api.rb:31:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/health_check/pqa_api.rb:34:20: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using t.to_i, use stricter Integer(t, 10).
        fp.puts "#{t.to_i}::#{status}::#{@errors.to_json}"
                   ^^^^^^
lib/health_check/pqa_api.rb:40:7: C: Style/DoubleNegation: Avoid the use of double negation (!!).
      !!(res.code =~ /^2/)
      ^
lib/health_check/pqa_api.rb:41:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
lib/health_check/pqa_api.rb:52:7: C: Style/DoubleNegation: Avoid the use of double negation (!!).
      !!(res.code =~ /^2/)
      ^
lib/health_check/pqa_api.rb:53:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
lib/health_check/pqa_api.rb:64:5: W: Lint/IneffectiveAccessModifier: private (on line 62) does not make singleton methods private. Use private_class_method or private inside a class << self block instead.
    def self.get_minimum_interval_in_seconds
    ^^^
lib/health_check/pqa_api.rb:64:14: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
    def self.get_minimum_interval_in_seconds
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/health_check/pqa_api.rb:68:5: W: Lint/IneffectiveAccessModifier: private (on line 62) does not make singleton methods private. Use private_class_method or private inside a class << self block instead.
    def self.get_time_last_run
    ^^^
lib/health_check/pqa_api.rb:68:14: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
    def self.get_time_last_run
             ^^^^^^^^^^^^^^^^^
lib/health_check/pqa_api.rb:71:21: W: Lint/UselessAssignment: Useless assignment to variable - status. Use _ or _status as a variable name to indicate that it won't be used.
          interval, status,  error_messages_as_json = fp.gets.chomp.split('::')
                    ^^^^^^
lib/health_check/pqa_api.rb:71:28: C: Layout/ExtraSpacing: Unnecessary spacing detected.
          interval, status,  error_messages_as_json = fp.gets.chomp.split('::')
                           ^
lib/health_check/pqa_api.rb:71:30: W: Lint/UselessAssignment: Useless assignment to variable - error_messages_as_json. Use _ or _error_messages_as_json as a variable name to indicate that it won't be used.
          interval, status,  error_messages_as_json = fp.gets.chomp.split('::')
                             ^^^^^^^^^^^^^^^^^^^^^^
lib/health_check/pqa_api.rb:72:11: W: Lint/UselessAssignment: Useless assignment to variable - interval.
          interval = interval.to_i
          ^^^^^^^^
lib/health_check/pqa_api.rb:72:22: W: Lint/NumberConversion: Replace unsafe number conversion with number class parsing, instead of using interval.to_i, use stricter Integer(interval, 10).
          interval = interval.to_i
                     ^^^^^^^^^^^^^
lib/health_check/pqa_api.rb:79:25: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def log_error(type, e)
                        ^
lib/health_check/pqa_api.rb:87:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/health_check/component.rb:42:27: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def log_unknown_error(e)
                          ^
lib/health_check/component.rb:54:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
lib/health_check/mail_worker.rb:13:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
lib/health_check/mail_worker.rb:22:7: C: Style/UnlessElse: Do not use unless with else. Rewrite these with the positive case first.
      unless failures.empty? ...
      ^^^^^^^^^^^^^^^^^^^^^^
lib/health_check/mail_worker.rb:28:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
lib/health_check/mail_worker.rb:37:12: W: Lint/DeprecatedClassMethods: File.exists? is deprecated in favor of File.exist?.
      File.exists?(PID_FILE) && File.ctime(PID_FILE) < (Time.now - TIMEOUT)
           ^^^^^^^
lib/health_check/mail_worker.rb:37:62: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
      File.exists?(PID_FILE) && File.ctime(PID_FILE) < (Time.now - TIMEOUT)
                                                             ^^^
lib/health_check/mail_worker.rb:41:68: C: Rails/TimeZone: Do not use Time.now without zone. Use one of Time.zone.now, Time.current, Time.now.in_time_zone, Time.now.utc, Time.now.getlocal, Time.now.xmlschema, Time.now.iso8601, Time.now.jisx0301, Time.now.rfc3339, Time.now.httpdate, Time.now.to_i, Time.now.to_f instead.
      MailService.new_mail.any? { |email| email.created_at < (Time.now - TIMEOUT) }
                                                                   ^^^
lib/health_check/database.rb:3:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
lib/health_check/database.rb:7:33: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        result = tuple.to_a == [{"result"=>"1"}]
                                ^
lib/health_check/database.rb:7:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        result = tuple.to_a == [{"result"=>"1"}]
                                 ^^^^^^^^
lib/health_check/database.rb:7:42: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =>.
        result = tuple.to_a == [{"result"=>"1"}]
                                         ^^
lib/health_check/database.rb:7:44: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        result = tuple.to_a == [{"result"=>"1"}]
                                           ^^^
lib/health_check/database.rb:7:47: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        result = tuple.to_a == [{"result"=>"1"}]
                                              ^
lib/health_check/database.rb:29:7: W: Lint/UselessAssignment: Useless assignment to variable - tuple.
      tuple = ActiveRecord::Base.connection.execute('select 1 as result')
      ^^^^^
lib/health_check/database.rb:34:68: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "Database Error: could not connect to #{config.database} " +
                                                                   ^
lib/health_check/database.rb:35:9: C: Layout/MultilineOperationIndentation: Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
        "on #{config.host} using #{config.adapter}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/health_check/database.rb:40:18: C: Performance/OpenStruct: Consider using Struct over OpenStruct to optimize the performance.
      OpenStruct.new(Rails.configuration.database_configuration[Rails.env])
                 ^^^
lib/health_check/database.rb:42:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
lib/health_check/send_grid.rb:4:5: C: Layout/IndentAssignment: Indent the first line of the right-hand-side of a multi-line assignment.
    [ ...
    ^
lib/health_check/send_grid.rb:17:28: C: Performance/OpenStruct: Consider using Struct over OpenStruct to optimize the performance.
      @config = OpenStruct.new(ActionMailer::Base.smtp_settings)
                           ^^^
lib/health_check/send_grid.rb:22:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      response = Net::SMTP.start(@config.address, @config.port) do |smtp| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/health_check/send_grid.rb:25:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/health_check/send_grid.rb:26:7: C: Style/DoubleNegation: Avoid the use of double negation (!!).
      !!response
      ^
lib/health_check/send_grid.rb:27:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
lib/health_check/send_grid.rb:37:7: C: Layout/MultilineAssignmentLayout: Right hand side of multi-line assignment is on the same line as the assignment operator =.
      response = Net::SMTP.start(@config.address, @config.port) do |smtp| ...
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/health_check/send_grid.rb:44:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
lib/health_check/send_grid.rb:45:7: C: Style/DoubleNegation: Avoid the use of double negation (!!).
      !!response
      ^
lib/health_check/send_grid.rb:46:1: C: Layout/EmptyLinesAroundExceptionHandlingKeywords: Extra empty line detected before the rescue.
lib/health_check/send_grid.rb:57:25: C: Naming/UncommunicativeMethodParamName: Method parameter must be at least 3 characters long.
    def log_error(type, e)
                        ^
lib/gecko_collection.rb:4:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  attr_reader :key_metric, 
                          ^
lib/gecko_collection.rb:5:19: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              :db, 
                  ^
lib/gecko_collection.rb:6:25: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              :sendgrid, 
                        ^
lib/gecko_collection.rb:7:24: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              :pqa_api, 
                       ^
lib/gecko_collection.rb:8:21: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              :mail, 
                    ^
lib/gecko_collection.rb:9:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
              :pqa_import, 
                          ^
lib/gecko_collection.rb:18:39: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    @pqa_import  = PqaImportStatus.new 
                                      ^
lib/gecko_collection.rb:24:7: C: Performance/RedundantBlockCall: Use yield instead of block.call.
      block.call(gecko_status)
      ^^^^^^^^^^^^^^^^^^^^^^^^
lib/gecko_collection.rb:30:7: C: Performance/RedundantBlockCall: Use yield instead of block.call.
      block.call(gecko_status)
      ^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:9:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ActiveRecord::Base.connection.execute("TRUNCATE TABLE progresses RESTART IDENTITY;")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:10:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ActiveRecord::Base.connection.execute("TRUNCATE TABLE ministers RESTART IDENTITY;")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:11:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ActiveRecord::Base.connection.execute("TRUNCATE TABLE directorates RESTART IDENTITY;")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:12:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ActiveRecord::Base.connection.execute("TRUNCATE TABLE divisions RESTART IDENTITY;")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:13:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ActiveRecord::Base.connection.execute("TRUNCATE TABLE deputy_directors RESTART IDENTITY;")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:14:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ActiveRecord::Base.connection.execute("TRUNCATE TABLE action_officers RESTART IDENTITY;")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:15:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ActiveRecord::Base.connection.execute("TRUNCATE TABLE press_desks RESTART IDENTITY;")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:16:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ActiveRecord::Base.connection.execute("TRUNCATE TABLE press_officers RESTART IDENTITY;")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:17:39: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ActiveRecord::Base.connection.execute("TRUNCATE TABLE ogds RESTART IDENTITY;")
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:20:1: W: Lint/UselessAssignment: Useless assignment to variable - progresses.
progresses = Progress.create([
^^^^^^^^^^
db/seeds.rb:21:3: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
  {name: Progress.UNASSIGNED},
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:21:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.UNASSIGNED},
  ^
db/seeds.rb:21:29: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.UNASSIGNED},
                            ^
db/seeds.rb:22:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.NO_RESPONSE},
  ^
db/seeds.rb:22:30: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.NO_RESPONSE},
                             ^
db/seeds.rb:23:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.REJECTED},
  ^
db/seeds.rb:23:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.REJECTED},
                          ^
db/seeds.rb:24:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.DRAFT_PENDING},
  ^
db/seeds.rb:24:32: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.DRAFT_PENDING},
                               ^
db/seeds.rb:25:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.WITH_POD},
  ^
db/seeds.rb:25:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.WITH_POD},
                          ^
db/seeds.rb:26:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.POD_QUERY},
  ^
db/seeds.rb:26:28: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.POD_QUERY},
                           ^
db/seeds.rb:27:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.POD_CLEARED},
  ^
db/seeds.rb:27:30: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.POD_CLEARED},
                             ^
db/seeds.rb:28:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.WITH_MINISTER},
  ^
db/seeds.rb:28:32: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.WITH_MINISTER},
                               ^
db/seeds.rb:29:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.MINISTERIAL_QUERY},
  ^
db/seeds.rb:29:36: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.MINISTERIAL_QUERY},
                                   ^
db/seeds.rb:30:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.MINISTER_CLEARED},
  ^
db/seeds.rb:30:35: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.MINISTER_CLEARED},
                                  ^
db/seeds.rb:31:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.ANSWERED},
  ^
db/seeds.rb:31:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.ANSWERED},
                          ^
db/seeds.rb:32:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {name: Progress.TRANSFERRED_OUT}])
  ^
db/seeds.rb:32:34: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {name: Progress.TRANSFERRED_OUT}])
                                 ^
db/seeds.rb:32:35: C: Layout/MultilineArrayBraceLayout: The closing array brace must be on the line after the last array element when the opening brace is on a separate line from the first array element.
  {name: Progress.TRANSFERRED_OUT}])
                                  ^
db/seeds.rb:34:1: W: Lint/UselessAssignment: Useless assignment to variable - ministers.
ministers = Minister.create!([
^^^^^^^^^
db/seeds.rb:35:1: C: Layout/Tab: Tab detected.
	{name: 'Chris Grayling', title: 'Secretary of State and Lord High Chancellor of Great Britain'},
^
db/seeds.rb:35:2: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
	{name: 'Chris Grayling', title: 'Secretary of State and Lord High Chancellor of Great Britain'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:35:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'Chris Grayling', title: 'Secretary of State and Lord High Chancellor of Great Britain'},
 ^
db/seeds.rb:35:96: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'Chris Grayling', title: 'Secretary of State and Lord High Chancellor of Great Britain'},
                                                                                               ^
db/seeds.rb:36:1: C: Layout/Tab: Tab detected.
	{name: 'Damian Green (MP)', title: 'Minister of State'},
^
db/seeds.rb:36:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'Damian Green (MP)', title: 'Minister of State'},
 ^
db/seeds.rb:36:56: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'Damian Green (MP)', title: 'Minister of State'},
                                                       ^
db/seeds.rb:37:1: C: Layout/Tab: Tab detected.
	{name: 'Jeremy Wright (MP)', title: 'Parliamentary Under-Secretary of State; Minister for Prisons and Rehabilitation'},
^
db/seeds.rb:37:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'Jeremy Wright (MP)', title: 'Parliamentary Under-Secretary of State; Minister for Prisons and Rehabilitation'},
 ^
db/seeds.rb:37:119: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'Jeremy Wright (MP)', title: 'Parliamentary Under-Secretary of State; Minister for Prisons and Rehabilitation'},
                                                                                                                      ^
db/seeds.rb:38:1: C: Layout/Tab: Tab detected.
	{name: 'Shailesh Vara (MP)', title: 'Parliamentary Under-Secretary of State'},
^
db/seeds.rb:38:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'Shailesh Vara (MP)', title: 'Parliamentary Under-Secretary of State'},
 ^
db/seeds.rb:38:78: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'Shailesh Vara (MP)', title: 'Parliamentary Under-Secretary of State'},
                                                                             ^
db/seeds.rb:39:1: C: Layout/Tab: Tab detected.
	{name: 'Simon Hughes (MP)',  title: 'Minister of State for Justice & Civil Liberties'},
^
db/seeds.rb:39:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'Simon Hughes (MP)',  title: 'Minister of State for Justice & Civil Liberties'},
 ^
db/seeds.rb:39:87: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'Simon Hughes (MP)',  title: 'Minister of State for Justice & Civil Liberties'},
                                                                                      ^
db/seeds.rb:40:1: C: Layout/Tab: Tab detected.
	{name: 'Lord Faulks QC',  title: 'Lord Faulks QC, Minister of State'}])
^
db/seeds.rb:40:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'Lord Faulks QC',  title: 'Lord Faulks QC, Minister of State'}])
 ^
db/seeds.rb:40:70: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'Lord Faulks QC',  title: 'Lord Faulks QC, Minister of State'}])
                                                                     ^
db/seeds.rb:40:71: C: Layout/MultilineArrayBraceLayout: The closing array brace must be on the line after the last array element when the opening brace is on a separate line from the first array element.
	{name: 'Lord Faulks QC',  title: 'Lord Faulks QC, Minister of State'}])
                                                                      ^
db/seeds.rb:42:1: W: Lint/UselessAssignment: Useless assignment to variable - directorates.
directorates = Directorate.create!([
^^^^^^^^^^^^
db/seeds.rb:43:1: C: Layout/Tab: Tab detected.
	{name: 'Finance Assurance and Commercial'},
^
db/seeds.rb:43:2: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
	{name: 'Finance Assurance and Commercial'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:43:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'Finance Assurance and Commercial'},
 ^
db/seeds.rb:43:43: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'Finance Assurance and Commercial'},
                                          ^
db/seeds.rb:44:1: C: Layout/Tab: Tab detected.
	{name: 'Criminal Justice'},
^
db/seeds.rb:44:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'Criminal Justice'},
 ^
db/seeds.rb:44:27: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'Criminal Justice'},
                          ^
db/seeds.rb:45:1: C: Layout/Tab: Tab detected.
	{name: 'Law and Access to Justice'},
^
db/seeds.rb:45:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'Law and Access to Justice'},
 ^
db/seeds.rb:45:36: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'Law and Access to Justice'},
                                   ^
db/seeds.rb:46:1: C: Layout/Tab: Tab detected.
	{name: 'NOMS'},
^
db/seeds.rb:46:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'NOMS'},
 ^
db/seeds.rb:46:15: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'NOMS'},
              ^
db/seeds.rb:47:1: C: Layout/Tab: Tab detected.
	{name: 'HMCTS'},
^
db/seeds.rb:47:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'HMCTS'},
 ^
db/seeds.rb:47:16: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'HMCTS'},
               ^
db/seeds.rb:48:1: C: Layout/Tab: Tab detected.
	{name: 'LAA and Corporate Services'},
^
db/seeds.rb:48:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{name: 'LAA and Corporate Services'},
 ^
db/seeds.rb:48:37: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{name: 'LAA and Corporate Services'},
                                    ^
db/seeds.rb:48:38: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
	{name: 'LAA and Corporate Services'},
                                     ^
db/seeds.rb:49:1: C: Layout/Tab: Tab detected.
	])
^
db/seeds.rb:49:2: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
	])
 ^
db/seeds.rb:51:1: W: Lint/UselessAssignment: Useless assignment to variable - divisions.
divisions = Division.create!([
^^^^^^^^^
db/seeds.rb:52:1: C: Layout/Tab: Tab detected.
	{directorate_id:  1, name: 'Corporate Finance'},
^
db/seeds.rb:52:2: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
	{directorate_id:  1, name: 'Corporate Finance'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:52:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  1, name: 'Corporate Finance'},
 ^
db/seeds.rb:52:48: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  1, name: 'Corporate Finance'},
                                               ^
db/seeds.rb:53:1: C: Layout/Tab: Tab detected.
	{directorate_id:  1, name: 'Analytical Services'},
^
db/seeds.rb:53:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  1, name: 'Analytical Services'},
 ^
db/seeds.rb:53:50: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  1, name: 'Analytical Services'},
                                                 ^
db/seeds.rb:54:1: C: Layout/Tab: Tab detected.
	{directorate_id:  1, name: 'Procurement'},
^
db/seeds.rb:54:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  1, name: 'Procurement'},
 ^
db/seeds.rb:54:42: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  1, name: 'Procurement'},
                                         ^
db/seeds.rb:55:1: C: Layout/Tab: Tab detected.
	{directorate_id:  1, name: 'Change due diligence'},
^
db/seeds.rb:55:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  1, name: 'Change due diligence'},
 ^
db/seeds.rb:55:51: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  1, name: 'Change due diligence'},
                                                  ^
db/seeds.rb:56:1: C: Layout/Tab: Tab detected.
	{directorate_id:  2, name: 'Sentencing and Rehabilitation Policy'},
^
db/seeds.rb:56:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  2, name: 'Sentencing and Rehabilitation Policy'},
 ^
db/seeds.rb:56:67: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  2, name: 'Sentencing and Rehabilitation Policy'},
                                                                  ^
db/seeds.rb:57:1: C: Layout/Tab: Tab detected.
	{directorate_id:  2, name: 'Justice Reform'},
^
db/seeds.rb:57:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  2, name: 'Justice Reform'},
 ^
db/seeds.rb:57:45: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  2, name: 'Justice Reform'},
                                            ^
db/seeds.rb:58:1: C: Layout/Tab: Tab detected.
	{directorate_id:  2, name: 'Transforming Rehabilitation'},
^
db/seeds.rb:58:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  2, name: 'Transforming Rehabilitation'},
 ^
db/seeds.rb:58:58: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  2, name: 'Transforming Rehabilitation'},
                                                         ^
db/seeds.rb:59:1: C: Layout/Tab: Tab detected.
	{directorate_id:  2, name: 'MoJ Strategy'},
^
db/seeds.rb:59:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  2, name: 'MoJ Strategy'},
 ^
db/seeds.rb:59:43: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  2, name: 'MoJ Strategy'},
                                          ^
db/seeds.rb:60:1: C: Layout/Tab: Tab detected.
	{directorate_id:  3, name: 'Law, Rights, International'},
^
db/seeds.rb:60:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  3, name: 'Law, Rights, International'},
 ^
db/seeds.rb:60:57: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  3, name: 'Law, Rights, International'},
                                                        ^
db/seeds.rb:61:1: C: Layout/Tab: Tab detected.
	{directorate_id:  3, name: 'Access to Justice'},
^
db/seeds.rb:61:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  3, name: 'Access to Justice'},
 ^
db/seeds.rb:61:48: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  3, name: 'Access to Justice'},
                                               ^
db/seeds.rb:62:1: C: Layout/Tab: Tab detected.
	{directorate_id:  3, name: 'Judicial Reward and Pensions reform'},
^
db/seeds.rb:62:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  3, name: 'Judicial Reward and Pensions reform'},
 ^
db/seeds.rb:62:66: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  3, name: 'Judicial Reward and Pensions reform'},
                                                                 ^
db/seeds.rb:63:1: C: Layout/Tab: Tab detected.
	{directorate_id:  3, name: 'Communications and Information'},
^
db/seeds.rb:63:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  3, name: 'Communications and Information'},
 ^
db/seeds.rb:63:61: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  3, name: 'Communications and Information'},
                                                            ^
db/seeds.rb:64:1: C: Layout/Tab: Tab detected.
	{directorate_id:  4, name: 'HR'},
^
db/seeds.rb:64:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  4, name: 'HR'},
 ^
db/seeds.rb:64:33: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  4, name: 'HR'},
                                ^
db/seeds.rb:65:1: C: Layout/Tab: Tab detected.
	{directorate_id:  4, name: 'Public Sector Prisons'},
^
db/seeds.rb:65:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  4, name: 'Public Sector Prisons'},
 ^
db/seeds.rb:65:52: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  4, name: 'Public Sector Prisons'},
                                                   ^
db/seeds.rb:66:1: C: Layout/Tab: Tab detected.
	{directorate_id:  5, name: 'Civil, Family and Tribunals'},
^
db/seeds.rb:66:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  5, name: 'Civil, Family and Tribunals'},
 ^
db/seeds.rb:66:58: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  5, name: 'Civil, Family and Tribunals'},
                                                         ^
db/seeds.rb:67:1: C: Layout/Tab: Tab detected.
	{directorate_id:  5, name: 'Crime'},
^
db/seeds.rb:67:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  5, name: 'Crime'},
 ^
db/seeds.rb:67:36: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  5, name: 'Crime'},
                                   ^
db/seeds.rb:68:1: C: Layout/Tab: Tab detected.
	{directorate_id:  5, name: 'IT'},
^
db/seeds.rb:68:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  5, name: 'IT'},
 ^
db/seeds.rb:68:33: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  5, name: 'IT'},
                                ^
db/seeds.rb:69:1: C: Layout/Tab: Tab detected.
	{directorate_id:  6, name: 'Shared Services'},
^
db/seeds.rb:69:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  6, name: 'Shared Services'},
 ^
db/seeds.rb:69:46: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  6, name: 'Shared Services'},
                                             ^
db/seeds.rb:70:1: C: Layout/Tab: Tab detected.
	{directorate_id:  6, name: 'MoJ Technology'}
^
db/seeds.rb:70:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{directorate_id:  6, name: 'MoJ Technology'}
 ^
db/seeds.rb:70:45: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{directorate_id:  6, name: 'MoJ Technology'}
                                            ^
db/seeds.rb:71:1: C: Layout/Tab: Tab detected.
	])
^
db/seeds.rb:71:2: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
	])
 ^
db/seeds.rb:73:1: W: Lint/UselessAssignment: Useless assignment to variable - deputy_directors.
deputy_directors = DeputyDirector.create!([
^^^^^^^^^^^^^^^^
db/seeds.rb:74:3: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
  {division_id: 1, email: 'dd1@email.com', name: 'Craig Watkins'},
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:74:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {division_id: 1, email: 'dd1@email.com', name: 'Craig Watkins'},
  ^
db/seeds.rb:74:65: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {division_id: 1, email: 'dd1@email.com', name: 'Craig Watkins'},
                                                                ^
db/seeds.rb:75:1: C: Layout/Tab: Tab detected.
	{division_id: 2, email: 'dd2@email.com', name: 'Rebecca Endean'},
^
db/seeds.rb:75:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 2, email: 'dd2@email.com', name: 'Rebecca Endean'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:75:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 2, email: 'dd2@email.com', name: 'Rebecca Endean'},
 ^
db/seeds.rb:75:65: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 2, email: 'dd2@email.com', name: 'Rebecca Endean'},
                                                                ^
db/seeds.rb:76:1: C: Layout/Tab: Tab detected.
	{division_id: 3, email: 'dd3@email.com', name: 'Procurement'},
^
db/seeds.rb:76:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 3, email: 'dd3@email.com', name: 'Procurement'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:76:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 3, email: 'dd3@email.com', name: 'Procurement'},
 ^
db/seeds.rb:76:62: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 3, email: 'dd3@email.com', name: 'Procurement'},
                                                             ^
db/seeds.rb:77:1: C: Layout/Tab: Tab detected.
	{division_id: 4, email: 'dd4@email.com', name: 'Jonathon Sedgwick'},
^
db/seeds.rb:77:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 4, email: 'dd4@email.com', name: 'Jonathon Sedgwick'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:77:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 4, email: 'dd4@email.com', name: 'Jonathon Sedgwick'},
 ^
db/seeds.rb:77:68: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 4, email: 'dd4@email.com', name: 'Jonathon Sedgwick'},
                                                                   ^
db/seeds.rb:78:1: C: Layout/Tab: Tab detected.
	{division_id: 5, email: 'dd5@email.com', name: 'Helen Judge'},
^
db/seeds.rb:78:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 5, email: 'dd5@email.com', name: 'Helen Judge'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:78:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 5, email: 'dd5@email.com', name: 'Helen Judge'},
 ^
db/seeds.rb:78:62: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 5, email: 'dd5@email.com', name: 'Helen Judge'},
                                                             ^
db/seeds.rb:79:1: C: Layout/Tab: Tab detected.
	{division_id: 6, email: 'dd6@email.com', name: 'Paul Kett'},
^
db/seeds.rb:79:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 6, email: 'dd6@email.com', name: 'Paul Kett'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:79:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 6, email: 'dd6@email.com', name: 'Paul Kett'},
 ^
db/seeds.rb:79:60: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 6, email: 'dd6@email.com', name: 'Paul Kett'},
                                                           ^
db/seeds.rb:80:1: C: Layout/Tab: Tab detected.
	{division_id: 7, email: 'dd7@email.com', name: 'Ian Poree'},
^
db/seeds.rb:80:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 7, email: 'dd7@email.com', name: 'Ian Poree'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:80:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 7, email: 'dd7@email.com', name: 'Ian Poree'},
 ^
db/seeds.rb:80:60: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 7, email: 'dd7@email.com', name: 'Ian Poree'},
                                                           ^
db/seeds.rb:81:1: C: Layout/Tab: Tab detected.
	{division_id: 8, email: 'dd8@email.com', name: 'Darren Tierney'},
^
db/seeds.rb:81:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 8, email: 'dd8@email.com', name: 'Darren Tierney'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:81:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 8, email: 'dd8@email.com', name: 'Darren Tierney'},
 ^
db/seeds.rb:81:65: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 8, email: 'dd8@email.com', name: 'Darren Tierney'},
                                                                ^
db/seeds.rb:82:1: C: Layout/Tab: Tab detected.
	{division_id: 9, email: 'dd9@email.com', name: 'Mark Sweeney'},
^
db/seeds.rb:82:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 9, email: 'dd9@email.com', name: 'Mark Sweeney'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:82:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 9, email: 'dd9@email.com', name: 'Mark Sweeney'},
 ^
db/seeds.rb:82:63: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 9, email: 'dd9@email.com', name: 'Mark Sweeney'},
                                                              ^
db/seeds.rb:83:1: C: Layout/Tab: Tab detected.
	{division_id: 10,email: 'dd10@email.com',  name: 'Vacant'},
^
db/seeds.rb:83:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 10,email: 'dd10@email.com',  name: 'Vacant'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:83:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 10,email: 'dd10@email.com',  name: 'Vacant'},
 ^
db/seeds.rb:83:18: C: Layout/SpaceAfterComma: Space missing after comma.
	{division_id: 10,email: 'dd10@email.com',  name: 'Vacant'},
                 ^
db/seeds.rb:83:59: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 10,email: 'dd10@email.com',  name: 'Vacant'},
                                                          ^
db/seeds.rb:84:1: C: Layout/Tab: Tab detected.
	{division_id: 11,email: 'dd11@email.com',  name: 'Pat Lloyd'},
^
db/seeds.rb:84:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 11,email: 'dd11@email.com',  name: 'Pat Lloyd'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:84:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 11,email: 'dd11@email.com',  name: 'Pat Lloyd'},
 ^
db/seeds.rb:84:18: C: Layout/SpaceAfterComma: Space missing after comma.
	{division_id: 11,email: 'dd11@email.com',  name: 'Pat Lloyd'},
                 ^
db/seeds.rb:84:62: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 11,email: 'dd11@email.com',  name: 'Pat Lloyd'},
                                                             ^
db/seeds.rb:85:1: C: Layout/Tab: Tab detected.
	{division_id: 12,email: 'dd12@email.com',  name: 'Pam Teare'},
^
db/seeds.rb:85:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 12,email: 'dd12@email.com',  name: 'Pam Teare'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:85:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 12,email: 'dd12@email.com',  name: 'Pam Teare'},
 ^
db/seeds.rb:85:18: C: Layout/SpaceAfterComma: Space missing after comma.
	{division_id: 12,email: 'dd12@email.com',  name: 'Pam Teare'},
                 ^
db/seeds.rb:85:62: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 12,email: 'dd12@email.com',  name: 'Pam Teare'},
                                                             ^
db/seeds.rb:86:1: C: Layout/Tab: Tab detected.
	{division_id: 13,email: 'dd13@email.com',  name: 'Carol Carpenter'},
^
db/seeds.rb:86:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 13,email: 'dd13@email.com',  name: 'Carol Carpenter'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:86:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 13,email: 'dd13@email.com',  name: 'Carol Carpenter'},
 ^
db/seeds.rb:86:18: C: Layout/SpaceAfterComma: Space missing after comma.
	{division_id: 13,email: 'dd13@email.com',  name: 'Carol Carpenter'},
                 ^
db/seeds.rb:86:68: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 13,email: 'dd13@email.com',  name: 'Carol Carpenter'},
                                                                   ^
db/seeds.rb:87:1: C: Layout/Tab: Tab detected.
	{division_id: 14,email: 'dd14@email.com',  name: 'Phil Copple'},
^
db/seeds.rb:87:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 14,email: 'dd14@email.com',  name: 'Phil Copple'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:87:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 14,email: 'dd14@email.com',  name: 'Phil Copple'},
 ^
db/seeds.rb:87:18: C: Layout/SpaceAfterComma: Space missing after comma.
	{division_id: 14,email: 'dd14@email.com',  name: 'Phil Copple'},
                 ^
db/seeds.rb:87:64: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 14,email: 'dd14@email.com',  name: 'Phil Copple'},
                                                               ^
db/seeds.rb:88:1: C: Layout/Tab: Tab detected.
	{division_id: 15,email: 'dd15@email.com',  name: 'Kevin Sadler'},
^
db/seeds.rb:88:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 15,email: 'dd15@email.com',  name: 'Kevin Sadler'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:88:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 15,email: 'dd15@email.com',  name: 'Kevin Sadler'},
 ^
db/seeds.rb:88:18: C: Layout/SpaceAfterComma: Space missing after comma.
	{division_id: 15,email: 'dd15@email.com',  name: 'Kevin Sadler'},
                 ^
db/seeds.rb:88:65: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 15,email: 'dd15@email.com',  name: 'Kevin Sadler'},
                                                                ^
db/seeds.rb:89:1: C: Layout/Tab: Tab detected.
	{division_id: 16,email: 'dd16@email.com',  name: 'Guy Tompkins'},
^
db/seeds.rb:89:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 16,email: 'dd16@email.com',  name: 'Guy Tompkins'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:89:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 16,email: 'dd16@email.com',  name: 'Guy Tompkins'},
 ^
db/seeds.rb:89:18: C: Layout/SpaceAfterComma: Space missing after comma.
	{division_id: 16,email: 'dd16@email.com',  name: 'Guy Tompkins'},
                 ^
db/seeds.rb:89:65: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 16,email: 'dd16@email.com',  name: 'Guy Tompkins'},
                                                                ^
db/seeds.rb:90:1: C: Layout/Tab: Tab detected.
	{division_id: 17,email: 'dd17@email.com',  name: 'Paul Shipley'},
^
db/seeds.rb:90:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 17,email: 'dd17@email.com',  name: 'Paul Shipley'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:90:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 17,email: 'dd17@email.com',  name: 'Paul Shipley'},
 ^
db/seeds.rb:90:18: C: Layout/SpaceAfterComma: Space missing after comma.
	{division_id: 17,email: 'dd17@email.com',  name: 'Paul Shipley'},
                 ^
db/seeds.rb:90:65: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 17,email: 'dd17@email.com',  name: 'Paul Shipley'},
                                                                ^
db/seeds.rb:91:1: C: Layout/Tab: Tab detected.
	{division_id: 18,email: 'dd18@email.com',  name: 'Gerry Smith'},
^
db/seeds.rb:91:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 18,email: 'dd18@email.com',  name: 'Gerry Smith'},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:91:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 18,email: 'dd18@email.com',  name: 'Gerry Smith'},
 ^
db/seeds.rb:91:18: C: Layout/SpaceAfterComma: Space missing after comma.
	{division_id: 18,email: 'dd18@email.com',  name: 'Gerry Smith'},
                 ^
db/seeds.rb:91:64: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 18,email: 'dd18@email.com',  name: 'Gerry Smith'},
                                                               ^
db/seeds.rb:92:1: C: Layout/Tab: Tab detected.
	{division_id: 19,email: 'dd19@email.com',  name: 'Nick Ramsey'}
^
db/seeds.rb:92:2: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
	{division_id: 19,email: 'dd19@email.com',  name: 'Nick Ramsey'}
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:92:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{division_id: 19,email: 'dd19@email.com',  name: 'Nick Ramsey'}
 ^
db/seeds.rb:92:18: C: Layout/SpaceAfterComma: Space missing after comma.
	{division_id: 19,email: 'dd19@email.com',  name: 'Nick Ramsey'}
                 ^
db/seeds.rb:92:64: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{division_id: 19,email: 'dd19@email.com',  name: 'Nick Ramsey'}
                                                               ^
db/seeds.rb:93:1: C: Layout/Tab: Tab detected.
	])
^
db/seeds.rb:93:2: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
	])
 ^
db/seeds.rb:96:5: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
    {name: 'Finance press desk'},
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:96:5: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    {name: 'Finance press desk'},
    ^
db/seeds.rb:96:32: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    {name: 'Finance press desk'},
                               ^
db/seeds.rb:97:5: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    {name: 'Prisons press desk'}
    ^
db/seeds.rb:97:32: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    {name: 'Prisons press desk'}
                               ^
db/seeds.rb:98:5: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
db/seeds.rb:101:5: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
    {name: 'press officer one', email: 'one@press.office.com', press_desk_id: 1 },
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:101:5: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    {name: 'press officer one', email: 'one@press.office.com', press_desk_id: 1 },
    ^
db/seeds.rb:102:5: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    {name: 'press officer two', email: 'two@press.office.com', press_desk_id: 1 },
    ^
db/seeds.rb:103:5: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    {name: 'press officer three', email: 'three@press.office.com', press_desk_id: 2 },
    ^
db/seeds.rb:104:5: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    {name: 'press officer four', email: 'four@press.office.com', press_desk_id: 2 },
    ^
db/seeds.rb:104:84: C: Style/TrailingCommaInArrayLiteral: Avoid comma after the last item of an array.
    {name: 'press officer four', email: 'four@press.office.com', press_desk_id: 2 },
                                                                                   ^
db/seeds.rb:105:5: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
db/seeds.rb:107:1: W: Lint/UselessAssignment: Useless assignment to variable - action_officers.
action_officers = ActionOfficer.create!([
^^^^^^^^^^^^^^^
db/seeds.rb:108:1: C: Layout/Tab: Tab detected.
	{deputy_director_id: 17, name: 'Colin Bruce', email: 'colin.bruce@digital.justice.gov.uk', press_desk_id: 1},
^
db/seeds.rb:108:2: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
	{deputy_director_id: 17, name: 'Colin Bruce', email: 'colin.bruce@digital.justice.gov.uk', press_desk_id: 1},
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:108:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{deputy_director_id: 17, name: 'Colin Bruce', email: 'colin.bruce@digital.justice.gov.uk', press_desk_id: 1},
 ^
db/seeds.rb:108:109: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{deputy_director_id: 17, name: 'Colin Bruce', email: 'colin.bruce@digital.justice.gov.uk', press_desk_id: 1},
                                                                                                            ^
db/seeds.rb:109:1: C: Layout/Tab: Tab detected.
	{deputy_director_id: 19, name: 'Daniel Penny', email: 'daniel.penny@digital.justice.gov.uk', press_desk_id: 1},
^
db/seeds.rb:109:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{deputy_director_id: 19, name: 'Daniel Penny', email: 'daniel.penny@digital.justice.gov.uk', press_desk_id: 1},
 ^
db/seeds.rb:109:111: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{deputy_director_id: 19, name: 'Daniel Penny', email: 'daniel.penny@digital.justice.gov.uk', press_desk_id: 1},
                                                                                                              ^
db/seeds.rb:110:1: C: Layout/Tab: Tab detected.
	{deputy_director_id: 6, name: 'David Hernandez', email: 'david.hernandez@digital.justice.gov.uk', press_desk_id: 1},
^
db/seeds.rb:110:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{deputy_director_id: 6, name: 'David Hernandez', email: 'david.hernandez@digital.justice.gov.uk', press_desk_id: 1},
 ^
db/seeds.rb:110:116: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{deputy_director_id: 6, name: 'David Hernandez', email: 'david.hernandez@digital.justice.gov.uk', press_desk_id: 1},
                                                                                                                   ^
db/seeds.rb:111:1: C: Layout/Tab: Tab detected.
	{deputy_director_id: 7, name: 'Tehseen Udin', email: 'tehseen.udin@digital.justice.gov.uk', press_desk_id: 1},
^
db/seeds.rb:111:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{deputy_director_id: 7, name: 'Tehseen Udin', email: 'tehseen.udin@digital.justice.gov.uk', press_desk_id: 1},
 ^
db/seeds.rb:111:110: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{deputy_director_id: 7, name: 'Tehseen Udin', email: 'tehseen.udin@digital.justice.gov.uk', press_desk_id: 1},
                                                                                                             ^
db/seeds.rb:112:1: C: Layout/Tab: Tab detected.
	{deputy_director_id: 8, name: 'Tom Wynne-Morgan', email: 'tom.wynne-morgan@digital.justice.gov.uk', press_desk_id: 2},
^
db/seeds.rb:112:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{deputy_director_id: 8, name: 'Tom Wynne-Morgan', email: 'tom.wynne-morgan@digital.justice.gov.uk', press_desk_id: 2},
 ^
db/seeds.rb:112:118: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{deputy_director_id: 8, name: 'Tom Wynne-Morgan', email: 'tom.wynne-morgan@digital.justice.gov.uk', press_desk_id: 2},
                                                                                                                     ^
db/seeds.rb:113:1: C: Layout/Tab: Tab detected.
	{deputy_director_id: 9, name: 'Tom Norman', email: 'tom.norman@digital.justice.gov.uk', press_desk_id: 2},
^
db/seeds.rb:113:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{deputy_director_id: 9, name: 'Tom Norman', email: 'tom.norman@digital.justice.gov.uk', press_desk_id: 2},
 ^
db/seeds.rb:113:106: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{deputy_director_id: 9, name: 'Tom Norman', email: 'tom.norman@digital.justice.gov.uk', press_desk_id: 2},
                                                                                                         ^
db/seeds.rb:114:1: C: Layout/Tab: Tab detected.
	{deputy_director_id: 10, name: 'Mary Henley', email: 'mary.henley@digital.justice.gov.uk', press_desk_id: 2}
^
db/seeds.rb:114:2: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
	{deputy_director_id: 10, name: 'Mary Henley', email: 'mary.henley@digital.justice.gov.uk', press_desk_id: 2}
 ^
db/seeds.rb:114:109: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
	{deputy_director_id: 10, name: 'Mary Henley', email: 'mary.henley@digital.justice.gov.uk', press_desk_id: 2}
                                                                                                            ^
db/seeds.rb:115:1: C: Layout/Tab: Tab detected.
	])
^
db/seeds.rb:115:2: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
	])
 ^
db/seeds.rb:118:5: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
    {name:'Ministry of Defence', acronym:'MOD'}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:118:5: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
    {name:'Ministry of Defence', acronym:'MOD'}
    ^
db/seeds.rb:118:10: C: Layout/SpaceAfterColon: Space missing after colon.
    {name:'Ministry of Defence', acronym:'MOD'}
         ^
db/seeds.rb:118:41: C: Layout/SpaceAfterColon: Space missing after colon.
    {name:'Ministry of Defence', acronym:'MOD'}
                                        ^
db/seeds.rb:118:47: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
    {name:'Ministry of Defence', acronym:'MOD'}
                                              ^
db/seeds.rb:119:3: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
  ])
  ^
db/migrate/20140707105329_add_round_robin_to_p_qs.rb:3:5: C: Rails/BulkChangeTable: You can combine alter queries using bulk: true options.
    change_table :pqs do |t|
    ^^^^^^^^^^^^^^^^^
db/migrate/20140708110911_add_pq_draft_and_pod_fields_to_pqs.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column :pqs, :i_will_write, :boolean
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20141126185259_merge_accept_reject_columns_to_response.rb:8:5: C: Rails/BulkChangeTable: You can use change_table :action_officers_pqs, bulk: true to combine alter queries.
    remove_column :action_officers_pqs, :accept
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20141126185259_merge_accept_reject_columns_to_response.rb:13:5: C: Rails/BulkChangeTable: You can use change_table :action_officers_pqs, bulk: true to combine alter queries.
    add_column :action_officers_pqs, :accept, :boolean
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20141126185259_merge_accept_reject_columns_to_response.rb:22:1: C: Layout/TrailingBlankLines: 1 trailing blank lines detected.
db/migrate/20150428133026_clean_stats_data.rb:4:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "UPDATE action_officers_pqs " +
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20150428133026_clean_stats_data.rb:4:37: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
      "UPDATE action_officers_pqs " +
                                    ^
db/migrate/20150428133026_clean_stats_data.rb:5:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "SET updated_at = created_at " +
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20150428133026_clean_stats_data.rb:5:38: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
      "SET updated_at = created_at " +
                                     ^
db/migrate/20150428133026_clean_stats_data.rb:6:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "WHERE action_officer_id = 497;"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20150428133026_clean_stats_data.rb:8:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
db/migrate/20150428133026_clean_stats_data.rb:10:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "UPDATE action_officers_pqs " +
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20150428133026_clean_stats_data.rb:10:37: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
      "UPDATE action_officers_pqs " +
                                    ^
db/migrate/20150428133026_clean_stats_data.rb:11:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "SET created_at = pqs.created_at FROM pqs " +
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20150428133026_clean_stats_data.rb:11:51: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
      "SET created_at = pqs.created_at FROM pqs " +
                                                  ^
db/migrate/20150428133026_clean_stats_data.rb:12:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "WHERE action_officers_pqs.action_officer_id = 497 " +
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20150428133026_clean_stats_data.rb:12:60: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
      "WHERE action_officers_pqs.action_officer_id = 497 " +
                                                           ^
db/migrate/20150428133026_clean_stats_data.rb:13:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      "AND action_officers_pqs.pq_id = pqs.id;"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140619102928_add_draft_answer_fields_to_pqs.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column :pqs, :draft_answer_received, :datetime
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20150715103549_create_early_bird_members.rb:7:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
db/migrate/20150306114738_follow_up_to.rb:3:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    add_column :pqs, "follow_up_to", :string
                     ^^^^^^^^^^^^^^
db/migrate/20150306114738_follow_up_to.rb:7:7: C: Style/IfUnlessModifier: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
      if Pq.exists?(uin: uin)
      ^^
db/migrate/20150306114738_follow_up_to.rb:8:12: C: Rails/SkipsModelValidations: Avoid using update_column because it skips validations.
        pq.update_column(:follow_up_to, uin)
           ^^^^^^^^^^^^^
db/migrate/20150306114738_follow_up_to.rb:13:3: C: Style/EmptyMethod: Put empty method definitions on a single line.
  def down ...
  ^^^^^^^^
db/migrate/20150519100413_add_acknowledged_to_tokens.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :tokens, bulk: true to combine alter queries.
    add_column :tokens, :acknowledged, :string
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140619101444_remove_press_interest_and_seen_by_press_from_pqs.rb:3:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
  	remove_column :pqs, :press_interest, :boolean
  ^
db/migrate/20140619101444_remove_press_interest_and_seen_by_press_from_pqs.rb:3:3: C: Layout/Tab: Tab detected.
  	remove_column :pqs, :press_interest, :boolean
  ^
db/migrate/20140619101444_remove_press_interest_and_seen_by_press_from_pqs.rb:3:4: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
  	remove_column :pqs, :press_interest, :boolean
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140619101444_remove_press_interest_and_seen_by_press_from_pqs.rb:4:3: C: Layout/Tab: Tab detected.
  	remove_column :pqs, :seen_by_press, :boolean
  ^
db/migrate/20140930104039_create_versions.rb:4:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      t.string   :item_type, :null => false
                             ^^^^^^^^
db/migrate/20140930104039_create_versions.rb:5:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      t.integer  :item_id,   :null => false
                             ^^^^^^^^
db/migrate/20140930104039_create_versions.rb:6:30: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      t.string   :event,     :null => false
                             ^^^^^^^^
db/migrate/20140520093407_devise_invitable_add_to_users.rb:3:5: C: Rails/BulkChangeTable: You can combine alter queries using bulk: true options.
    change_table :users do |t|
    ^^^^^^^^^^^^^^^^^^^
db/migrate/20140520093407_devise_invitable_add_to_users.rb:9:33: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      t.references :invited_by, :polymorphic => true
                                ^^^^^^^^^^^^^^^
db/migrate/20140520093407_devise_invitable_add_to_users.rb:12:39: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      t.index      :invitation_token, :unique => true # for invitable
                                      ^^^^^^^^^^
db/migrate/20140520093407_devise_invitable_add_to_users.rb:12:55: C: Style/InlineComment: Avoid trailing inline comments.
      t.index      :invitation_token, :unique => true # for invitable
                                                      ^^^^^^^^^^^^^^^
db/migrate/20140520093407_devise_invitable_add_to_users.rb:22:40: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
      t.remove_references :invited_by, :polymorphic => true
                                       ^^^^^^^^^^^^^^^
db/migrate/20140520093407_devise_invitable_add_to_users.rb:25:23: C: Layout/ExtraSpacing: Unnecessary spacing detected.
    change_column_null    :users, :encrypted_password, false
                      ^^^
db/migrate/20140520093407_devise_invitable_add_to_users.rb:25:23: C: Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
    change_column_null    :users, :encrypted_password, false
                      ^^^^
db/migrate/20140515120526_add_flags_to_pq.rb:3:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
  	change_table :pqs do |t|
  ^
db/migrate/20140515120526_add_flags_to_pq.rb:3:3: C: Layout/Tab: Tab detected.
  	change_table :pqs do |t|
  ^
db/migrate/20140515120526_add_flags_to_pq.rb:3:4: C: Rails/BulkChangeTable: You can combine alter queries using bulk: true options.
  	change_table :pqs do |t|
   ^^^^^^^^^^^^^^^^^
db/migrate/20140515120526_add_flags_to_pq.rb:4:3: C: Layout/Tab: Tab detected.
  		t.boolean :press_interest
  ^^
db/migrate/20140515120526_add_flags_to_pq.rb:4:4: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
  		t.boolean :press_interest
   ^
db/migrate/20140515120526_add_flags_to_pq.rb:5:3: C: Layout/Tab: Tab detected.
  		t.boolean :finance_interest
  ^^
db/migrate/20140515120526_add_flags_to_pq.rb:6:3: C: Layout/Tab: Tab detected.
  		t.boolean :seen_by_press
  ^^
db/migrate/20140515120526_add_flags_to_pq.rb:7:3: C: Layout/Tab: Tab detected.
  		t.boolean :seen_by_finance
  ^^
db/migrate/20140515120526_add_flags_to_pq.rb:8:3: C: Layout/Tab: Tab detected.
  	end
  ^
db/migrate/20140522140022_change_pin_to_uin_on_pqs.rb:3:2: C: Layout/Tab: Tab detected.
 	  remove_column :pqs, :pin, :string
 ^
db/migrate/20140522140022_change_pin_to_uin_on_pqs.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
 	  remove_column :pqs, :pin, :string
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140522140022_change_pin_to_uin_on_pqs.rb:4:1: C: Layout/Tab: Tab detected.
	  add_column :pqs, :uin, :string
^
db/migrate/20140522140022_change_pin_to_uin_on_pqs.rb:4:4: C: Layout/IndentationConsistency: Inconsistent indentation detected.
	  add_column :pqs, :uin, :string
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140908113909_add_date_ordering_fields_to_pqs.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column :pqs, :days_from_date_for_answer, :integer
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20150331154333_remove_sorting_related_columns.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    remove_column(:pqs, :date_for_answer_has_passed)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20150331154333_remove_sorting_related_columns.rb:15:3: C: Style/EmptyMethod: Put empty method definitions on a single line.
  def down ...
  ^^^^^^^^
db/migrate/20140602122813_add_acceptance_fields_to_pq_ao.rb:3:3: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
    	change_table :action_officers_pqs do |t|
  ^^^
db/migrate/20140602122813_add_acceptance_fields_to_pq_ao.rb:3:5: C: Layout/Tab: Tab detected.
    	change_table :action_officers_pqs do |t|
    ^
db/migrate/20140602122813_add_acceptance_fields_to_pq_ao.rb:3:6: C: Rails/BulkChangeTable: You can combine alter queries using bulk: true options.
    	change_table :action_officers_pqs do |t|
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140602122813_add_acceptance_fields_to_pq_ao.rb:4:5: C: Layout/Tab: Tab detected.
    		t.boolean :accept
    ^^
db/migrate/20140602122813_add_acceptance_fields_to_pq_ao.rb:4:7: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
    		t.boolean :accept
      
db/migrate/20140602122813_add_acceptance_fields_to_pq_ao.rb:5:9: C: Layout/IndentationConsistency: Inconsistent indentation detected.
        t.boolean :reject
        ^^^^^^^^^^^^^^^^^
db/migrate/20140602122813_add_acceptance_fields_to_pq_ao.rb:6:9: C: Layout/IndentationConsistency: Inconsistent indentation detected.
        t.boolean :transfer
        ^^^^^^^^^^^^^^^^^^^
db/migrate/20140602122813_add_acceptance_fields_to_pq_ao.rb:7:9: C: Layout/IndentationConsistency: Inconsistent indentation detected.
        t.string :note
        ^^^^^^^^^^^^^^
db/migrate/20140602122813_add_acceptance_fields_to_pq_ao.rb:8:7: C: Layout/BlockAlignment: end at 8, 6 is not aligned with change_table :action_officers_pqs do |t| at 3, 5.
      end
      ^^^
db/migrate/20140602122813_add_acceptance_fields_to_pq_ao.rb:9:5: W: Layout/DefEndAlignment: end at 9, 4 is not aligned with def at 2, 2.
    end
    ^^^
db/migrate/20150414110052_change_case_on_full_disclosure.rb:6:3: C: Style/EmptyMethod: Put empty method definitions on a single line.
  def down ...
  ^^^^^^^^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:3:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
  	change_table :pqs do |t|
  ^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:3:3: C: Layout/Tab: Tab detected.
  	change_table :pqs do |t|
  ^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:3:4: C: Rails/BulkChangeTable: You can combine alter queries using bulk: true options.
  	change_table :pqs do |t|
   ^^^^^^^^^^^^^^^^^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:4:2: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
  		t.string :member_name
 ^^^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:4:3: C: Layout/Tab: Tab detected.
  		t.string :member_name
  ^^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:5:3: C: Layout/Tab: Tab detected.
  		t.string :member_constituency
  ^^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:6:3: C: Layout/Tab: Tab detected.
  		t.string :house_name
  ^^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:7:3: C: Layout/Tab: Tab detected.
  		t.date :date_for_answer
  ^^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:8:3: C: Layout/Tab: Tab detected.
  		t.boolean :registered_interest
  ^^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:9:3: C: Layout/Tab: Tab detected.
  		t.rename :date_raised, :tabled_date
  ^^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:10:1: C: Layout/Tab: Tab detected.
	end
^
db/migrate/20140523122303_add_additional_pq_fields_for_import.rb:10:2: C: Layout/BlockAlignment: end at 10, 1 is not aligned with change_table :pqs do |t| at 3, 3.
	end
 ^^^
db/migrate/20150414145955_fix_db_states.rb:8:1: C: Layout/EmptyLines: Extra blank line detected.
db/migrate/20150414145955_fix_db_states.rb:9:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def down
  ^^^
db/migrate/20150414145955_fix_db_states.rb:9:3: C: Style/EmptyMethod: Put empty method definitions on a single line.
  def down ...
  ^^^^^^^^
db/migrate/20150414145955_fix_db_states.rb:10:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body beginning.
db/migrate/20150427162220_make_devise_users_lockable.rb:3:3: C: Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
     add_column :users, :failed_attempts, :integer, default: 0
  ^^^
db/migrate/20150427162220_make_devise_users_lockable.rb:3:6: C: Rails/BulkChangeTable: You can use change_table :users, bulk: true to combine alter queries.
     add_column :users, :failed_attempts, :integer, default: 0
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140623130543_add_pod_fields_to_pqs.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column :pqs, :pod_waiting, :datetime
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140623133712_add_ministerial_fields_to_pqs.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column :pqs, :sent_to_answering_minister, :datetime
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140729121149_add_transfer_in_fields_to_pqs.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column :pqs, :transfer_in_ogd_id, :integer
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140613102308_add_meta_fields_to_action_officers.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :action_officers, bulk: true to combine alter queries.
    add_column :action_officers, :phone, :string
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20150325111549_rename_pod_progress_records.rb:6:46: C: Layout/SpaceAfterComma: Space missing after comma.
        progress.update(name: name.gsub(/Pod/,'POD'))
                                             ^
db/migrate/20150325111549_rename_pod_progress_records.rb:13:3: C: Style/EmptyMethod: Put empty method definitions on a single line.
  def down ...
  ^^^^^^^^
db/migrate/20140612075050_add_deletion_flag_to_ao.rb:3:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
  	add_column :action_officers, :deleted, :boolean
  ^
db/migrate/20140612075050_add_deletion_flag_to_ao.rb:3:3: C: Layout/Tab: Tab detected.
  	add_column :action_officers, :deleted, :boolean
  ^
db/migrate/20140728102145_add_historical_reporting_fields_to_pqs.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column :pqs, :at_acceptance_directorate_id, :integer
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140509134114_change_pqs_table.rb:3:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
  	change_table :pqs do |t|
  ^
db/migrate/20140509134114_change_pqs_table.rb:3:3: C: Layout/Tab: Tab detected.
  	change_table :pqs do |t|
  ^
db/migrate/20140509134114_change_pqs_table.rb:4:1: C: Layout/Tab: Tab detected.
	  t.rename :PIN, :pin
^
db/migrate/20140509134114_change_pqs_table.rb:5:1: C: Layout/Tab: Tab detected.
	  t.rename :HouseID, :house_id
^
db/migrate/20140509134114_change_pqs_table.rb:6:1: C: Layout/Tab: Tab detected.
	  t.rename :RaisingMemberID, :raising_member_id
^
db/migrate/20140509134114_change_pqs_table.rb:7:1: C: Layout/Tab: Tab detected.
	  t.rename :DateRaised, :date_raised
^
db/migrate/20140509134114_change_pqs_table.rb:8:1: C: Layout/Tab: Tab detected.
	  t.rename :ResponseDue, :response_due
^
db/migrate/20140509134114_change_pqs_table.rb:9:1: C: Layout/Tab: Tab detected.
	  t.rename :Question, :question
^
db/migrate/20140509134114_change_pqs_table.rb:10:1: C: Layout/Tab: Tab detected.
	  t.rename :Answer, :answer
^
db/migrate/20140509134114_change_pqs_table.rb:11:1: C: Layout/Tab: Tab detected.
	end
^
db/migrate/20140509134114_change_pqs_table.rb:11:2: C: Layout/BlockAlignment: end at 11, 1 is not aligned with change_table :pqs do |t| at 3, 3.
	end
 ^^^
db/migrate/20140620134124_change_type_of_string_to_text.rb:6:3: C: Layout/EmptyLineBetweenDefs: Use empty lines between method definitions.
  def down
  ^^^
db/migrate/20140619081659_create_press_desks.rb:5:1: C: Layout/Tab: Tab detected.
	  t.boolean :deleted
^
db/migrate/20140619081659_create_press_desks.rb:5:4: C: Layout/IndentationConsistency: Inconsistent indentation detected.
	  t.boolean :deleted
   ^^^^^^^^^^^^^^^^^^
db/migrate/20140610105752_add_to_updated_at_pq_ao.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :action_officers_pqs, bulk: true to combine alter queries.
    add_column :action_officers_pqs, :updated_at, :datetime
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140516140344_devise_create_users.rb:5:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :email,              null: false, default: ""
                                                          ^^
db/migrate/20140516140344_devise_create_users.rb:6:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :encrypted_password, null: false, default: ""
                                                          ^^
db/migrate/20140516140344_devise_create_users.rb:33:1: C: Layout/EmptyLines: Extra blank line detected.
db/migrate/20150325143021_remove_progress.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column(:pqs, :state, :string, default: 'unassigned')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20150325143021_remove_progress.rb:12:3: C: Style/EmptyMethod: Put empty method definitions on a single line.
  def down ...
  ^^^^^^^^
db/migrate/20150325143021_remove_progress.rb:17:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for progress2state is too high. [12/6]
  def progress2state(progress_name) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140708133546_add_answer_tab_fields_to_pqs.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column :pqs, :answer_submitted, :datetime
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140708124628_add_new_ministerial_fields_to_pqs.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column :pqs, :sent_to_policy_minister, :datetime
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140731141909_add_counters_to_pq_ao.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :action_officers_pqs, bulk: true to combine alter queries.
    add_column :action_officers_pqs, :reminder_accept, :integer, :default => 0
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140731141909_add_counters_to_pq_ao.rb:3:66: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    add_column :action_officers_pqs, :reminder_accept, :integer, :default => 0
                                                                 ^^^^^^^^^^^
db/migrate/20140731141909_add_counters_to_pq_ao.rb:4:65: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    add_column :action_officers_pqs, :reminder_draft, :integer, :default => 0
                                                                ^^^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:2:25: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
  TABLES_WITH_DELETED = %w(action_officers ...
                        ^^^^^^^^^^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:2:28: C: Layout/FirstArrayElementLineBreak: Add a line break before the first element of a multi-line array.
  TABLES_WITH_DELETED = %w(action_officers
                           ^^^^^^^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:3:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    actionlist_members
    ^^^^^^^^^^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:4:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    deputy_directors
    ^^^^^^^^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:5:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    directorates
    ^^^^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:6:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    divisions
    ^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:7:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    minister_contacts
    ^^^^^^^^^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:8:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    ministers
    ^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:9:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    ogds
    ^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:10:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    press_desks
    ^^^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:11:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    press_officers
    ^^^^^^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:12:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    trim_links
    ^^^^^^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:13:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    users
    ^^^^^
db/migrate/20141119140507_set_default_for_all_deletable_models.rb:14:5: C: Layout/AlignArray: Align the elements of an array literal if they span more than one line.
    watchlist_members)
    ^^^^^^^^^^^^^^^^^
db/migrate/20140708123410_remove_old_minister_fields_from_pqs.rb:3:3: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
   remove_column :pqs, :sent_to_answering_minister, :datetime
  ^
db/migrate/20140708123410_remove_old_minister_fields_from_pqs.rb:3:4: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
   remove_column :pqs, :sent_to_answering_minister, :datetime
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140721111910_add_transfer_out_ogd_to_pq.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column :pqs, :transfer_out_ogd_id, :integer
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20140613111905_create_divisions.rb:6:16: C: Layout/Tab: Tab detected.
      t.boolean	:deleted
               ^
db/migrate/20140616114727_add_minister_ids_to_pqs.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :pqs, bulk: true to combine alter queries.
    add_column :pqs, :minister_id, :integer
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
redeploy/pq_database_fixer.rb:6:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
redeploy/pq_database_fixer.rb:20:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
redeploy/pq_database_fixer.rb:23:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
redeploy/pq_state_comparer.rb:3:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
redeploy/pq_state_comparer.rb:9:19: C: Style/SymbolProc: Pass &:update_state! as an argument to each instead of a block.
      Pq.all.each { |q| q.update_state! }
                  ^^^^^^^^^^^^^^^^^^^^^^^
redeploy/pq_state_comparer.rb:13:39: C: Layout/DotPosition: Place the . on the next line, together with the method name.
      record_set = Pq.joins(:progress).
                                      ^
redeploy/pq_state_comparer.rb:14:9: C: Layout/MultilineMethodCallIndentation: Align where with Pq.joins(:progress). on line 13.
        where("replace(upper(pqs.state), ' ', '_') != replace(upper(progresses.name), ' ', '_')").
        ^^^^^
redeploy/pq_state_comparer.rb:14:98: C: Layout/DotPosition: Place the . on the next line, together with the method name.
        where("replace(upper(pqs.state), ' ', '_') != replace(upper(progresses.name), ' ', '_')").
                                                                                                 ^
redeploy/pq_state_comparer.rb:15:9: C: Layout/MultilineMethodCallIndentation: Align order with Pq.joins(:progress). on line 13.
        order(:id)
        ^^^^^
redeploy/pq_state_comparer.rb:18:32: C: Performance/OpenStruct: Consider using Struct over OpenStruct to optimize the performance.
        @results << OpenStruct.new(id: r.id, uin: r.uin, state: r.state, progress: r.progress.name)
                               ^^^
redeploy/pq_state_comparer.rb:29:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
redeploy/pq_fixer.rb:3:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
redeploy/pq_fixer.rb:10:7: C: Style/RedundantBegin: Redundant begin block detected.
      begin
      ^^^^^
redeploy/pq_fixer.rb:11:13: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        log("fixing PQID")
            ^^^^^^^^^^^^^
redeploy/pq_fixer.rb:13:1: C: Layout/EmptyLines: Extra blank line detected.
redeploy/pq_fixer.rb:14:12: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
        if %w{ unassigned no_response rejected }.include?(@pq.state)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:14:15: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
        if %w{ unassigned no_response rejected }.include?(@pq.state)
              ^
redeploy/pq_fixer.rb:14:47: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
        if %w{ unassigned no_response rejected }.include?(@pq.state)
                                              ^
redeploy/pq_fixer.rb:22:12: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
        if %w{ pod_query with_pod}.include?(@pq.state)
           ^^^^^^^^^^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:22:15: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
        if %w{ pod_query with_pod}.include?(@pq.state)
              ^
redeploy/pq_fixer.rb:23:44: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          #   for pod_query, pod_clearance, 
                                           ^
redeploy/pq_fixer.rb:36:30: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          # for with minister 
                             ^
redeploy/pq_fixer.rb:75:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
redeploy/pq_fixer.rb:87:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
redeploy/pq_fixer.rb:93:17: C: Layout/FirstParameterIndentation: Indent the first parameter one step more than the start of the previous line.
                pq_id: @pq.id, ...
                ^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:94:53: C: Style/TrailingCommaInArguments: Avoid comma after the last parameter of a method call.
                action_officer_id: ao_placeholder.id,
                                                    ^
redeploy/pq_fixer.rb:98:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
redeploy/pq_fixer.rb:100:9: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        "assigned to and accepted by ActionOfficer with id: " + 
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:100:63: C: Style/LineEndConcatenation: Use \ instead of + or << to concatenate those strings.
        "assigned to and accepted by ActionOfficer with id: " + 
                                                              ^
redeploy/pq_fixer.rb:100:64: C: Layout/TrailingWhitespace: Trailing whitespace detected.
        "assigned to and accepted by ActionOfficer with id: " + 
                                                               ^
redeploy/pq_fixer.rb:103:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
redeploy/pq_fixer.rb:108:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @ao_placeholder ||=  
                         ^^
redeploy/pq_fixer.rb:110:43: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          deputy_director: dd_placeholder, 
                                          ^
redeploy/pq_fixer.rb:111:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          name:            'AO not known placeholder', 
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:111:55: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          name:            'AO not known placeholder', 
                                                      ^
redeploy/pq_fixer.rb:112:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          email:           'pqsupport@digital.justice.gov.uk', 
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:112:63: C: Layout/TrailingWhitespace: Trailing whitespace detected.
          email:           'pqsupport@digital.justice.gov.uk', 
                                                              ^
redeploy/pq_fixer.rb:113:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          press_desk:      pd_placeholder,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:114:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          deleted:         true
          ^^^^^^^^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:119:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @dd_placeholder ||= 
                         ^
redeploy/pq_fixer.rb:122:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          email:    'pqsupport@digital.justice.gov.uk',
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:123:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          name:     'DD for AO not known placeholder',
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:124:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          deleted:  true
          ^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:129:26: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @pd_placeholder ||= 
                         ^
redeploy/pq_fixer.rb:136:27: C: Layout/TrailingWhitespace: Trailing whitespace detected.
      @dir_placeholder ||= 
                          ^
redeploy/pq_fixer.rb:143:7: C: Naming/MemoizedInstanceVariableName: Memoized variable @div_placholder does not match method name div_placeholder. Use @div_placeholder instead.
      @div_placholder ||=
      ^^^^^^^^^^^^^^^
redeploy/pq_fixer.rb:145:11: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
          name:        'Unknown',
          ^^^^^^^^^^^^^^^^^^^^^^

439 files inspected, 4733 offenses detected
